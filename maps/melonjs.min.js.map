{"version":3,"sources":["melonjs.min.js"],"names":["domReady","isReady","document","body","setTimeout","removeEventListener","window","fn","readyList","length","call","define","amd","me","bindReady","readyBound","readyState","addEventListener","onReady","push","this","skipAutoInit","boot","init","throttle","delay","no_trailing","callback","deferTimer","last","performance","now","elasped","args","arguments","apply","clearTimeout","console","log","info","error","alert","Array","prototype","slice","join","Function","bind","Empty","that","target","TypeError","bound","result","concat","Object","defer","defineProperty","obj","prop","desc","__defineGetter__","get","set","__defineSetter__","create","o","Fn","is","x","y","assign","enumerable","configurable","writable","value","undefined","to","i","nextSource","keysArray","keys","nextIndex","len","nextKey","getOwnPropertyDescriptor","extend","Class","methods","mixins","forEach","mixin","apply_methods","__methods__","_super","descriptor","method","superClass","Jay","constructor","Error","msg","name","message","Math","sign","isNaN","Number","clamp","low","high","random","min","max","randomFloat","weightedRandom","pow","round","num","dec","powres","toHex","charAt","degToRad","angle","PI","radToDeg","String","trim","rtrim","replace","trimLeft","trimRight","isNumeric","isBoolean","trimmed","includes","indexOf","res","c","charCodeAt","toString","remove","splice","scope","j","isArray","vArg","entry","TypedArray","a","source","offset","Float32Array","Uint8Array","Uint16Array","Uint32Array","Date","getTime","timeOffset","timing","navigationStart","exports","createCollection","proto","objectOnly","Collection","_keys","_values","_itp","sharedSize","add","sharedDelete","key","has","p","sharedGet","list","setHas","mapHas","sharedSet","sharedAdd","sharedClear","sharedValues","sharedIterator","itp","array","array2","done","next","v","k","sharedForEach","context","it","entries","r","WeakMap","delete","clear","Map","values","Set","WeakSet","global","parseHash","hash","location","substr","split","filter","kv","shift","mod","version","sys","fps","updatesPerSecond","interpolation","scale","gravity","stopOnAudioError","pauseOnBlur","resumeOnFocus","stopOnBlur","preRender","checkVersion","first","second","b","me_initialized","device","_check","save","_init","game","HASH","loader","setNocache","nocache","timer","state","pool","isMobile","input","_enableKeyboardEvent","levelDirector","reset","api","initialized","isDirty","isAlwaysDirty","frameCounter","frameRate","accumulator","accumulatorMax","accumulatorUpdateDelta","stepSize","updateDelta","lastUpdateStart","updateAverageDelta","renderer","viewport","world","mergeGroup","sortOn","tmxRenderer","onLevelLoaded","width","height","video","getWidth","getHeight","Viewport","Container","_root","collision","event","publish","GAME_INIT","_translatePointerEvents","quadTree","destroy","getParentContainer","child","ancestor","repaint","update","time","_updateGamepads","getDelta","insertContainer","lastUpdate","draw","translateX","pos","translateY","transform","translate","prepareSurface","blitSurface","capitalize","str","substring","toUpperCase","agent","vendors","prefixed","uc_name","some","vendor","setPrefixed","onDeviceMotion","e","reading","accelerationX","accelerationY","accelerationZ","accelerationIncludingGravity","z","onDeviceRotate","gamma","beta","alpha","accelInitialized","deviceOrientationInitialized","devicePixelRatio","_detectDevice","pointerEnabled","navigator","maxTouchPoints","gesture","touch","hasAccelerometer","Windows","Devices","Sensors","hasPointerLockSupport","exitPointerLock","DeviceOrientationEvent","hasDeviceOrientation","hasFullscreenSupport","mozFullScreenEnabled","exitFullscreen","vibrate","localStorage","stop","pause","restart","resume","hidden","visibilityChange","mozHidden","msHidden","webkitHidden","iOS","ua","match","android","android2","wp","BlackBerry","Kindle","ejecta","userAgent","nativeBase64","orientation","language","browserLanguage","userLanguage","requestFullscreen","element","getWrapper","mozRequestFullScreen","getPixelRatio","_context","getScreenContext","Renderer","getContext2d","createElement","_devicePixelRatio","_backingStoreRatio","getStorage","type","turnOnPointerLock","fullscreenchange","mozFullScreenElement","requestPointerLock","turnOffPointerLock","watchAccelerometer","accelerometer","Accelerometer","getDefault","minInterval","minimumReportInterval","Interval","reportInterval","unwatchAccelerometer","Device","watchDeviceOrientation","unwatchDeviceOrientation","pattern","Howler","noAudio","framecount","framedelta","delta","step","ceil","minstep","timers","timerId","clearTimer","updateTimers","dt","_timer","pauseable","isPaused","elapsed","repeat","tick","setInterval","timeoutID","clearInterval","intervalID","countFPS","entityClass","register","Entity","CollectableEntity","LevelEntity","Tween","Color","Particle","Sprite","Vector2d","className","entityObj","pooling","class","pull","entity","pop","onResetEvent","purge","exists","_set","setZero","setV","sub","scaleV","div","n","abs","clampSelf","minV","maxV","floor","floorSelf","ceilSelf","negate","negateSelf","copy","equals","normalize","d","perp","rotate","cos","sin","dotProduct","length2","sqrt","distance","dx","dy","acos","project","projectN","clone","Vector3d","Z","_vz","dz","ObservableVector2d","settings","_x","onUpdate","_y","setCallback","setMuted","toVector2d","ObservableVector3d","_z","_Z","toVector3d","Matrix2d","f","g","h","val","identity","multiply","a0","a1","a3","a4","b0","b1","b3","b4","b6","b7","vectorMultiply","s","translateV","isIdentity","Ellipse","w","_bounds","radius","NaN","radiusV","radiusSq","ratio","shapeType","setShape","hW","hH","updateBounds","containsPointV","containsPoint","getBounds","rx","ry","Rect","Polygon","points","recalc","edges","normals","intersects","posx","posy","iy","ix","jy","jx","Infinity","right","bottom","point","_width","_height","resize","rect","union","x1","left","y1","top","overlaps","contains","toPolygon","Line","start","end","Body","shapes","collisionMask","types","ALL_OBJECT","collisionType","ENEMY_OBJECT","vel","accel","friction","maxVel","falling","jumping","addShape","shape","batchInsert","addShapesFromJSON","json","id","data","rigidBodies","origin","self","polygons","poly","circles","circle","cx","cy","getShape","index","removeShape","removeShapeAt","setCollisionMask","bitmask","respondToCollision","response","overlap","overlapV","onBodyUpdate","setVelocity","setMaxVelocity","setFriction","applyFriction","fx","nx","fy","ny","computeVelocity","Quadtree","bounds","max_objects","max_levels","level","objects","nodes","QT_ARRAY","QT_ARRAY_POP","_qt","QuadTree","QT_ARRAY_PUSH","qt","nextLevel","subWidth","subHeight","getIndex","rw","rh","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","container","children","insert","item","retrieve","returnObjects","sort","flattenPointsOn","normal","MAX_VALUE","dot","isSeparatingAxis","aPos","bPos","aPoints","bPoints","axis","rangeA","T_ARRAYS","rangeB","offsetV","T_VECTORS","projectedOffset","aInB","bInA","option1","option2","option11","option22","absOverlap","overlapN","vornoiRegion","line","len2","dp","LEFT_VORNOI_REGION","RIGHT_VORNOI_REGION","MIDDLE_VORNOI_REGION","maxDepth","maxChildren","NO_OBJECT","PLAYER_OBJECT","NPC_OBJECT","COLLECTABLE_OBJECT","ACTION_OBJECT","PROJECTILE_OBJECT","WORLD_SHAPE","USER","subscribe","LEVEL_LOADED","ResponseObject","indexShapeA","indexShapeB","shouldCollide","check","objA","responseObject","objB","candidates","aLen","bLen","indexA","shapeA","indexB","shapeB","onCollision","testPolygonPolygon","polyA","polyB","aNormals","bNormals","posA","_absPos","posB","testEllipseEllipse","ellipseA","ellipseB","differenceV","radiusA","radiusB","totalRadius","totalRadiusSq","distanceSq","dist","testPolygonEllipse","circlePos","radius2","edge","prev","region","inRegion","point2","distAbs","testEllipsePolygon","resa","Renderable","isRenderable","GUID","inViewport","alwaysUpdate","updateWhenPaused","isPersistent","floating","anchorPoint","updateBoundsPos","setOpacity","getOpacity","resizeBounds","newX","newY","warn","_scale","scaleFlag","lastflipX","lastflipY","flipX","flipY","rotation","_sourceAngle","flickering","flickerDuration","flickercb","flickerState","isSprite","image","getRegion","getTexture","framewidth","frameheight","utils","getImage","isFlickering","flicker","duration","flip","ratioX","ratioY","globalAlpha","setGlobalAlpha","xpos","ypos","ax","ay","drawImage","restore","onDestroyEvent","AnimationSheet","animationpause","animationspeed","anim","resetAnim","current","textureAtlas","atlas","atlasIndices","cache","getAtlas","addAnimation","setCurrentAnimation","frames","idx","counter","frameObject","frame","frameObjectName","_preserve_dt","setAnimationFrame","isCurrentAnimation","getAnimationFrameObjectByIndex","getCurrentAnimationFrame","MIN","MAX","minX","minY","maxX","maxY","AXIS","NONE","HORIZONTAL","VERTICAL","BOTH","follow_axis","_shake","intensity","onComplete","_fadeOut","color","tween","_fadeIn","setDeadzone","_followH","deadzone","_followV","updateTarget","getCurrentLevel","setBounds","moveTo","VIEWPORT_ONRESIZE","follow","move","VIEWPORT_ONCHANGE","updated","shake","fadeOut","fadeIn","focusOn","isVisible","localToWorld","worldToLocal","clearSurface","GUI_Object","isClickable","holdThreshold","isHoldable","hover","holdTimeout","released","clicked","which","hold","onClick","enter","onOver","leave","release","onOut","onRelease","onHold","onActivateEvent","registerPointerEvent","onDeactivateEvent","releasePointerEvent","deferredRemove","keepalive","removeChildNow","globalFloatingCounter","pendingSort","autoSort","autoDepth","drawCount","childBounds","addChild","createGUID","isAttachedToRoot","addChildAt","swapChildren","child2","getChildIndex","index2","getChildAt","hasChild","getChildByProp","objList","RegExp","test","compare","getChildByType","_class","getChildByName","getChildByGUID","guid","updateChildBounds","removeChild","childIndex","setChildsProperty","recursive","moveUp","moveDown","moveToTop","moveToBottom","_sortZ","_sortReverseZ","_sortX","_sortY","isFloating","resetTransform","renderable","spacing","margin","alive","distanceTo","distanceToPoint","angleTo","atan2","angleToPoint","_pos","ScreenObject","lastTime","requestAnimationFrame","cancelAnimationFrame","currTime","timeToCall","_startRunLoop","_animFrameId","_state","_renderFrame","_resumeRunLoop","_isPaused","_pauseRunLoop","_stopRunLoop","_switchState","_screenObject","screen","_extraArgs","_onSwitchComplete","_fade","_pauseTime","LOADING","MENU","READY","PLAY","GAMEOVER","GAME_END","SCORE","CREDITS","SETTINGS","onPause","onResume","onStop","onRestart","DefaultLoadingScreen","music","isRunning","audio","pauseTrack","STATE_STOP","STATE_PAUSE","resumeTrack","STATE_RESTART","STATE_RESUME","so","transition","effect","setTransition","enable","change","isCurrent","ProgressBar","invalidate","barHeight","progress","onProgressUpdate","setColor","fillRect","IconLogo","iconCanvas","beginPath","bezierCurveTo","lineTo","closePath","fillStyle","fill","lineWidth","strokeStyle","lineJoin","miterLimit","stroke","TextLogo","logo1","Font","logo2","bold","textBaseline","logo1_width","measureText","ColorLayer","progressBar","loaderHdlr","LOADER_PROGRESS","resizeHdlr","createCanvas","icon","unsubscribe","checkLoadStatus","loadCount","resourceCount","onload","LOADER_COMPLETE","preloadImage","img","onerror","imgList","Image","src","preloadTMX","tmxData","addToTMXList","tmxList","addTMXLevel","xmlhttp","XMLHttpRequest","format","getFileExtension","overrideMimeType","open","ontimeout","onreadystatechange","status","responseText","responseXML","DOMParser","parseFromString","TMXUtils","parse","map","tilesets","JSON","send","preloadJSON","jsonList","preloadBinary","httpReq","responseType","arrayBuffer","byteArray","buffer","byteLength","fromCharCode","binList","onProgress","onResourceLoaded","getLoadProgress","onLoadingError","preload","load","unload","dispose","unloadAll","hasOwnProperty","getTMX","elt","getBinary","getJSON","runits","toPX","font","size","textAlign","fontSize","lineHeight","setFont","gid","italic","font_names","CSSval","parseFloat","text","fontContext2D","toRGBA","strings","_alpha","drawFont","_drawFont","drawStroke","string","dw","search","BitmapFont","firstChar","sSize","charCount","loadFontMetrics","lX","soundLoadError","sound_name","onerror_cb","retry_counter","errmsg","disable","audioTracks","current_track_id","audioFormat","audioFormats","unmuteAll","muteAll","sound","onload_cb","urls","Howl","volume","onloaderror","play","loop","onend","instance_id","on","once","fade","from","off","playTrack","stopTrack","getCurrentTrack","setVolume","getVolume","mute","unmute","autoDetectRenderer","options","WebGLRenderer","CanvasRenderer","canvas","deferResizeId","designRatio","designWidth","designHeight","maxWidth","maxHeight","wrapper","doubleBuffering","autoScale","scaleMethod","transparent","antiAlias","CANVAS","WEBGL","AUTO","game_width","game_height","webgl","game_width_zoom","game_height_zoom","zoomX","zoomY","WINDOW_ONRESIZE","WINDOW_ONORIENTATION_CHANGE","onresize","getElementById","appendChild","getContext","style","getComputedStyle","setMaxSize","parseInt","getPos","getScreenCanvas","getBoundingClientRect","screencanvas","_canvas","scaleX","scaleY","outerWidth","outerHeight","parentNodeWidth","parentNodeHeight","parentNode","_max_width","innerWidth","_max_height","innerHeight","screenRatio","sWidth","sHeight","updateDisplaySize","scaleCanvas","_offset","gameWidthZoom","gameHeightZoom","backBufferCanvas","globalColor","applyRGBFilter","object","option","imgpix","getPixels","pix","grayscale","brightness","refColor","parseCSS","pixel","putImageData","getCanvas","opaque","isCocoonJS","antialias","setAntiAlias","glArray","cssStyle","TextureCache","max_size","units","validate","meta","app","filename","texture","Texture","put","getUnit","backBufferContext2D","globalCompositeOperation","ctx","col","setTransform","createPattern","drawPattern","fillArc","antiClockwise","arc","setLineWidth","strokeArc","strokeEllipse","hw","hh","lx","ty","by","xmagic","ymagic","xmin","xmax","ymin","ymax","strokeLine","startX","startY","endX","endY","strokePolygon","strokeRect","drawShape","mat2d","nhPI","cached","exporter","build","buildFromSpriteSheet","originX","originY","hasTextureAnchorPoint","spriteSourceSize","sourceSize","pivot","rotated","spritecount","count","createSpriteFromName","createAnimationFromName","names","tpAtlas","indices","shader","getShader","gl","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fnHash","bool","int","float","vec2","vec3","vec4","bvec2","bvec3","bvec4","ivec2","ivec3","ivec4","mat2","mat3","mat4","sampler2D","vertex","fragment","program","attributes","uniforms","handle","createProgram","attrRx","uniRx","locations","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","exec","attr","getAttribLocation","enableVertexAttribArray","getUniformLocation","fnv","defineProperties","createTexture","unit","LINEAR","NEAREST","rs","REPEAT","CLAMP_TO_EDGE","rt","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","getContextGL","colorStack","_matrixStack","_linePoints","globalMatrix","Compositor","compositor","maxTextures","createFillTexture","createFontTexture","fillTexture","uploadTexture","fontTexture","flush","matrix","addQuad","clearRect","sx","sy","sw","sh","dh","setProjection","drawLine","_addStMap","stMap","_insertRegion","ELEMENT_OFFSET","VERTEX_SIZE","BYTES_PER_ELEMENT","VERTEX_OFFSET","COLOR_OFFSET","VERTEX_ELEMENT","TEXTURE_OFFSET","COLOR_ELEMENT","REGION_OFFSET","TEXTURE_ELEMENT","getParameter","MAX_TEXTURE_IMAGE_UNITS","uMatrix","precision","getShaderPrecisionFormat","HIGH_FLOAT","lineShader","quadShader","out","sb","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STREAM_DRAW","sbSize","sbIndex","stream","ib","ELEMENT_ARRAY_BUFFER","createIB","STATIC_DRAW","vertexAttribPointer","aVertex","FLOAT","aColor","aTexture","aRegion","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","force","samplers","uSampler","MAX_LENGTH","resizeSB","useShader","toGL","m","v0","v1","v2","v3","idx0","idx1","idx2","idx3","ELEMENT_SIZE","subarray","drawElements","TRIANGLES","UNSIGNED_SHORT","uColor","drawArrays","LINE_STRIP","LINE_LOOP","COLOR_BUFFER_BIT","_preventDefault","stopPropagation","cancelBubble","preventDefault","returnValue","_KeyBinding","keyStatus","keyLock","keyLocked","keyRefs","preventDefaultForKeys","keyboardInitialized","_keydown","_keyup","keyCode","mouseButton","action","KEYDOWN","trigger","KEYUP","KEY","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESC","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","PRINT_SCREEN","INSERT","DELETE","NUM0","NUM1","NUM2","NUM3","NUM4","NUM5","NUM6","NUM7","NUM8","NUM9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","WINDOW_KEY","NUMPAD0","NUMPAD1","NUMPAD2","NUMPAD3","NUMPAD4","NUMPAD5","NUMPAD6","NUMPAD7","NUMPAD8","NUMPAD9","MULTIPLY","ADD","SUBSTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","PLUS","COMMA","MINUS","PERIOD","FORWAND_SLASH","GRAVE_ACCENT","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","SINGLE_QUOTE","isKeyPressed","triggerKeyEvent","keycode","bindKey","lock","unlockKey","unbindKey","keybinding","registerEventListener","eventList","enablePointerEvent","pointerInitialized","WINDOW_ONSCROLL","activeEventList","pointerEventList","msPointerEnabled","MSPointerEventList","touchEventList","mouseEventList","onPointerEvent","wheeltype","onMouseWheel","throttlingInterval","POINTER_MOVE","onMoveEvent","triggerEvent","handlers","pointerId","callbacks","dispatchEvent","handled","viewportOffset","changedTouches","changedTouch","timeStamp","lastTimeStamp","gameScreenX","gameScreenY","gameWorldX","gameWorldY","currentPointer","candidate","evtHandlers","gameX","gameLocalX","gameY","gameLocalY","parentPos","eventInBounds","POINTER_ENTER","POINTER_LEAVE","POINTER_UP","POINTER_CANCEL","updateCoordFromEvent","local","touches","l","t","globalToLocal","clientX","clientY","identifier","isPrimary","pointer","_event","deltaMode","deltaX","deltaY","deltaZ","wheelDelta","wheelDeltaX","button","POINTER_DOWN","MIDDLE","pixelRatio","bindPointer","unbindPointer","eventType","POINTERMOVE","defaultNormalizeFn","ouyaNormalizeFn","GAMEPAD","BUTTONS","L2","addMapping","mapping","expanded_id","vendorProductRE","_","sparse_id","leadingZeroRE","analog","buttons","normalize_fn","remap","bindings","axes","R2","GAMEPAD_CONNECTED","gamepad","GAMEPAD_DISCONNECTED","getGamepads","gamepads","mapped_button","mapped_axis","pressed","GAMEPAD_UPDATE","AXES","LX","LY","RX","RY","EXTRA_1","EXTRA_2","EXTRA_3","EXTRA_4","FACE_1","FACE_2","FACE_3","FACE_4","L1","R1","SELECT","BACK","START","FORWARD","L3","R3","bindGamepad","unbindGamepad","setGamepadDeadzone","setGamepadMapping","Base64","singleton","_keyStr","decode","atob","chr1","chr2","chr3","enc2","enc3","enc4","output","encode","btoa","enc1","GUID_base","GUID_index","removepath","removeext","decodeBase64","encodeBase64","decodeBase64AsArray","bytes","ar","decompress","decodeCSV","getBasename","path","lastIndexOf","arg","HTMLImageElement","getImageData","resetGUID","base","rgbaRx","hex3Rx","hex4Rx","hex6Rx","hex8Rx","cssToRGB","darken","lighten","cssColor","parseRGB","rgbColor","parseHex","hexColor","toFixed","toRGB","isReserved","getItem","props","setItem","stringify","removeItem","setTMXValue","eval","parseAttributes","attribute","nodeName","nodeValue","encoding","compression","decoded","layer","layers","animation","tile","tiles","tileset","imagewidth","imageheight","properties","property","xml","nodeType","hasChildNodes","childNodes","applyTMXProperties","TMXObjectGroup","tmxObjGroup","visible","opacity","_objects","tmxObj","TMXObject","getObjectCount","getObjectByIndex","isEllipse","isPolygon","isPolyLine","setTile","polygon","polyline","adjustPosition","parseTMXShapes","getTilesetByGid","tilewidth","tileheight","Tile","p1","p2","segments","SQRT2","SQRT1_2","getObjectPropertyByName","row","tileId","flippedX","flippedY","flippedAD","flipped","createTransform","getRenderable","animations","frameId","tileid","firstgid","TMXTileset","TileProperties","lastgid","tileoffset","isAnimated","cur","tileInfo","tileproperties","setTileProperty","hTileCount","columns","vTileCount","tilecount","getViewTileId","getTileProperties","drawTile","tmxTile","TMXTilesetGroup","getTilesetByIndex","invalidRange","offsetsStaggerX","offsetsStaggerY","TMXRenderer","cols","rows","canRender","TMXOrthogonalRenderer","pixelToTileCoords","pixelToTileX","pixelToTileY","tileToPixelCoords","drawTileLayer","maxTileSize","layerData","TMXIsometricRenderer","hTilewidth","hTileheight","tilex","tiley","isoPos","rowItr","TileEnd","rectEnd","startPos","inUpperHalf","inLeftHalf","shifted","columnItr","TMXHexagonalRenderer","hexsidelength","staggeraxis","staggerindex","sidelengthx","sidelengthy","sideoffsetx","sideoffsety","columnwidth","rowheight","centers","q","ret","referencePoint","rel","centerX","centerY","dc","nearest","minDist","offsets","_col","vpos","ImageLayer","_repeat","repeatX","repeatY","_updateLayerFn","updateLayer","vpChangeHdlr","vpResizeHdlr","vpLoadedHdlr","_pattern","bw","bh","TMXLayer","animatedTilesets","initFromJSON","canvasRenderer","initArray","setRenderer","getTileId","getTile","clearTile","getNewDefaultRenderer","setLayerData","readLayer","readImageLayer","imageLayer","readTileset","readObjectGroup","TMXTileMap","levelId","objectGroups","nextobjectid","backgroundcolor","readMapObjects","zOrder","background_image","addTo","flatten","_sort","_depth","getLayers","getObjects","targetContainer","isCollisionGroup","group","toLowerCase","safeLoadLevel","levels","getCurrentLevelId","currentLevelIdx","levelIdx","loadTMXLevel","setViewportBounds","onLoaded","resize_container","onresize_handler","addLevel","loadLevel","reloadLevel","previousLevel","levelCount","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_yoyo","_reversed","_delayTime","_startTime","_easingFunction","_interpolationFunction","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onCompleteCallback","_tweenTimeTracker","_resumeCallback","setProperties","Easing","Linear","None","Interpolation","field","amount","times","yoyo","easing","chain","onStart","isFinite","tmp","numChainedTweens","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","asin","Back","Bounce","Utils","Bezier","pw","bn","Bernstein","CatmullRom","p0","fc","Factorial","p3","t2","DRAGSTART","DRAGEND","channel","subs","setupAudioContext","AudioContext","webkitAudioContext","usingWebAudio","Audio","oncanplaythrough","canPlayEvent","muted","platform","appVersion","safari","standalone","masterGain","createGain","createGainNode","gain","connect","destination","HowlerGlobal","_codecs","_howls","_muted","_volume","autoSuspend","_autoSuspend","mobileAutoEnable","_setupCodecs","vol","_webAudio","ids","_getSoundIds","_soundById","_node","close","codecs","ext","audioTest","mpegTest","canPlayType","isOpera","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","_enableMobileAudio","isTouch","msMaxTouchPoints","_mobileEnabled","unlock","createBufferSource","noteOn","onended","disconnect","suspend","_sounds","_paused","_suspendTimer","then","_resumeAfterSuspend","_autoResume","_autoplay","autoplay","_format","_html5","html5","_loop","_pool","_preload","_rate","rate","_sprite","sprite","_src","_loaded","_endTimers","_queue","_onend","_onfade","onfade","_onload","_onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","url","_emit","protocol","Sound","loadBuffer","_ended","_id","_inactiveSound","seek","_seek","timeout","_start","_stop","node","playWebAudio","_refreshBuffer","setValueAtTime","currentTime","_playStart","bufferSource","noteGrainOn","_clearTimer","playHtml5","playbackRate","listener","_stopFade","noteOff","linearRampToValueAtTime","_timeout","diff","dir","stepLen","_interval","cancelScheduledValues","playing","sounds","_errorFn","_loadFn","events","_loadQueue","task","_drain","limit","cnt","_panner","loopStart","loopEnd","howl","_parent","parent","paused","_errorListener","_loadListener","code","__default","loadSound","bs","bc","dataView","decodeAudioData","xhr","safeXhrSend","arraybuffer","plugins","plugin","Base","patch","_patched","_args","instance","DraggableEntity","Input","Event","Vector","dragging","dragId","grabOffset","removePointerEvent","initEvents","mouseDown","translatePointerEvent","mouseUp","dragMove","draggable","dragStart","dragEnd","translation","DroptargetEntity","CHECKMETHOD_OVERLAP","CHECKMETHOD_CONTAINS","checkMethod","checkOnMe","setCheckMethod","draggableEntity","drop","nextlevel","fading","gotolevel","loadLevelSettings","onFadeComplete","goTo","ParticleEmitterSettings","totalParticles","angleVariation","minLife","maxLife","speed","speedVariation","minRotation","maxRotation","minStartScale","maxStartScale","minEndScale","maxEndScale","wind","followTrajectory","textureAdditive","onlyInViewport","maxParticles","frequency","framesToSkip","ParticleEmitter","_stream","_frequencyTimer","_durationTimer","_enabled","ParticleContainer","getRandomPoint","vector","defaults","addParticles","particle","streamParticles","stopStream","burstParticles","total","particlesCount","emitter","_viewport","_updateCount","_dt","_emitter","gco","life","startLife","startScale","endScale","_deltaInv","skew","ageRatio"],"mappings":"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","file":"../melonjs/melonjs.min.js","sourcesContent":["/**\n * melonJS Game Engine v3.0.1\n * http://www.melonjs.org\n * @license {@link http://www.opensource.org/licenses/mit-license.php|MIT}\n * @copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n */\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n(function () {\n\n    /**\n     * The built in window Object\n     * @external window\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Window.window|window}\n     */\n\n    /**\n     * (<b>m</b>)elonJS (<b>e</b>)ngine : All melonJS functions are defined inside\n     * of this namespace.\n     * <p>You generally should not add new properties to this namespace as it may be\n     * overwritten in future versions.</p>\n     * @name me\n     * @namespace\n     */\n    window.me = window.me || {};\n\n    /*\n     * DOM loading stuff\n     */\n    var readyBound = false, isReady = false, readyList = [];\n\n    // Handle when the DOM is ready\n    function domReady() {\n        // Make sure that the DOM is not already loaded\n        if (!isReady) {\n            // be sure document.body is there\n            if (!document.body) {\n                return setTimeout(domReady, 13);\n            }\n\n            // clean up loading event\n            if (document.removeEventListener) {\n                document.removeEventListener(\n                    \"DOMContentLoaded\",\n                    domReady,\n                    false\n                );\n            }\n            else {\n                window.removeEventListener(\"load\", domReady, false);\n            }\n\n            // Remember that the DOM is ready\n            isReady = true;\n\n            // execute the defined callback\n            for (var fn = 0; fn < readyList.length; fn++) {\n                readyList[fn].call(window, []);\n            }\n            readyList.length = 0;\n\n            /*\n             * Add support for AMD (Asynchronous Module Definition) libraries\n             * such as require.js.\n             */\n            if (typeof define === \"function\" && define.amd) {\n                define(\"me\", [], function () {\n                    return me;\n                });\n            }\n        }\n    }\n\n    // bind ready\n    function bindReady() {\n        if (readyBound) {\n            return;\n        }\n        readyBound = true;\n\n        // directly call domReady if document is already \"ready\"\n        if (document.readyState === \"complete\") {\n            return domReady();\n        }\n        else {\n            if (document.addEventListener) {\n                // Use the handy event callback\n                document.addEventListener(\"DOMContentLoaded\", domReady, false);\n            }\n            // A fallback to window.onload, that will always work\n            window.addEventListener(\"load\", domReady, false);\n        }\n    }\n\n    /**\n     * Specify a function to execute when the DOM is fully loaded\n     * @memberOf external:window#\n     * @alias onReady\n     * @param {Function} handler A function to execute after the DOM is ready.\n     * @example\n     * // small main skeleton\n     * var game = {\n     *    // Initialize the game\n     *    // called by the window.onReady function\n     *    onload : function () {\n     *       // init video\n     *       if (!me.video.init('screen', 640, 480, true)) {\n     *          alert(\"Sorry but your browser does not support html 5 canvas.\");\n     *          return;\n     *       }\n     *\n     *       // initialize the \"audio\"\n     *       me.audio.init(\"mp3,ogg\");\n     *\n     *       // set callback for ressources loaded event\n     *       me.loader.onload = this.loaded.bind(this);\n     *\n     *       // set all ressources to be loaded\n     *       me.loader.preload(game.resources);\n     *\n     *       // load everything & display a loading screen\n     *       me.state.change(me.state.LOADING);\n     *    },\n     *\n     *    // callback when everything is loaded\n     *    loaded : function () {\n     *       // define stuff\n     *       // ....\n     *\n     *       // change to the menu screen\n     *       me.state.change(me.state.MENU);\n     *    }\n     * }; // game\n     *\n     * // \"bootstrap\"\n     * window.onReady(function () {\n     *    game.onload();\n     * });\n     */\n    window.onReady = function (fn) {\n        // Attach the listeners\n        bindReady();\n\n        // If the DOM is already ready\n        if (isReady) {\n            // Execute the function immediately\n            fn.call(window, []);\n        }\n        else {\n            // Add the function to the wait list\n            readyList.push(function () {\n                return fn.call(window, []);\n            });\n        }\n        return this;\n    };\n\n    // call the library init function when ready\n    // (this should not be here?)\n    if (me.skipAutoInit !== true) {\n        window.onReady(function () {\n            me.boot();\n        });\n    }\n    else {\n        me.init = function () {\n            me.boot();\n            domReady();\n        };\n    }\n\n    if (!window.throttle) {\n        /**\n         * a simple throttle function\n         * use same fct signature as the one in prototype\n         * in case it's already defined before\n         * @ignore\n         */\n        window.throttle = function (delay, no_trailing, callback) {\n            var last = window.performance.now(), deferTimer;\n            // `no_trailing` defaults to false.\n            if (typeof no_trailing !== \"boolean\") {\n                no_trailing = false;\n            }\n            return function () {\n                var now = window.performance.now();\n                var elasped = now - last;\n                var args = arguments;\n                if (elasped < delay) {\n                    if (no_trailing === false) {\n                        // hold on to it\n                        clearTimeout(deferTimer);\n                        deferTimer = setTimeout(function () {\n                            last = now;\n                            return callback.apply(null, args);\n                        }, elasped);\n                    }\n                }\n                else {\n                    last = now;\n                    return callback.apply(null, args);\n                }\n            };\n        };\n    }\n\n    if (typeof console === \"undefined\") {\n        /**\n         * Dummy console.log to avoid crash\n         * in case the browser does not support it\n         * @ignore\n         */\n        console = { // jshint ignore:line\n            log : function () {},\n            info : function () {},\n            error : function () {\n                alert(Array.prototype.slice.call(arguments).join(\", \"));\n            }\n        };\n    }\n\n})();\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * The built in Function Object\n * @external Function\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function|Function}\n */\nif (!Function.prototype.bind) {\n    /** @ignore */\n    var Empty = function () {};\n\n    /**\n     * Binds this function to the given context by wrapping it in another function and returning the wrapper.<p>\n     * Whenever the resulting \"bound\" function is called, it will call the original ensuring that this is set to context. <p>\n     * Also optionally curries arguments for the function.\n     * @memberof! external:Function#\n     * @alias bind\n     * @param {Object} context the object to bind to.\n     * @param {} [arguments...] Optional additional arguments to curry for the function.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind|Function.bind}\n     * @example\n     * // Ensure that our callback is triggered with the right object context (this):\n     * myObject.onComplete(this.callback.bind(this));\n     */\n    Function.prototype.bind = function bind(that) {\n        // ECMAScript 5 compliant implementation\n        // http://es5.github.com/#x15.3.4.5\n        // from https://github.com/kriskowal/es5-shim\n        var target = this;\n        if (typeof target !== \"function\") {\n            throw new TypeError(\"Function.prototype.bind called on incompatible \" + target);\n        }\n        var args = Array.prototype.slice.call(arguments, 1);\n        var bound = function () {\n            if (this instanceof bound) {\n                var result = target.apply(this, args.concat(Array.prototype.slice.call(arguments)));\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n            }\n            else {\n                return target.apply(that, args.concat(Array.prototype.slice.call(arguments)));\n            }\n        };\n        if (target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            Empty.prototype = null;\n        }\n        return bound;\n    };\n}\n\n/**\n * Executes a function as soon as the interpreter is idle (stack empty).\n * @memberof! external:Function#\n * @alias defer\n * @param {Object} context The execution context of the deferred function.\n * @param {} [arguments...] Optional additional arguments to carry for the\n * function.\n * @return {Number} id that can be used to clear the deferred function using\n * clearTimeout\n * @example\n * // execute myFunc() when the stack is empty,\n * // with the current context and 'myArgument' as parameter\n * myFunc.defer(this, 'myArgument');\n */\nFunction.prototype.defer = function () {\n    return setTimeout(this.bind.apply(this, arguments), 0.01);\n};\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * The built in Object object.\n * @external Object\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object|Object}\n */\n\nif (!Object.defineProperty) {\n    /**\n     * simple defineProperty function definition (if not supported by the browser)<br>\n     * if defineProperty is redefined, internally use __defineGetter__/__defineSetter__ as fallback\n     * @param {Object} obj The object on which to define the property.\n     * @param {string} prop The name of the property to be defined or modified.\n     * @param {Object} desc The descriptor for the property being defined or modified.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty|Object.defineProperty}\n     */\n    Object.defineProperty = function (obj, prop, desc) {\n        // check if Object support __defineGetter function\n        if (obj.__defineGetter__) {\n            if (desc.get) {\n                obj.__defineGetter__(prop, desc.get);\n            }\n            if (desc.set) {\n                obj.__defineSetter__(prop, desc.set);\n            }\n        } else {\n            // we should never reach this point....\n            throw new TypeError(\"Object.defineProperty not supported\");\n        }\n    };\n}\n\nif (!Object.create) {\n    /**\n     * Prototypal Inheritance Create Helper\n     * @name create\n     * @memberOf external:Object#\n     * @function\n     * @param {Object} Object\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create|Object.create}\n     * @example\n     * // declare oldObject\n     * oldObject = new Object();\n     * // make some crazy stuff with oldObject (adding functions, etc...)\n     * // ...\n     *\n     * // make newObject inherits from oldObject\n     * newObject = Object.create(oldObject);\n     */\n    Object.create = function (o) {\n        var Fn = function () {};\n        Fn.prototype = o;\n        return new Fn();\n    };\n}\n\nif (!Object.is) {\n    /**\n     * The Object.is() method determines whether two values are the same value.\n     * @name is\n     * @memberOf external:Object#\n     * @function\n     * @param {Object} a The first value to compare\n     * @param {Object} b The second value to compare\n     * @return {Boolean}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is|Object.is}\n     * @example\n     * // Strings are equal\n     * var s = \"foo\";\n     * Object.is(s, \"foo\"); //> true\n     *\n     * // 0 and -0 are not equal\n     * Object.is(0, -0); //>false\n     *\n     * // NaN and NaN are equal\n     * Object.is(NaN, NaN); //> true\n     *\n     * // Two object references are not equal\n     * Object.is({}, {}); //> false\n     *\n     * // Two vars referencing one object are equal\n     * var a = {}, b = a;\n     * Object.is(a, b); //> true\n     */\n    Object.is = function(x, y) {\n        // SameValue algorithm\n        if (x === y) { // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return x !== 0 || 1 / x === 1 / y;\n        } else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n        }\n  };\n}\n\nif (!Object.assign) {\n    /**\n     * The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object.\n     * The Object.assign method only copies enumerable and own properties from a source object to a target object.\n     * It uses [[Get]] on the source and [[Put]] on the target, so it will invoke getters and setters.\n     * Therefore it assigns properties versus just copying or defining new properties.\n     * This may make it unsuitable for merging new properties into a prototype if the merge sources contain getters.\n     * For copying propertiy definitions, including their enumerability, into prototypes Object.getOwnPropertyDescriptor and Object.defineProperty should be used instead.\n     * @name assign\n     * @memberOf external:Object#\n     * @function\n     * @param {Object} target The target object.\n     * @param {Object[]} sources The source object(s).\n     * @return {Object} The target object gets returned.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign|Object.assign}\n     * @example\n     * // Merging objects\n     * var o1 = { a: 1 };\n     * var o2 = { b: 2 };\n     * var o3 = { c: 3 };\n     *\n     * var obj = Object.assign(o1, o2, o3);\n     * console.log(obj);\n     * // { a: 1, b: 2, c: 3 }\n     */\n\n    Object.defineProperty(Object, \"assign\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target) {\n            \"use strict\";\n            if (target === undefined || target === null) {\n                throw new TypeError(\"Cannot convert first argument to object\");\n            }\n            var to = Object(target);\n            for (var i = 1; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n            return to;\n        }\n    });\n}\n\n/**\n * Extend a class prototype with the provided mixin descriptors.\n * Designed as a faster replacement for John Resig's Simple Inheritance.\n * @name extend\n * @memberOf me#Object\n * @function\n * @param {Object[]} mixins... Each mixin is a dictionary of functions, or a\n * previously extended class whose methods will be applied to the target class\n * prototype.\n * @return {Object}\n * @example\n * var Person = me.Object.extend({\n *     \"init\" : function (isDancing) {\n *         this.dancing = isDancing;\n *     },\n *     \"dance\" : function () {\n *         return this.dancing;\n *     }\n * });\n *\n * var Ninja = Person.extend({\n *     \"init\" : function () {\n *         // Call the super constructor, passing a single argument\n *         Person.prototype.init.apply(this, [false]);\n *     },\n *     \"dance\" : function () {\n *         // Call the overridden dance() method\n *         return Person.prototype.dance.apply(this);\n *     },\n *     \"swingSword\" : function () {\n *         return true;\n *     }\n * });\n *\n * var Pirate = Person.extend(Ninja, {\n *     \"init\" : function () {\n *         // Call the super constructor, passing a single argument\n *         Person.prototype.init.apply(this, [true]);\n *     }\n * });\n *\n * var p = new Person(true);\n * console.log(p.dance()); // => true\n *\n * var n = new Ninja();\n * console.log(n.dance()); // => false\n * console.log(n.swingSword()); // => true\n *\n * var r = new Pirate();\n * console.log(r.dance()); // => true\n * console.log(r.swingSword()); // => true\n *\n * console.log(\n *     p instanceof Person &&\n *     n instanceof Ninja &&\n *     n instanceof Person &&\n *     r instanceof Pirate &&\n *     r instanceof Person\n * ); // => true\n *\n * console.log(r instanceof Ninja); // => false\n */\n(function () {\n    function extend() {\n        var methods = {};\n        var mixins = new Array(arguments.length);\n        for (var i = 0; i < arguments.length; i++) {\n            mixins.push(arguments[i]);\n        }\n\n        /**\n         * The class constructor which calls the user `init` constructor.\n         * @ignore\n         */\n        function Class() {\n            // Call the user constructor\n            this.init.apply(this, arguments);\n            return this;\n        }\n\n        // Apply superClass\n        Class.prototype = Object.create(this.prototype);\n\n        // Apply all mixin methods to the class prototype\n        mixins.forEach(function (mixin) {\n            apply_methods(Class, methods, mixin.__methods__ || mixin);\n        });\n\n        // Verify constructor exists\n        if (!(\"init\" in Class.prototype)) {\n            throw new TypeError(\n                \"extend: Class is missing a constructor named `init`\"\n            );\n        }\n\n        // Apply syntactic sugar for accessing methods on super classes\n        Object.defineProperty(Class.prototype, \"_super\", {\n            \"value\" : _super\n        });\n\n        // Create a hidden property on the class itself\n        // List of methods, used for applying classes as mixins\n        Object.defineProperty(Class, \"__methods__\", {\n            \"value\" : methods\n        });\n\n        // Make this class extendable\n        Class.extend = extend;\n\n        return Class;\n    }\n\n    /**\n     * Apply methods to the class prototype.\n     * @ignore\n     */\n    function apply_methods(Class, methods, descriptor) {\n        Object.keys(descriptor).forEach(function (method) {\n            methods[method] = descriptor[method];\n\n            if (typeof(descriptor[method]) !== \"function\") {\n                throw new TypeError(\n                    \"extend: Method `\" + method + \"` is not a function\"\n                );\n            }\n\n            Object.defineProperty(Class.prototype, method, {\n                \"configurable\" : true,\n                \"value\" : descriptor[method]\n            });\n        });\n    }\n\n    /**\n     * Special method that acts as a proxy to the super class.\n     * @name _super\n     * @ignore\n     */\n    function _super(superClass, method, args) {\n        return superClass.prototype[method].apply(this, args);\n    }\n\n    /**\n     * The base class from which all jay-extend classes inherit.\n     * @ignore\n     */\n    var Jay = function () {\n        Object.apply(this, arguments);\n    };\n    Jay.prototype = Object.create(Object.prototype);\n    Jay.prototype.constructor = Jay;\n\n    Object.defineProperty(Jay, \"extend\", {\n        \"value\" : extend\n    });\n\n    /**\n     * The base class from which all melonJS objects inherit.\n     * See: {@link https://github.com/parasyte/jay-extend}\n     * @name Object\n     * @memberOf me\n     */\n    me.Object = Jay;\n})();\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * The built in Error object.\n * @external Error\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error|Error}\n */\n\n/**\n * melonJS base class for exception handling.\n * @name Error\n * @memberOf me\n * @constructor\n * @param {String} msg Error message.\n */\nme.Error = me.Object.extend.bind(Error)({\n    init : function (msg) {\n        this.name = \"me.Error\";\n        this.message = msg;\n    }\n});\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n /**\n * The built in Math Object\n * @external Math\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math|Math}\n */\n\nif (!Math.sign) {\n    /**\n     * The Math.sign() function returns the sign of a number, indicating whether the number is positive, negative or zero.\n     * @memberof! external:Math#\n     * @alias sign\n     * @param {number} x a number.\n     * @return {number} sign of the number\n     */\n    Math.sign = function(x) {\n        x = +x; // convert to a number\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n        return x > 0 ? 1 : -1;\n    };\n}\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n /**\n * The built in Number Object\n * @external Number\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number|Number}\n */\n\n/**\n * add a clamp fn to the Number object\n * @memberof! external:Number#\n * @alias clamp\n * @param {number} low lower limit\n * @param {number} high higher limit\n * @return {number} clamped value\n */\nNumber.prototype.clamp = function (low, high) {\n    return this < low ? low : this > high ? high : +this;\n};\n\n/**\n * return a random integer between min, max (exclusive)\n * @memberof! external:Number#\n * @alias random\n * @param {number} [min=this] minimum value.\n * @param {number} max maximum value.\n * @return {number} random value\n * @example\n * // Print a random number; one of 5, 6, 7, 8, 9\n * console.log( (5).random(10) );\n * // Select a random array element\n * var ar = [ \"foo\", \"bar\", \"baz\" ];\n * console.log(ar[ (0).random(ar.length) ]);\n */\nNumber.prototype.random = function (min, max) {\n    if (!max) {\n        max = min;\n        min = this;\n    }\n    return (~~(Math.random() * (max - min)) + min);\n};\n\n/**\n * return a random float between min, max (exclusive)\n * @memberof! external:Number#\n * @alias randomFloat\n * @param {number} [min=this] minimum value.\n * @param {number} max maximum value.\n * @return {number} random value\n * @example\n * // Print a random number; one of 5, 6, 7, 8, 9\n * console.log( (5).random(10) );\n * // Select a random array element\n * var ar = [ \"foo\", \"bar\", \"baz\" ];\n * console.log(ar[ (0).random(ar.length) ]);\n */\nNumber.prototype.randomFloat = function (min, max) {\n    if (!max) {\n        max = min;\n        min = this;\n    }\n    return (Math.random() * (max - min)) + min;\n};\n\n/**\n * return a weighted random between min, max (exclusive)\n * favoring the lower numbers\n * @memberof! external:Number#\n * @alias weightedRandom\n * @param {number} [min=this] minimum value.\n * @param {number} max maximum value.\n * @return {number} random value\n * @example\n * // Print a random number; one of 5, 6, 7, 8, 9\n * console.log( (5).random(10) );\n * // Select a random array element\n * var ar = [ \"foo\", \"bar\", \"baz\" ];\n * console.log(ar[ (0).random(ar.length) ]);\n */\nNumber.prototype.weightedRandom = function (min, max) {\n    if (!max) {\n        max = min;\n        min = this;\n    }\n    return (~~(Math.pow(Math.random(), 2) * (max - min)) + min);\n};\n\n/**\n * round a value to the specified number of digit\n * @memberof! external:Number#\n * @alias round\n * @param {number} [num=this] value to be rounded.\n * @param {number} dec number of decimal digit to be rounded to.\n * @return {number} rounded value\n * @example\n * // round a specific value to 2 digits\n * Number.prototype.round (10.33333, 2); // return 10.33\n * // round a float value to 4 digits\n * num = 10.3333333\n * num.round(4); // return 10.3333\n */\nNumber.prototype.round = function (num, dec) {\n    // if only one argument use the object value\n    num = (arguments.length < 2) ? this : num;\n    var powres = Math.pow(10, dec || num || 0);\n    return (~~(0.5 + num * powres) / powres);\n};\n\n/**\n * a quick toHex function<br>\n * given number <b>must</b> be an int, with a value between 0 and 255\n * @memberof! external:Number#\n * @alias toHex\n * @return {string} converted hexadecimal value\n */\nNumber.prototype.toHex = function () {\n    return \"0123456789ABCDEF\".charAt((this - (this % 16)) >> 4) + \"0123456789ABCDEF\".charAt(this % 16);\n};\n\n/**\n * Converts an angle in degrees to an angle in radians\n * @memberof! external:Number#\n * @alias degToRad\n * @param {number} [angle=\"angle\"] angle in degrees\n * @return {number} corresponding angle in radians\n * @example\n * // convert a specific angle\n * Number.prototype.degToRad (60); // return 1.0471...\n * // convert object value\n * var num = 60\n * num.degToRad(); // return 1.0471...\n */\nNumber.prototype.degToRad = function (angle) {\n    return (angle || this) / 180.0 * Math.PI;\n};\n\n/**\n * Converts an angle in radians to an angle in degrees.\n * @memberof! external:Number#\n * @alias radToDeg\n * @param {number} [angle=\"angle\"] angle in radians\n * @return {number} corresponding angle in degrees\n * @example\n * // convert a specific angle\n * Number.prototype.radToDeg (1.0471975511965976); // return 59.9999...\n * // convert object value\n * num = 1.0471975511965976\n * Math.ceil(num.radToDeg()); // return 60\n */\nNumber.prototype.radToDeg = function (angle) {\n    return (angle || this) * (180.0 / Math.PI);\n};\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * The built in String Object\n * @external String\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String|String}\n */\n\nif (!String.prototype.trim) {\n    /**\n     * removes whitespace from both ends of a string. Whitespace in this context is all the whitespace characters (space, tab, no-break space, etc.) and all the line terminator characters (LF, CR, etc.).\n     * @memberof! external:String#\n     * @alias trim\n     * @return {string} the string stripped of whitespace from both ends. \n     */\n    if (!String.prototype.trim) {\n      (function() {\n        // Make sure we trim BOM and NBSP\n        var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n        String.prototype.trim = function() {\n          return this.replace(rtrim, \"\");\n        };\n      })();\n    }\n}\n\nif (!String.prototype.trimLeft) {\n    /**\n     * returns the string stripped of whitespace from the left.\n     * @memberof! external:String#\n     * @alias trimLeft\n     * @return {string} trimmed string\n     */\n    String.prototype.trimLeft = function () {\n        return this.replace(/^\\s+/, \"\");\n    };\n}\n\nif (!String.prototype.trimRight) {\n    /**\n     * returns the string stripped of whitespace from the right.\n     * @memberof! external:String#\n     * @alias trimRight\n     * @return {string} trimmed string\n     */\n    String.prototype.trimRight = function () {\n        return this.replace(/\\s+$/, \"\");\n    };\n}\n\n/**\n * add isNumeric fn to the string object\n * @memberof! external:String#\n * @alias isNumeric\n * @return {boolean} true if string contains only digits\n */\nString.prototype.isNumeric = function () {\n    return (!isNaN(this) && this.trim() !== \"\");\n};\n\n/**\n * add a isBoolean fn to the string object\n * @memberof! external:String#\n * @alias isBoolean\n * @return {boolean} true if the string is either true or false\n */\nString.prototype.isBoolean = function () {\n    var trimmed = this.trim();\n    return (\"true\" === trimmed) || (\"false\" === trimmed);\n};\n\nif (!String.prototype.includes) {\n    /**\n     * determines whether one string may be found within another string.\n     * @memberof! external:String#\n     * @alias includes\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n     * @param {string} searchString A string to be searched for within this string.\n     * @param {number} [position=0] The position in this string at which to begin searching for the given string.\n     * @return {boolean} true if contains the specified string\n     */\n  String.prototype.includes = function() {\n    return String.prototype.indexOf.apply(this, arguments) !== -1;\n  };\n}\n\n/**\n * convert the string to hex value\n * @memberof! external:String#\n * @alias toHex\n * @return {string}\n */\nString.prototype.toHex = function () {\n    var res = \"\", c = 0;\n    while (c < this.length) {\n        res += this.charCodeAt(c++).toString(16);\n    }\n    return res;\n};\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * The built in Array Object\n * @external Array\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array|Array}\n */\n\n/**\n * Remove the specified object from the Array<br>\n * @memberof! external:Array#\n * @alias remove\n * @param {Object} object to be removed\n */\nArray.prototype.remove = function (obj) {\n    var i = Array.prototype.indexOf.call(this, obj);\n    if (i !== -1) {\n        Array.prototype.splice.call(this, i, 1);\n    }\n    return this;\n};\n\nif (!Array.prototype.forEach) {\n    /**\n     * provide a replacement for browsers that don't\n     * support Array.prototype.forEach (JS 1.6)\n     * @ignore\n     */\n    Array.prototype.forEach = function (callback, scope) {\n        for (var i = 0, j = this.length; j--; i++) {\n            callback.call(scope || this, this[i], i, this);\n        }\n    };\n}\n\nif (!Array.isArray) {\n    /**\n     * provide a replacement for browsers that don't\n     * natively support Array.isArray\n     * @ignore\n     */\n    Array.isArray = function (vArg) {\n        var isArray;\n        isArray = vArg instanceof Array;\n        return isArray;\n    };\n}\n\n/**\n * return a random array element\n * @memberof! external:Array#\n * @alias random\n * @param {array} entry array to pick a element\n * @return {any} random member of array\n */\nArray.prototype.random = function (entry) {\n    return entry[(0).random(entry.length)];\n};\n\n/**\n * return a weighted random array element, favoring the earlier entries\n * @memberof! external:Array#\n * @alias weightedRandom\n * @param {array} entry array to pick a element\n * @return {any} random member of array\n */\nArray.prototype.weightedRandom = function (entry) {\n    return entry[(0).weightedRandom(entry.length)];\n};\n\n/**\n * A fake TypedArray object to be used for the TypedArray polyfills\n * @ignore\n */\nme.TypedArray = function (a) {\n    var i = 0;\n    if (Array.isArray(a)) {\n        this.concat(a.slice());\n    }\n    else if ((arguments.length === 1) && (typeof(a) === \"number\")) {\n        for (i = 0; i < a; i++) {\n            this.push(0);\n        }\n    }\n    else {\n        throw new me.Error(\n            \"TypedArray polyfill: Unsupported constructor arguments\",\n            arguments\n        );\n    }\n};\nme.TypedArray.prototype = Array.prototype;\n\n/**\n * The set() method stores multiple values in the typed array, reading input values from a specified array.\n * @ignore\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set|TypedArray.prototype.set}\n */\nme.TypedArray.prototype.set = function (source, offset) {\n    offset = offset || 0;\n\n    if (source.length + offset > this.length) {\n        throw new me.Error(\n            \"TypedArray pollyfill: Buffer overflow in set\"\n        );\n    }\n\n    for (var i = 0; i < source.length; i++, offset++) {\n        this[offset] = source[i];\n    }\n};\n\n/**\n * The built in Float32Array object.\n * @external Float32Array\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Float32Array|Float32Array}\n */\nwindow.Float32Array = window.Float32Array || me.TypedArray;\n\n/**\n * The built in Uint8Array object.\n * @external Uint8Array\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Uint8Array|Uint8Array}\n */\nwindow.Uint8Array = window.Uint8Array || me.TypedArray;\n\n/**\n * The built in Uint16Array object.\n * @external Uint16Array\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Uint16Array|Uint16Array}\n */\nwindow.Uint16Array = window.Uint16Array || me.TypedArray;\n\n/**\n * The built in Uint32Array object.\n * @external Uint32Array\n * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Uint32Array|Uint32Array}\n */\nwindow.Uint32Array = window.Uint32Array || me.TypedArray;\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n// define window.performance if undefined\nif (typeof window.performance === \"undefined\") {\n    window.performance = {};\n}\n\nif (typeof Date.now === \"undefined\") {\n    /**\n     * provide a replacement for browser not\n     * supporting Date.now (JS 1.5)\n     * @ignore\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n}\n\nif (!window.performance.now) {\n    var timeOffset = Date.now();\n\n    if (window.performance.timing &&\n        window.performance.timing.navigationStart) {\n        timeOffset = window.performance.timing.navigationStart;\n    }\n    /**\n     * provide a polyfill for window.performance now\n     * to provide consistent time information across browser\n     * (always return the elapsed time since the browser started)\n     * @ignore\n     */\n    window.performance.now = function () {\n        return Date.now() - timeOffset;\n    };\n}\n\n/*\n\nCopyright (C) 2011 by Andrea Giammarchi, @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n/* jshint -W003 */\n/* jshint -W013 */\n/* jshint -W015 */\n/* jshint -W030 */\n/* jshint -W035 */\n/* jshint -W040 */\n/* jshint -W058 */\n/* jshint -W108 */\n/* jshint -W116 */\n\n(function (exports) {'use strict';\n  //shared pointer\n  var i;\n  //shortcuts\n  var defineProperty = Object.defineProperty, is = Object.is;\n\n\n  //Polyfill global objects\n  if (typeof WeakMap == 'undefined') {\n    exports.WeakMap = createCollection({\n      // WeakMap#delete(key:void*):boolean\n      'delete': sharedDelete,\n      // WeakMap#clear():\n      clear: sharedClear,\n      // WeakMap#get(key:void*):void*\n      get: sharedGet,\n      // WeakMap#has(key:void*):boolean\n      has: mapHas,\n      // WeakMap#set(key:void*, value:void*):void\n      set: sharedSet\n    }, true);\n  }\n\n  if (typeof Map == 'undefined' || typeof ((new Map).values) !== 'function' || !(new Map).values().next) {\n    exports.Map = createCollection({\n      // WeakMap#delete(key:void*):boolean\n      'delete': sharedDelete,\n      //:was Map#get(key:void*[, d3fault:void*]):void*\n      // Map#has(key:void*):boolean\n      has: mapHas,\n      // Map#get(key:void*):boolean\n      get: sharedGet,\n      // Map#set(key:void*, value:void*):void\n      set: sharedSet,\n      // Map#keys(void):Iterator\n      keys: sharedKeys,\n      // Map#values(void):Iterator\n      values: sharedValues,\n      // Map#entries(void):Iterator\n      entries: mapEntries,\n      // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n      forEach: sharedForEach,\n      // Map#clear():\n      clear: sharedClear\n    });\n  }\n\n  if (typeof Set == 'undefined' || typeof ((new Set).values) !== 'function' || !(new Set).values().next) {\n    exports.Set = createCollection({\n      // Set#has(value:void*):boolean\n      has: setHas,\n      // Set#add(value:void*):boolean\n      add: sharedAdd,\n      // Set#delete(key:void*):boolean\n      'delete': sharedDelete,\n      // Set#clear():\n      clear: sharedClear,\n      // Set#keys(void):Iterator\n      keys: sharedValues, // specs actually say \"the same function object as the initial value of the values property\"\n      // Set#values(void):Iterator\n      values: sharedValues,\n      // Set#entries(void):Iterator\n      entries: setEntries,\n      // Set#forEach(callback:Function, context:void*):void ==> callback.call(context, value, index) === not in specs\n      forEach: sharedForEach\n    });\n  }\n\n  if (typeof WeakSet == 'undefined') {\n    exports.WeakSet = createCollection({\n      // WeakSet#delete(key:void*):boolean\n      'delete': sharedDelete,\n      // WeakSet#add(value:void*):boolean\n      add: sharedAdd,\n      // WeakSet#clear():\n      clear: sharedClear,\n      // WeakSet#has(value:void*):boolean\n      has: setHas\n    }, true);\n  }\n\n\n  /**\n   * ES6 collection constructor\n   * @return {Function} a collection class\n   */\n  function createCollection(proto, objectOnly){\n    function Collection(a){\n      if (!this || this.constructor !== Collection) return new Collection(a);\n      this._keys = [];\n      this._values = [];\n      this._itp = []; // iteration pointers\n      this.objectOnly = objectOnly;\n\n      //parse initial iterable argument passed\n      if (a) init.call(this, a);\n    }\n\n    //define size for non object-only collections\n    if (!objectOnly) {\n      defineProperty(proto, 'size', {\n        get: sharedSize\n      });\n    }\n\n    //set prototype\n    proto.constructor = Collection;\n    Collection.prototype = proto;\n\n    return Collection;\n  }\n\n\n  /** parse initial iterable argument passed */\n  function init(a){\n    //init Set argument, like `[1,2,3,{}]`\n    if (this.add)\n      a.forEach(this.add, this);\n    //init Map argument like `[[1,2], [{}, 4]]`\n    else\n      a.forEach(function(a){this.set(a[0],a[1]);}, this);\n  }\n\n\n  /** delete */\n  function sharedDelete(key) {\n    if (this.has(key)) {\n      this._keys.splice(i, 1);\n      this._values.splice(i, 1);\n      // update iteration pointers\n      this._itp.forEach(function(p) { if (i < p[0]) p[0]--; });\n    }\n    // Aurora here does it while Canary doesn't\n    return -1 < i;\n  }\n\n  function sharedGet(key) {\n    return this.has(key) ? this._values[i] : undefined;\n  }\n\n  function has(list, key) {\n    if (this.objectOnly && key !== Object(key))\n      throw new TypeError(\"Invalid value used as weak collection key\");\n    //NaN or 0 passed\n    if (key != key || key === 0) for (i = list.length; i-- && !is(list[i], key);){}\n    else i = list.indexOf(key);\n    return -1 < i;\n  }\n\n  function setHas(value) {\n    return has.call(this, this._values, value);\n  }\n\n  function mapHas(value) {\n    return has.call(this, this._keys, value);\n  }\n\n  /** @chainable */\n  function sharedSet(key, value) {\n    this.has(key) ?\n      this._values[i] = value\n      :\n      this._values[this._keys.push(key) - 1] = value\n      ;\n    return this;\n  }\n\n  /** @chainable */\n  function sharedAdd(value) {\n    if (!this.has(value)) this._values.push(value);\n    return this;\n  }\n\n  function sharedClear() {\n    (this._keys || 0).length =\n    this._values.length = 0;\n  }\n\n  /** keys, values, and iterate related methods */\n  function sharedKeys() {\n    return sharedIterator(this._itp, this._keys);\n  }\n\n  function sharedValues() {\n    return sharedIterator(this._itp, this._values);\n  }\n\n  function mapEntries() {\n    return sharedIterator(this._itp, this._keys, this._values);\n  }\n\n  function setEntries() {\n    return sharedIterator(this._itp, this._values, this._values);\n  }\n\n  function sharedIterator(itp, array, array2) {\n    var p = [0], done = false;\n    itp.push(p);\n    return {\n      next: function() {\n        var v, k = p[0];\n        if (!done && k < array.length) {\n          v = array2 ? [array[k], array2[k]]: array[k];\n          p[0]++;\n        } else {\n          done = true;\n          itp.splice(itp.indexOf(p), 1);\n        }\n        return { done: done, value: v };\n      }\n    };\n  }\n\n  function sharedSize() {\n    return this._values.length;\n  }\n\n  function sharedForEach(callback, context) {\n    var it = this.entries();\n    for (;;) {\n      var r = it.next();\n      if (r.done) break;\n      callback.call(context, r.value[1], r.value[0], this);\n    }\n  }\n\n})(typeof exports != 'undefined' && typeof global != 'undefined' ? global : window );\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n(function () {\n\n    /**\n     * me global references\n     * @ignore\n     */\n    me.mod = \"melonJS\";\n    me.version = \"3.0.1\";\n    /**\n     * global system settings and browser capabilities\n     * @namespace\n     */\n    me.sys = {\n\n        /*\n         * Global settings\n         */\n\n        /**\n         * Set game FPS limiting\n         * @see me.timer.tick\n         * @type {Number}\n         * @default 60\n         * @memberOf me.sys\n         */\n        fps : 60,\n \n        /**\n         * Rate at which the game updates;<br>\n         * must be equal to or lower than the fps\n         * @see me.timer.tick\n         * @type {Number}\n         * @default 60\n         * @memberOf me.sys\n         */\n        updatesPerSecond : 60,\n\n        /**\n         * Enable/disable frame interpolation\n         * @see me.timer.tick\n         * @type {Boolean}\n         * @default false\n         * @memberOf me.sys\n         */\n        interpolation : false,\n\n        /**\n         * Global scaling factor\n         * @type {me.Vector2d}\n         * @default <0,0>\n         * @memberOf me.sys\n         */\n        scale : null, //initialized by me.video.init\n\n        /**\n         * Global gravity settings <br>\n         * will override entities init value if defined<br>\n         * @type {Number|undefined}\n         * @default undefined\n         * @memberOf me.sys\n         */\n        gravity : undefined,\n\n        /**\n         * Specify either to stop on audio loading error or not<br>\n         * if true, melonJS will throw an exception and stop loading<br>\n         * if false, melonJS will disable sounds and output a warning message\n         * in the console<br>\n         * @type {Boolean}\n         * @default true\n         * @memberOf me.sys\n         */\n        stopOnAudioError : true,\n\n        /**\n         * Specify whether to pause the game when losing focus.<br>\n         * @type {Boolean}\n         * @default true\n         * @memberOf me.sys\n         */\n        pauseOnBlur : true,\n\n        /**\n         * Specify whether to unpause the game when gaining focus.<br>\n         * @type {Boolean}\n         * @default true\n         * @memberOf me.sys\n         */\n        resumeOnFocus : true,\n\n        /**\n         * Specify whether to stop the game when losing focus or not<br>\n         * The engine restarts on focus if this is enabled.\n         * @type {boolean}\n         * @default false\n         * @memberOf me.sys\n         */\n        stopOnBlur : false,\n\n        /**\n         * Specify the rendering method for layers <br>\n         * if false, visible part of the layers are rendered dynamically<br>\n         * if true, the entire layers are first rendered into an offscreen\n         * canvas<br>\n         * the \"best\" rendering method depends of your game<br>\n         * (amount of layer, layer size, amount of tiles per layer, etc.)<br>\n         * note : rendering method is also configurable per layer by adding this\n         * property to your layer (in Tiled)<br>\n         * @type {Boolean}\n         * @default false\n         * @memberOf me.sys\n         */\n        preRender : false,\n\n        /*\n         * System methods\n         */\n\n        /**\n         * Compare two version strings\n         * @public\n         * @function\n         * @param {String} first First version string to compare\n         * @param {String} [second=\"3.0.1\"] Second version string to compare\n         * @return {Number} comparison result <br>&lt; 0 : first &lt; second<br>\n         * 0 : first == second<br>\n         * &gt; 0 : first &gt; second\n         * @example\n         * if (me.sys.checkVersion(\"3.0.1\") > 0) {\n         *     console.error(\n         *         \"melonJS is too old. Expected: 3.0.1, Got: \" + me.version\n         *     );\n         * }\n         */\n        checkVersion : function (first, second) {\n            second = second || me.version;\n\n            var a = first.split(\".\");\n            var b = second.split(\".\");\n            var len = Math.min(a.length, b.length);\n            var result = 0;\n\n            for (var i = 0; i < len; i++) {\n                if ((result = +a[i] - +b[i])) {\n                    break;\n                }\n            }\n\n            return result ? result : a.length - b.length;\n        }\n    };\n\n    function parseHash() {\n        var hash = {};\n\n        if (document.location.hash) {\n            document.location.hash.substr(1).split(\"&\").filter(function (value) {\n                return (value !== \"\");\n            }).forEach(function (value) {\n                var kv = value.split(\"=\");\n                var k = kv.shift();\n                var v = kv.join(\"=\");\n                hash[k] = v || true;\n            });\n        }\n\n        return hash;\n    }\n\n    // a flag to know if melonJS\n    // is initialized\n    var me_initialized = false;\n\n    Object.defineProperty(me, \"initialized\", {\n        get : function get() {\n            return me_initialized;\n        }\n    });\n\n    /*\n     * initial boot function\n     */\n\n    me.boot = function () {\n        // don't do anything if already initialized (should not happen anyway)\n        if (me_initialized) {\n            return;\n        }\n\n        // check the device capabilites\n        me.device._check();\n\n        // initialize me.save\n        me.save._init();\n\n        // parse optional url parameters/tags\n        me.game.HASH = parseHash();\n\n        // enable/disable the cache\n        me.loader.setNocache(\n            me.game.HASH.nocache || false\n        );\n\n        // init the FPS counter if needed\n        me.timer.init();\n\n        // init the App Manager\n        me.state.init();\n\n        // init the Entity Pool\n        me.pool.init();\n\n        // automatically enable keyboard events if on desktop\n        if (me.device.isMobile === false) {\n            me.input._enableKeyboardEvent();\n        }\n\n        // init the level Director\n        me.levelDirector.reset();\n\n        me_initialized = true;\n    };\n\n})();\n\n/**\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n(function () {\n\n    /**\n     * me.game represents your current game, it contains all the objects,\n     * tilemap layers, current viewport, collision map, etc...<br>\n     * me.game is also responsible for updating (each frame) the object status\n     * and draw them<br>\n     * @namespace me.game\n     * @memberOf me\n     */\n    me.game = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        /*\n         * PRIVATE STUFF\n         */\n\n        // flag to redraw the sprites\n        var initialized = false;\n\n        // to know when we have to refresh the display\n        var isDirty = true;\n\n        // always refresh the display when updatesPerSecond are lower than fps\n        var isAlwaysDirty = false;\n\n        // frame counter for frameSkipping\n        // reset the frame counter\n        var frameCounter = 0;\n        var frameRate = 1;\n\n        // time accumulation for multiple update calls\n        var accumulator = 0.0;\n        var accumulatorMax = 0.0;\n        var accumulatorUpdateDelta = 0;\n\n        // min update step size\n        var stepSize = 1000 / 60;\n        var updateDelta = 0;\n        var lastUpdateStart = null;\n        var updateAverageDelta = 0;\n\n        // reference to the renderer object\n        var renderer = null;\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * a reference to the game viewport.\n         * @public\n         * @type {me.Viewport}\n         * @name viewport\n         * @memberOf me.game\n         */\n        api.viewport = null;\n\n        /**\n         * a reference to the game world <br>\n         * a world is a virtual environment containing all the game objects\n         * @public\n         * @type {me.Container}\n         * @name world\n         * @memberOf me.game\n         */\n        api.world = null;\n\n        /**\n         * when true, all objects will be added under the root world container<br>\n         * when false, a `me.Container` object will be created for each\n         * corresponding `TMXObjectGroup`\n         * default value : true\n         * @public\n         * @type {boolean}\n         * @name mergeGroup\n         * @memberOf me.game\n         */\n        api.mergeGroup = true;\n\n        /**\n         * The property of should be used when sorting entities <br>\n         * value : \"x\", \"y\", \"z\" (default: \"z\")\n         * @public\n         * @type {string}\n         * @name sortOn\n         * @memberOf me.game\n         */\n        api.sortOn = \"z\";\n\n        /**\n         * default layer tmxRenderer\n         * @private\n         * @ignore\n         * @type {me.TMXRenderer}\n         * @name tmxRenderer\n         * @memberOf me.game\n         */\n        api.tmxRenderer = null;\n\n        /**\n         * Fired when a level is fully loaded and <br>\n         * and all entities instantiated. <br>\n         * Additionnaly the level id will also be passed\n         * to the called function.\n         * @public\n         * @callback\n         * @name onLevelLoaded\n         * @memberOf me.game\n         * @example\n         * // call myFunction () everytime a level is loaded\n         * me.game.onLevelLoaded = this.myFunction.bind(this);\n         */\n        api.onLevelLoaded = function () {};\n\n        /**\n         * Provide an object hash with all tag parameters specified in the url.\n         * @property {Boolean} [hitbox=false] draw the hitbox in the debug panel (if enabled)\n         * @property {Boolean} [velocity=false] draw the entities velocity in the debug panel (if enabled)\n         * @property {Boolean} [quadtree=false] draw the quadtree in the debug panel (if enabled)\n         * @property {Boolean} [webgl=false] force the renderer to WebGL\n         * @public\n         * @type {Object}\n         * @name HASH\n         * @memberOf me.game\n         * @example\n         * // http://www.example.com/index.html#debug&hitbox=true&mytag=value\n         * console.log(me.game.HASH[\"mytag\"]); //> \"value\"\n         */\n        api.HASH = null;\n\n        /**\n         * Initialize the game manager\n         * @name init\n         * @memberOf me.game\n         * @private\n         * @ignore\n         * @function\n         * @param {Number} [width] width of the canvas\n         * @param {Number} [height] width of the canvas\n         * init function.\n         */\n        api.init = function (width, height) {\n            if (!initialized) {\n                // if no parameter specified use the system size\n                width  = width  || me.video.renderer.getWidth();\n                height = height || me.video.renderer.getHeight();\n\n                // create a defaut viewport of the same size\n                api.viewport = new me.Viewport(0, 0, width, height);\n\n                // the root object of our world is an entity container\n                api.world = new me.Container(0, 0, width, height);\n                api.world.name = \"rootContainer\";\n                api.world._root = true;\n\n                // initialize the collision system (the quadTree mostly)\n                me.collision.init();\n\n                renderer = me.video.renderer;\n\n                // publish init notification\n                me.event.publish(me.event.GAME_INIT);\n\n                // translate global pointer events\n                me.input._translatePointerEvents();\n\n                // make display dirty by default\n                isDirty = true;\n\n                // set as initialized\n                initialized = true;\n            }\n        };\n\n        /**\n         * reset the game Object manager<p>\n         * destroy all current objects\n         * @name reset\n         * @memberOf me.game\n         * @public\n         * @function\n         */\n        api.reset = function () {\n\n            // clear the quadtree\n            me.collision.quadTree.clear();\n\n            // remove all objects\n            api.world.destroy();\n\n            // reset the viewport to zero ?\n            if (api.viewport) {\n                api.viewport.reset();\n            }\n\n            // reset the renderer\n            renderer.reset();\n\n            // reset the frame counter\n            frameCounter = 0;\n            frameRate = ~~(0.5 + 60 / me.sys.fps);\n\n            // set step size based on the updatesPerSecond\n            stepSize = (1000 / me.sys.updatesPerSecond);\n            accumulator = 0.0;\n            accumulatorMax = stepSize * 10;\n\n            // display should always re-draw when update speed doesn't match fps\n            // this means the user intends to write position prediction drawing logic\n            isAlwaysDirty = (me.sys.fps > me.sys.updatesPerSecond);\n        };\n\n        /**\n         * Returns the parent container of the specified Child in the game world\n         * @name getParentContainer\n         * @memberOf me.game\n         * @function\n         * @param {me.Renderable} child\n         * @return {me.Container}\n         */\n        api.getParentContainer = function (child) {\n            return child.ancestor;\n        };\n\n        /**\n         * force the redraw (not update) of all objects\n         * @name repaint\n         * @memberOf me.game\n         * @public\n         * @function\n         */\n\n        api.repaint = function () {\n            isDirty = true;\n        };\n\n\n        /**\n         * update all objects of the game manager\n         * @name update\n         * @memberOf me.game\n         * @private\n         * @ignore\n         * @function\n         * @param {Number} time current timestamp as provided by the RAF callback\n         */\n        api.update = function (time) {\n            // handle frame skipping if required\n            if ((++frameCounter % frameRate) === 0) {\n                // reset the frame counter\n                frameCounter = 0;\n\n                // update the timer\n                me.timer.update(time);\n\n                // update the gamepads\n                me.input._updateGamepads();\n\n                accumulator += me.timer.getDelta();\n                accumulator = Math.min(accumulator, accumulatorMax);\n\n                updateDelta = (me.sys.interpolation) ? me.timer.getDelta() : stepSize;\n                accumulatorUpdateDelta = (me.sys.interpolation) ? updateDelta : Math.max(updateDelta, updateAverageDelta);\n\n                while (accumulator >= accumulatorUpdateDelta || me.sys.interpolation) {\n                    lastUpdateStart = window.performance.now();\n\n                    // clear the quadtree\n                    me.collision.quadTree.clear();\n\n                    // insert the world container (children) into the quadtree\n                    me.collision.quadTree.insertContainer(api.world);\n\n                    // update all objects (and pass the elapsed time since last frame)\n                    isDirty = api.world.update(updateDelta) || isDirty;\n\n                    // update the camera/viewport\n                    isDirty = api.viewport.update(updateDelta) || isDirty;\n\n                    me.timer.lastUpdate = window.performance.now();\n                    updateAverageDelta = me.timer.lastUpdate - lastUpdateStart;\n\n                    accumulator -= accumulatorUpdateDelta;\n                    if (me.sys.interpolation) {\n                        accumulator = 0;\n                        break;\n                    }\n                }\n            }\n        };\n\n        /**\n         * draw all existing objects\n         * @name draw\n         * @memberOf me.game\n         * @private\n         * @ignore\n         * @function\n         */\n        api.draw = function () {\n            if (isDirty || isAlwaysDirty) {\n                // cache the viewport rendering position, so that other object\n                // can access it later (e,g. entityContainer when drawing floating objects)\n                var translateX = api.viewport.pos.x + ~~api.viewport.offset.x;\n                var translateY = api.viewport.pos.y + ~~api.viewport.offset.y;\n\n                // translate the world coordinates by default to screen coordinates\n                api.world.transform.translate(-translateX, -translateY);\n\n                // prepare renderer to draw a new frame\n                me.video.renderer.prepareSurface();\n\n                // update all objects,\n                // specifying the viewport as the rectangle area to redraw\n                api.world.draw(renderer, api.viewport);\n\n                // translate back\n                api.world.transform.translate(translateX, translateY);\n\n                // draw our camera/viewport\n                api.viewport.draw(renderer);\n            }\n\n            isDirty = false;\n\n            // blit our frame\n            me.video.renderer.blitSurface();\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org/\n *\n */\n(function () {\n    /**\n     * Convert first character of a string to uppercase, if it's a letter.\n     * @ignore\n     * @function\n     * @name capitalize\n     * @param  {String} str Input string.\n     * @return {String} String with first letter made uppercase.\n     */\n    var capitalize = function (str) {\n        return str.substring(0, 1).toUpperCase() + str.substring(1, str.length);\n    };\n\n    /**\n     * A collection of utilities to ease porting between different user agents.\n     * @namespace me.agent\n     * @memberOf me\n     */\n    me.agent = (function () {\n        var api = {};\n\n        /**\n         * Known agent vendors\n         * @ignore\n         */\n        var vendors = [ \"ms\", \"MS\", \"moz\", \"webkit\", \"o\" ];\n\n        /**\n         * Get a vendor-prefixed property\n         * @public\n         * @name prefixed\n         * @function\n         * @param {String} name Property name\n         * @param {Object} [obj=window] Object or element reference to access\n         * @return {Mixed} Value of property\n         * @memberOf me.agent\n         */\n        api.prefixed = function (name, obj) {\n            obj = obj || window;\n            if (name in obj) {\n                return obj[name];\n            }\n\n            var uc_name = capitalize(name);\n\n            var result;\n            vendors.some(function (vendor) {\n                var name = vendor + uc_name;\n                return (result = (name in obj) ? obj[name] : undefined);\n            });\n            return result;\n        };\n\n        /**\n         * Set a vendor-prefixed property\n         * @public\n         * @name setPrefixed\n         * @function\n         * @param {String} name Property name\n         * @param {Mixed} value Property value\n         * @param {Object} [obj=window] Object or element reference to access\n         * @memberOf me.agent\n         */\n        api.setPrefixed = function (name, value, obj) {\n            obj = obj || window;\n            if (name in obj) {\n                obj[name] = value;\n                return;\n            }\n\n            var uc_name = capitalize(name);\n\n            vendors.some(function (vendor) {\n                var name = vendor + uc_name;\n                if (name in obj) {\n                    obj[name] = value;\n                    return true;\n                }\n                return false;\n            });\n        };\n\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A singleton object representing the device capabilities and specific events\n     * @namespace me.device\n     * @memberOf me\n     */\n    me.device = (function () {\n        // defines object for holding public information/functionality.\n        var api = {};\n        // private properties\n        var accelInitialized = false;\n        var deviceOrientationInitialized = false;\n        var devicePixelRatio = null;\n\n        /**\n         * check the device capapbilities\n         * @ignore\n         */\n        api._check = function () {\n\n            // detect device type/platform\n            me.device._detectDevice();\n\n            // future proofing (MS) feature detection\n            me.device.pointerEnabled = me.agent.prefixed(\"pointerEnabled\", navigator);\n            me.device.maxTouchPoints = me.agent.prefixed(\"maxTouchPoints\", navigator) || 0;\n            window.gesture = me.agent.prefixed(\"gesture\");\n\n            // detect touch capabilities\n            me.device.touch = (\"createTouch\" in document) || (\"ontouchstart\" in window) ||\n                              (navigator.isCocoonJS) || (me.device.pointerEnabled && (me.device.maxTouchPoints > 0));\n\n            // accelerometer detection\n            me.device.hasAccelerometer = (\n                (typeof (window.DeviceMotionEvent) !== \"undefined\") || (\n                    (typeof (window.Windows) !== \"undefined\") &&\n                    (typeof (Windows.Devices.Sensors.Accelerometer) === \"function\")\n                )\n            );\n\n            // pointerlock detection\n            this.hasPointerLockSupport = me.agent.prefixed(\"pointerLockElement\", document);\n\n            if (this.hasPointerLockSupport) {\n                document.exitPointerLock = me.agent.prefixed(\"exitPointerLock\", document);\n            }\n\n            // device motion detection\n            if (window.DeviceOrientationEvent) {\n                me.device.hasDeviceOrientation = true;\n            }\n\n            // fullscreen api detection & polyfill when possible\n            this.hasFullscreenSupport = me.agent.prefixed(\"fullscreenEnabled\", document) ||\n                                        document.mozFullScreenEnabled;\n\n            document.exitFullscreen = me.agent.prefixed(\"cancelFullScreen\", document) ||\n                                      me.agent.prefixed(\"exitFullscreen\", document);\n\n            // vibration API poyfill\n            navigator.vibrate = me.agent.prefixed(\"vibrate\", navigator);\n\n            try {\n                api.localStorage = !!window.localStorage;\n            } catch (e) {\n                // the above generates an exception when cookies are blocked\n                api.localStorage = false;\n            }\n\n            // set pause/stop action on losing focus\n            window.addEventListener(\"blur\", function () {\n                if (me.sys.stopOnBlur) {\n                    me.state.stop(true);\n                }\n                if (me.sys.pauseOnBlur) {\n                    me.state.pause(true);\n                }\n            }, false);\n            // set restart/resume action on gaining focus\n            window.addEventListener(\"focus\", function () {\n                if (me.sys.stopOnBlur) {\n                    me.state.restart(true);\n                }\n                if (me.sys.resumeOnFocus) {\n                    me.state.resume(true);\n                }\n            }, false);\n\n\n            // Set the name of the hidden property and the change event for visibility\n            var hidden, visibilityChange;\n            if (typeof document.hidden !== \"undefined\") {\n                // Opera 12.10 and Firefox 18 and later support\n                hidden = \"hidden\";\n                visibilityChange = \"visibilitychange\";\n            } else if (typeof document.mozHidden !== \"undefined\") {\n                hidden = \"mozHidden\";\n                visibilityChange = \"mozvisibilitychange\";\n            } else if (typeof document.msHidden !== \"undefined\") {\n                hidden = \"msHidden\";\n                visibilityChange = \"msvisibilitychange\";\n            } else if (typeof document.webkitHidden !== \"undefined\") {\n                hidden = \"webkitHidden\";\n                visibilityChange = \"webkitvisibilitychange\";\n            }\n\n            // register on the event if supported\n            if (typeof (visibilityChange) === \"string\") {\n                // add the corresponding event listener\n                document.addEventListener(visibilityChange,\n                    function () {\n                        if (document[hidden]) {\n                            if (me.sys.stopOnBlur) {\n                                me.state.stop(true);\n                            }\n                            if (me.sys.pauseOnBlur) {\n                                me.state.pause(true);\n                            }\n                        } else {\n                            if (me.sys.stopOnBlur) {\n                                me.state.restart(true);\n                            }\n                            if (me.sys.resumeOnFocus) {\n                                me.state.resume(true);\n                            }\n                        }\n                    }, false\n                );\n            }\n        };\n\n        /**\n         * detect the device type\n         * @ignore\n         */\n        api._detectDevice = function () {\n            // iOS Device ?\n            me.device.iOS = me.device.ua.match(/iPhone|iPad|iPod/i) || false;\n            // Android Device ?\n            me.device.android = me.device.ua.match(/Android/i) || false;\n            me.device.android2 = me.device.ua.match(/Android 2/i) || false;\n            // Windows Device ?\n            me.device.wp = me.device.ua.match(/Windows Phone/i) || false;\n            // Kindle device ?\n            me.device.BlackBerry = me.device.ua.match(/BlackBerry/i) || false;\n            // Kindle device ?\n            me.device.Kindle = me.device.ua.match(/Kindle|Silk.*Mobile Safari/i) || false;\n\n            // Mobile platform\n            me.device.isMobile = me.device.ua.match(/Mobi/i) ||\n                                 me.device.iOS ||\n                                 me.device.android ||\n                                 me.device.wp ||\n                                 me.device.BlackBerry ||\n                                 me.device.Kindle ||\n                                 me.device.iOS || false;\n            // ejecta\n            me.device.ejecta = (typeof window.ejecta !== \"undefined\");\n        };\n\n        /*\n         * PUBLIC Properties & Functions\n         */\n\n        // Browser capabilities\n\n        /**\n         * Browser User Agent\n         * @type Boolean\n         * @readonly\n         * @name ua\n         * @memberOf me.device\n         */\n        api.ua = navigator.userAgent;\n\n        /**\n         * Browser Local Storage capabilities <br>\n         * (this flag will be set to false if cookies are blocked)\n         * @type Boolean\n         * @readonly\n         * @name localStorage\n         * @memberOf me.device\n         */\n        api.localStorage = false;\n\n        /**\n         * Browser accelerometer capabilities\n         * @type Boolean\n         * @readonly\n         * @name hasAccelerometer\n         * @memberOf me.device\n         */\n        api.hasAccelerometer = false;\n\n        /**\n         * Browser device orientation\n         * @type Boolean\n         * @readonly\n         * @name hasDeviceOrientation\n         * @memberOf me.device\n         */\n        api.hasDeviceOrientation = false;\n\n        /**\n         * Browser full screen support\n         * @type Boolean\n         * @readonly\n         * @name hasFullscreenSupport\n         * @memberOf me.device\n         */\n        api.hasFullscreenSupport = false;\n\n         /**\n         * Browser pointerlock api support\n         * @type Boolean\n         * @readonly\n         * @name hasPointerLockSupport\n         * @memberOf me.device\n         */\n        api.hasPointerLockSupport = false;\n\n        /**\n         * Browser Base64 decoding capability\n         * @type Boolean\n         * @readonly\n         * @name nativeBase64\n         * @memberOf me.device\n         */\n        api.nativeBase64 = (typeof(window.atob) === \"function\");\n\n         /**\n         * Return the maximum number of touch contacts of current device.\n         * @type Number\n         * @readonly\n         * @name maxTouchPoints\n         * @memberOf me.device\n         */\n        api.maxTouchPoints = 0;\n\n        /**\n         * Touch capabilities\n         * @type Boolean\n         * @readonly\n         * @name touch\n         * @memberOf me.device\n         */\n        api.touch = false;\n\n        /**\n         * equals to true if a mobile device <br>\n         * (Android | iPhone | iPad | iPod | BlackBerry | Windows Phone | Kindle)\n         * @type Boolean\n         * @readonly\n         * @name isMobile\n         * @memberOf me.device\n         */\n        api.isMobile = false;\n\n        /**\n         * equals to true if the device is an iOS platform.\n         * @type Boolean\n         * @readonly\n         * @name iOS\n         * @memberOf me.device\n         */\n        api.iOS = false;\n\n        /**\n         * equals to true if the device is an Android platform.\n         * @type Boolean\n         * @readonly\n         * @name android\n         * @memberOf me.device\n         */\n        api.android = false;\n\n        /**\n         * equals to true if the device is an Android 2.x platform.\n         * @type Boolean\n         * @readonly\n         * @name android2\n         * @memberOf me.device\n         */\n        api.android2 = false;\n\n       /**\n        * equals to true if the game is running under Ejecta.\n        * @type Boolean\n        * @readonly\n        * @see http://impactjs.com/ejecta\n        * @name ejecta\n        * @memberOf me.device\n        */\n        api.ejecta = false;\n\n\n         /**\n         * equals to true if the device is a Windows Phone platform.\n         * @type Boolean\n         * @readonly\n         * @name wp\n         * @memberOf me.device\n         */\n        api.wp = false;\n\n        /**\n         * equals to true if the device is a BlackBerry platform.\n         * @type Boolean\n         * @readonly\n         * @name BlackBerry\n         * @memberOf me.device\n         */\n        api.BlackBerry = false;\n\n        /**\n         * equals to true if the device is a Kindle platform.\n         * @type Boolean\n         * @readonly\n         * @name Kindle\n         * @memberOf me.device\n         */\n        api.Kindle = false;\n\n        /**\n         * The device current orientation status. <br>\n         *   0 : default orientation<br>\n         *  90 : 90 degrees clockwise from default<br>\n         * -90 : 90 degrees anti-clockwise from default<br>\n         * 180 : 180 degrees from default\n         * @type Number\n         * @readonly\n         * @name orientation\n         * @memberOf me.device\n         */\n        api.orientation = 0;\n\n        /**\n         * contains the g-force acceleration along the x-axis.\n         * @public\n         * @type Number\n         * @readonly\n         * @name accelerationX\n         * @memberOf me.device\n         */\n        api.accelerationX = 0;\n\n        /**\n         * contains the g-force acceleration along the y-axis.\n         * @public\n         * @type Number\n         * @readonly\n         * @name accelerationY\n         * @memberOf me.device\n         */\n        api.accelerationY = 0;\n\n        /**\n         * contains the g-force acceleration along the z-axis.\n         * @public\n         * @type Number\n         * @readonly\n         * @name accelerationZ\n         * @memberOf me.device\n         */\n        api.accelerationZ = 0;\n\n        /**\n         * Device orientation Gamma property. Gives angle on tilting a portrait held phone left or right\n         * @public\n         * @type Number\n         * @readonly\n         * @name gamma\n         * @memberOf me.device\n         */\n        api.gamma = 0;\n\n        /**\n         * Device orientation Beta property. Gives angle on tilting a portrait held phone forward or backward\n         * @public\n         * @type Number\n         * @readonly\n         * @name beta\n         * @memberOf me.device\n         */\n        api.beta = 0;\n\n        /**\n         * Device orientation Alpha property. Gives angle based on the rotation of the phone around its z axis.\n         * The z-axis is perpendicular to the phone, facing out from the center of the screen.\n         * @public\n         * @type Number\n         * @readonly\n         * @name alpha\n         * @memberOf me.device\n         */\n        api.alpha = 0;\n\n        /**\n         * a string representing the preferred language of the user, usually the language of the browser UI.\n         * (will default to \"en\" if the information is not available)\n         * @public\n         * @type String\n         * @readonly\n         * @see http://www.w3schools.com/tags/ref_language_codes.asp\n         * @name language\n         * @memberOf me.device\n         */\n        api.language = navigator.language || navigator.browserLanguage || navigator.userLanguage || \"en\";\n\n        /**\n         * Triggers a fullscreen request. Requires fullscreen support from the browser/device.\n         * @name requestFullscreen\n         * @memberOf me.device\n         * @function\n         * @param {Object} [element=default canvas object] the element to be set in full-screen mode.\n         * @example\n         * // add a keyboard shortcut to toggle Fullscreen mode on/off\n         * me.input.bindKey(me.input.KEY.F, \"toggleFullscreen\");\n         * me.event.subscribe(me.event.KEYDOWN, function (action, keyCode, edge) {\n         *    // toggle fullscreen on/off\n         *    if (action === \"toggleFullscreen\") {\n         *       if (!me.device.isFullscreen) {\n         *          me.device.requestFullscreen();\n         *       } else {\n         *          me.device.exitFullscreen();\n         *       }\n         *    }\n         * });\n         */\n        api.requestFullscreen = function (element) {\n            if (this.hasFullscreenSupport) {\n                element = element || me.video.getWrapper();\n                element.requestFullscreen = me.agent.prefixed(\"requestFullscreen\", element) ||\n                                            element.mozRequestFullScreen;\n\n                element.requestFullscreen();\n            }\n        };\n\n        /**\n         * Exit fullscreen mode. Requires fullscreen support from the browser/device.\n         * @name exitFullscreen\n         * @memberOf me.device\n         * @function\n         */\n        api.exitFullscreen = function () {\n            if (this.hasFullscreenSupport) {\n                document.exitFullscreen();\n            }\n        };\n\n        /**\n         * return the device pixel ratio\n         * @name getPixelRatio\n         * @memberOf me.device\n         * @function\n         */\n        api.getPixelRatio = function () {\n\n            if (devicePixelRatio === null) {\n                var _context;\n                if (typeof me.video.renderer !== \"undefined\") {\n                    _context = me.video.renderer.getScreenContext();\n                } else {\n                    _context = me.Renderer.prototype.getContext2d(document.createElement(\"canvas\"));\n                }\n                var _devicePixelRatio = window.devicePixelRatio || 1,\n                    _backingStoreRatio = me.agent.prefixed(\"backingStorePixelRatio\", _context) || 1;\n                devicePixelRatio = _devicePixelRatio / _backingStoreRatio;\n            }\n            return devicePixelRatio;\n        };\n\n        /**\n         * return the device storage\n         * @name getStorage\n         * @memberOf me.device\n         * @function\n         * @param {String} [type=\"local\"]\n         * @return me.save object\n         */\n        api.getStorage = function (type) {\n\n            type = type || \"local\";\n\n            switch (type) {\n                case \"local\" :\n                    return me.save;\n\n                default :\n                    throw new me.Error(\"storage type \" + type + \" not supported\");\n            }\n        };\n\n        /**\n         * event management (Accelerometer)\n         * http://www.mobilexweb.com/samples/ball.html\n         * http://www.mobilexweb.com/blog/safari-ios-accelerometer-websockets-html5\n         * @ignore\n         */\n        function onDeviceMotion(e) {\n            if (e.reading) {\n                // For Windows 8 devices\n                api.accelerationX = e.reading.accelerationX;\n                api.accelerationY = e.reading.accelerationY;\n                api.accelerationZ = e.reading.accelerationZ;\n            }\n            else {\n                // Accelerometer information\n                api.accelerationX = e.accelerationIncludingGravity.x;\n                api.accelerationY = e.accelerationIncludingGravity.y;\n                api.accelerationZ = e.accelerationIncludingGravity.z;\n            }\n        }\n\n        function onDeviceRotate(e) {\n            api.gamma = e.gamma;\n            api.beta = e.beta;\n            api.alpha = e.alpha;\n        }\n\n        /**\n         * Enters pointer lock, requesting it from the user first. Works on supported devices & browsers\n         * Must be called in a click event or an event that requires user interaction.\n         * If you need to run handle events for errors or change of the pointer lock, see below.\n         * @name turnOnPointerLock\n         * @memberOf me.device\n         * @function\n         * @example\n         * document.addEventListener(\"pointerlockchange\", pointerlockchange, false);\n         * document.addEventListener(\"mozpointerlockchange\", pointerlockchange, false);\n         * document.addEventListener(\"webkitpointerlockchange\", pointerlockchange, false);\n         *\n         * document.addEventListener(\"pointerlockerror\", pointerlockerror, false);\n         * document.addEventListener(\"mozpointerlockerror\", pointerlockerror, false);\n         * document.addEventListener(\"webkitpointerlockerror\", pointerlockerror, false);\n         */\n        api.turnOnPointerLock = function () {\n            if (this.hasPointerLockSupport) {\n                var element = me.video.getWrapper();\n                if (me.device.ua.match(/Firefox/i)) {\n                    var fullscreenchange = function () {\n                        if ((me.agent.prefixed(\"fullscreenElement\", document) ||\n                            document.mozFullScreenElement) === element) {\n\n                            document.removeEventListener(\"fullscreenchange\", fullscreenchange);\n                            document.removeEventListener(\"mozfullscreenchange\", fullscreenchange);\n                            element.requestPointerLock = me.agent.prefixed(\"requestPointerLock\", element);\n                            element.requestPointerLock();\n                        }\n                    };\n\n                    document.addEventListener(\"fullscreenchange\", fullscreenchange, false);\n                    document.addEventListener(\"mozfullscreenchange\", fullscreenchange, false);\n\n                    me.device.requestFullscreen();\n\n                }\n                else {\n                    element.requestPointerLock();\n                }\n            }\n        };\n\n        /**\n         * Exits pointer lock. Works on supported devices & browsers\n         * @name turnOffPointerLock\n         * @memberOf me.device\n         * @function\n         */\n        api.turnOffPointerLock = function () {\n            if (this.hasPointerLockSupport) {\n                document.exitPointerLock();\n            }\n        };\n\n        /**\n         * watch Accelerator event\n         * @name watchAccelerometer\n         * @memberOf me.device\n         * @public\n         * @function\n         * @return {Boolean} false if not supported by the device\n         */\n        api.watchAccelerometer = function () {\n            if (me.device.hasAccelerometer) {\n                if (!accelInitialized) {\n                    if (typeof Windows === \"undefined\") {\n                        // add a listener for the devicemotion event\n                        window.addEventListener(\"devicemotion\", onDeviceMotion, false);\n                    }\n                    else {\n                        // On Windows 8 Device\n                        var accelerometer = Windows.Devices.Sensors.Accelerometer.getDefault();\n                        if (accelerometer) {\n                            // Capture event at regular intervals\n                            var minInterval = accelerometer.minimumReportInterval;\n                            var Interval = minInterval >= 16 ? minInterval : 25;\n                            accelerometer.reportInterval = Interval;\n\n                            accelerometer.addEventListener(\"readingchanged\", onDeviceMotion, false);\n                        }\n                    }\n                    accelInitialized = true;\n                }\n                return true;\n            }\n            return false;\n        };\n\n        /**\n         * unwatch Accelerometor event\n         * @name unwatchAccelerometer\n         * @memberOf me.device\n         * @public\n         * @function\n         */\n        api.unwatchAccelerometer = function () {\n            if (accelInitialized) {\n                if (typeof Windows === \"undefined\") {\n                    // add a listener for the mouse\n                    window.removeEventListener(\"devicemotion\", onDeviceMotion, false);\n                } else {\n                    // On Windows 8 Devices\n                    var accelerometer = Windows.Device.Sensors.Accelerometer.getDefault();\n\n                    accelerometer.removeEventListener(\"readingchanged\", onDeviceMotion, false);\n                }\n                accelInitialized = false;\n            }\n        };\n\n        /**\n         * watch the device orientation event\n         * @name watchDeviceOrientation\n         * @memberOf me.device\n         * @public\n         * @function\n         * @return {Boolean} false if not supported by the device\n         */\n        api.watchDeviceOrientation = function () {\n            if (me.device.hasDeviceOrientation && !deviceOrientationInitialized) {\n                window.addEventListener(\"deviceorientation\", onDeviceRotate, false);\n                deviceOrientationInitialized = true;\n            }\n            return false;\n        };\n\n        /**\n         * unwatch Device orientation event\n         * @name unwatchDeviceOrientation\n         * @memberOf me.device\n         * @public\n         * @function\n         */\n        api.unwatchDeviceOrientation = function () {\n            if (deviceOrientationInitialized) {\n                window.removeEventListener(\"deviceorientation\", onDeviceRotate, false);\n                deviceOrientationInitialized = false;\n            }\n        };\n\n        /**\n         * the vibrate method pulses the vibration hardware on the device, <br>\n         * If the device doesn't support vibration, this method has no effect. <br>\n         * If a vibration pattern is already in progress when this method is called,\n         * the previous pattern is halted and the new one begins instead.\n         * @name vibrate\n         * @memberOf me.device\n         * @public\n         * @function\n         * @param {Number|Number[]} pattern pattern of vibration and pause intervals\n         * @example\n         * // vibrate for 1000 ms\n         * navigator.vibrate(1000);\n         * // or alternatively\n         * navigator.vibrate([1000]);\n         * // vibrate for 50 ms, be still for 100 ms, and then vibrate for 150 ms:\n         * navigator.vibrate([50, 100, 150]);\n         * // cancel any existing vibrations\n         * navigator.vibrate(0);\n         */\n        api.vibrate = function (pattern) {\n            if (navigator.vibrate) {\n                navigator.vibrate(pattern);\n            }\n        };\n\n\n        return api;\n    })();\n\n    /**\n     * Returns true if the browser/device is in full screen mode.\n     * @name isFullscreen\n     * @memberOf me.device\n     * @public\n     * @type Boolean\n     * @readonly\n     * @return {boolean}\n     */\n    Object.defineProperty(me.device, \"isFullscreen\", {\n        get: function () {\n            if (me.device.hasFullscreenSupport) {\n                var el = me.agent.prefixed(\"fullscreenElement\", document) ||\n                         document.mozFullScreenElement;\n                return (el === me.video.getWrapper());\n            } else {\n                return false;\n            }\n        }\n    });\n\n    /**\n     * Returns true if the browser/device has audio capabilities.\n     * @name sound\n     * @memberOf me.device\n     * @public\n     * @type Boolean\n     * @readonly\n     * @return {boolean}\n     */\n    Object.defineProperty(me.device, \"sound\", {\n        get: function () {\n                return !Howler.noAudio;\n            }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a Timer object to manage time function (FPS, Game Tick, Time...)<p>\n     * There is no constructor function for me.timer\n     * @namespace me.timer\n     * @memberOf me\n     */\n    me.timer = (function () {\n        // hold public stuff in our api\n        var api = {};\n\n        /*\n         * PRIVATE STUFF\n         */\n\n        //hold element to display fps\n        var framecount = 0;\n        var framedelta = 0;\n\n        /* fps count stuff */\n        var last = 0;\n        var now = 0;\n        var delta = 0;\n        var step = Math.ceil(1000 / me.sys.fps); // ROUND IT ?\n        // define some step with some margin\n        var minstep = (1000 / me.sys.fps) * 1.25; // IS IT NECESSARY?\\\n\n        // list of defined timer function\n        var timers = [];\n        var timerId = 0;\n\n        /**\n         * @ignore\n         */\n        var clearTimer = function (timerId) {\n            for (var i = 0, len = timers.length; i < len; i++) {\n                if (timers[i].timerId === timerId) {\n                    timers.splice(i, 1);\n                    break;\n                }\n            }\n        };\n\n        /**\n         * update timers\n         * @ignore\n         */\n        var updateTimers = function (dt) {\n            for (var i = 0, len = timers.length; i < len; i++) {\n                var _timer = timers[i];\n                if (!(_timer.pauseable && me.state.isPaused())) {\n                    _timer.elapsed += dt;\n                }\n                if (_timer.elapsed >= _timer.delay) {\n                    _timer.fn.apply(this);\n                    if (_timer.repeat === true) {\n                        _timer.elapsed -= _timer.delay;\n                    } else {\n                        me.timer.clearTimeout(_timer.timerId);\n                    }\n                }\n            }\n        };\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Last game tick value.<br/>\n         * Use this value to scale velocities during frame drops due to slow\n         * hardware or when setting an FPS limit. (See {@link me.sys.fps})\n         * This feature is disabled by default. Enable me.sys.interpolation to\n         * use it.\n         * @public\n         * @see me.sys.interpolation\n         * @type Number\n         * @name tick\n         * @memberOf me.timer\n         */\n        api.tick = 1.0;\n\n        /**\n         * Last measured fps rate.<br/>\n         * This feature is disabled by default. Load and enable the DebugPanel\n         * plugin to use it.\n         * @public\n         * @type Number\n         * @name fps\n         * @memberOf me.timer\n         */\n        api.fps = 0;\n        \n        /**\n         * Last update time.<br/>\n         * Use this value to implement frame prediction in drawing events,\n         * for creating smooth motion while running game update logic at\n         * a lower fps.\n         * @public\n         * @type Date\n         * @name lastUpdate\n         * @memberOf me.timer\n         */\n        api.lastUpdate = window.performance.now();\n\n        /**\n         * init the timer\n         * @ignore\n         */\n        api.init = function () {\n            // reset variables to initial state\n            api.reset();\n            now = last = 0;\n        };\n\n        /**\n         * reset time (e.g. usefull in case of pause)\n         * @name reset\n         * @memberOf me.timer\n         * @ignore\n         * @function\n         */\n        api.reset = function () {\n            // set to \"now\"\n            last = now = window.performance.now();\n            delta = 0;\n            // reset delta counting variables\n            framedelta = 0;\n            framecount = 0;\n        };\n\n        /**\n         * Calls a function once after a specified delay.\n         * @name setTimeout\n         * @memberOf me.timer\n         * @param {Function} fn the function you want to execute after delay milliseconds.\n         * @param {Number} delay the number of milliseconds (thousandths of a second) that the function call should be delayed by.\n         * @param {Boolean} [pauseable=true] respects the pause state of the engine.\n         * @return {Number} The numerical ID of the timeout, which can be used later with me.timer.clearTimeout().\n         * @function\n         */\n        api.setTimeout = function (fn, delay, pauseable) {\n            timers.push({\n                fn : fn,\n                delay : delay,\n                elapsed : 0,\n                repeat : false,\n                timerId : ++timerId,\n                pauseable : pauseable === true || true\n            });\n            return timerId;\n        };\n\n        /**\n         * Calls a function at specified interval.\n         * @name setInterval\n         * @memberOf me.timer\n         * @param {Function} fn the function to execute\n         * @param {Number} delay the number of milliseconds (thousandths of a second) on how often to execute the function\n         * @param {Boolean} [pauseable=true] respects the pause state of the engine.\n         * @return {Number} The numerical ID of the timeout, which can be used later with me.timer.clearInterval().\n         * @function\n         */\n        api.setInterval = function (fn, delay, pauseable) {\n            timers.push({\n                fn : fn,\n                delay : delay,\n                elapsed : 0,\n                repeat : true,\n                timerId : ++timerId,\n                pauseable : pauseable === true || true\n            });\n            return timerId;\n        };\n\n        /**\n         * Clears the delay set by me.timer.setTimeout().\n         * @name clearTimeout\n         * @memberOf me.timer\n         * @function\n         * @param {Number} timeoutID ID of the timeout to be cleared\n         */\n        api.clearTimeout = function (timeoutID) {\n            clearTimer.defer(this, timeoutID);\n        };\n\n        /**\n         * Clears the Interval set by me.timer.setInterval().\n         * @name clearInterval\n         * @memberOf me.timer\n         * @function\n         * @param {Number} intervalID ID of the interval to be cleared\n         */\n        api.clearInterval = function (intervalID) {\n            clearTimer.defer(this, intervalID);\n        };\n\n        /**\n         * Return the current timestamp in milliseconds <br>\n         * since the game has started or since linux epoch (based on browser support for High Resolution Timer)\n         * @name getTime\n         * @memberOf me.timer\n         * @return {Number}\n         * @function\n         */\n        api.getTime = function () {\n            return now;\n        };\n\n        /**\n         * Return elapsed time in milliseconds since the last update<br>\n         * @name getDelta\n         * @memberOf me.timer\n         * @return {Number}\n         * @function\n         */\n        api.getDelta = function () {\n            return delta;\n        };\n\n        /**\n         * compute the actual frame time and fps rate\n         * @name computeFPS\n         * @ignore\n         * @memberOf me.timer\n         * @function\n         */\n        api.countFPS = function () {\n            framecount++;\n            framedelta += delta;\n            if (framecount % 10 === 0) {\n                this.fps = (~~((1000 * framecount) / framedelta)).clamp(0, me.sys.fps);\n                framedelta = 0;\n                framecount = 0;\n            }\n        };\n\n        /**\n         * update game tick\n         * should be called once a frame\n         * @param {Number} time current timestamp as provided by the RAF callback\n         * @return {Number} time elapsed since the last update\n         * @ignore\n         */\n        api.update = function (time) {\n            last = now;\n            now = time;\n            delta = (now - last);\n\n            // get the game tick\n            api.tick = (delta > minstep && me.sys.interpolation) ? delta / step : 1;\n\n            // update defined timers\n            updateTimers(delta);\n\n            return delta;\n        };\n\n        // return our apiect\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A pool of Object entity <br>\n     * This object is used for object pooling - a technique that might speed up your game\n     * if used properly. <br>\n     * If some of your classes will be instantiated and removed a lot at a time, it is a\n     * good idea to add the class to this entity pool. A separate pool for that class\n     * will be created, which will reuse objects of the class. That way they won't be instantiated\n     * each time you need a new one (slowing your game), but stored into that pool and taking one\n     * already instantiated when you need it.<br><br>\n     * This object is also used by the engine to instantiate objects defined in the map,\n     * which means, that on level loading the engine will try to instantiate every object\n     * found in the map, based on the user defined name in each Object Properties<br>\n     * <img src=\"images/object_properties.png\"/><br>\n     * @namespace me.pool\n     * @memberOf me\n     */\n    me.pool = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        var entityClass = {};\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Constructor\n         * @ignore\n         */\n        api.init = function () {\n            // add default entity object\n            api.register(\"me.Entity\", me.Entity);\n            api.register(\"me.CollectableEntity\", me.CollectableEntity);\n            api.register(\"me.LevelEntity\", me.LevelEntity);\n            api.register(\"me.Tween\", me.Tween, true);\n            api.register(\"me.Color\", me.Color, true);\n            api.register(\"me.Particle\", me.Particle, true);\n            api.register(\"me.Sprite\", me.Sprite);\n            api.register(\"me.Vector2d\", me.Vector2d, true);\n        };\n\n        /**\n         * register an object to the pool. <br>\n         * Pooling must be set to true if more than one such objects will be created. <br>\n         * (note) If pooling is enabled, you shouldn't instantiate objects with `new`.\n         * See examples in {@link me.pool#pull}\n         * @name register\n         * @memberOf me.pool\n         * @public\n         * @function\n         * @param {String} className as defined in the Name field of the Object Properties (in Tiled)\n         * @param {Object} class corresponding Class to be instantiated\n         * @param {Boolean} [objectPooling=false] enables object pooling for the specified class\n         * - speeds up the game by reusing existing objects\n         * @example\n         * // add our users defined entities in the entity pool\n         * me.pool.register(\"playerspawnpoint\", PlayerEntity);\n         * me.pool.register(\"cherryentity\", CherryEntity, true);\n         * me.pool.register(\"heartentity\", HeartEntity, true);\n         * me.pool.register(\"starentity\", StarEntity, true);\n         */\n        api.register = function (className, entityObj, pooling) {\n            entityClass[className] = {\n                \"class\" : entityObj,\n                \"pool\" : (pooling ? [] : undefined)\n            };\n        };\n\n        /**\n         * Pull a new instance of the requested object (if added into the object pool)\n         * @name pull\n         * @memberOf me.pool\n         * @public\n         * @function\n         * @param {String} className as used in {@link me.pool.register}\n         * @param {} [arguments...] arguments to be passed when instantiating/reinitializing the object\n         * @return {Object} the instance of the requested object\n         * @example\n         * me.pool.register(\"player\", PlayerEntity);\n         * var player = me.pool.pull(\"player\");\n         * @example\n         * me.pool.register(\"bullet\", BulletEntity, true);\n         * me.pool.register(\"enemy\", EnemyEntity, true);\n         * // ...\n         * // when we need to manually create a new bullet:\n         * var bullet = me.pool.pull(\"bullet\", x, y, direction);\n         * // ...\n         * // params aren't a fixed number\n         * // when we need new enemy we can add more params, that the object construct requires:\n         * var enemy = me.pool.pull(\"enemy\", x, y, direction, speed, power, life);\n         * // ...\n         * // when we want to destroy existing object, the remove\n         * // function will ensure the object can then be reallocated later\n         * me.game.world.removeChild(enemy);\n         * me.game.world.removeChild(bullet);\n         */\n        api.pull = function (name) {\n            var args = new Array(arguments.length);\n            for (var i = 0; i < arguments.length; i++) {\n                args[i] = arguments[i];\n            }\n            var entity = entityClass[name];\n            if (entity) {\n                var proto = entity[\"class\"],\n                    pool = entity.pool,\n                    obj;\n\n                if (pool && ((obj = pool.pop()))) {\n                    args.shift();\n                    // call the object onResetEvent function if defined\n                    if (typeof(obj.onResetEvent) === \"function\") {\n                        obj.onResetEvent.apply(obj, args);\n                    }\n                    else {\n                        obj.init.apply(obj, args);\n                    }\n                }\n                else {\n                    args[0] = proto;\n                    obj = new (proto.bind.apply(proto, args))();\n                    if (pool) {\n                        obj.className = name;\n                    }\n                }\n                return obj;\n            }\n\n            throw new me.Error(\"Cannot instantiate entity of type '\" + name + \"'\");\n        };\n\n        /**\n         * purge the entity pool from any inactive object <br>\n         * Object pooling must be enabled for this function to work<br>\n         * note: this will trigger the garbage collector\n         * @name purge\n         * @memberOf me.pool\n         * @public\n         * @function\n         */\n        api.purge = function () {\n            for (var className in entityClass) {\n                if (entityClass[className]) {\n                    entityClass[className].pool = [];\n                }\n            }\n        };\n\n        /**\n         * Push back an object instance into the entity pool <br>\n         * Object pooling for the object class must be enabled,\n         * and object must have been instantiated using {@link me.pool#pull},\n         * otherwise this function won't work\n         * @name push\n         * @memberOf me.pool\n         * @public\n         * @function\n         * @param {Object} instance to be recycled\n         */\n        api.push = function (obj) {\n            var name = obj.className;\n            if (typeof(name) === \"undefined\" || !entityClass[name]) {\n                // object is not registered, don't do anything\n                return;\n            }\n            // store back the object instance for later recycling\n            entityClass[name].pool.push(obj);\n        };\n\n        /**\n         * Check if an object with the provided name is registered\n         * @name exists\n         * @memberOf me.pool\n         * @public\n         * @function\n         * @param {String} name of the registered object\n         * @return {Boolean} true if the classname is registered\n         */\n        api.exists = function (name) {\n            return name in entityClass;\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a generic 2D Vector Object\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Number} [x=0] x value of the vector\n     * @param {Number} [y=0] y value of the vector\n     */\n    me.Vector2d = me.Object.extend(\n    /** @scope me.Vector2d.prototype */\n    {\n        /** @ignore */\n        init : function (x, y) {\n            return this.set(x || 0, y || 0);\n        },\n        \n        /** \n         * @ignore */\n        _set : function (x, y) {\n            this.x = x;\n            this.y = y;\n            return this;\n        },\n\n        /**\n         * set the Vector x and y properties to the given values<br>\n         * @name set\n         * @memberOf me.Vector2d\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        set : function (x, y) {\n            if (x !== +x || y !== +y) {\n                throw new me.Vector2d.Error(\n                    \"invalid x,y parameters (not a number)\"\n                );\n            }\n\n            /**\n             * x value of the vector\n             * @public\n             * @type Number\n             * @name x\n             * @memberOf me.Vector2d\n             */\n            //this.x = x;\n\n            /**\n             * y value of the vector\n             * @public\n             * @type Number\n             * @name y\n             * @memberOf me.Vector2d\n             */\n            //this.y = y;\n\n            return this._set(x, y);\n        },\n\n        /**\n         * set the Vector x and y properties to 0\n         * @name setZero\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        setZero : function () {\n            return this.set(0, 0);\n        },\n\n        /**\n         * set the Vector x and y properties using the passed vector\n         * @name setV\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        setV : function (v) {\n            return this._set(v.x, v.y);\n        },\n\n        /**\n         * Add the passed vector to this vector\n         * @name add\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        add : function (v) {\n            return this._set(this.x + v.x, this.y + v.y);\n        },\n\n        /**\n         * Substract the passed vector to this vector\n         * @name sub\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        sub : function (v) {\n            return this._set(this.x - v.x, this.y - v.y);\n        },\n\n        /**\n         * Multiply this vector values by the given scalar\n         * @name scale\n         * @memberOf me.Vector2d\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        scale : function (x, y) {\n            return this._set(this.x * x, this.y * (typeof (y) !== \"undefined\" ? y : x));\n        },\n\n        /**\n         * Multiply this vector values by the passed vector\n         * @name scaleV\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this._set(this.x * v.x, this.y * v.y);\n        },\n\n        /**\n         * Divide this vector values by the passed value\n         * @name div\n         * @memberOf me.Vector2d\n         * @function\n         * @param {Number} value\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        div : function (n) {\n            return this._set(this.x / n, this.y / n);\n        },\n\n        /**\n         * Update this vector values to absolute values\n         * @name abs\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        abs : function () {\n            return this._set((this.x < 0) ? -this.x : this.x, (this.y < 0) ? -this.y : this.y);\n        },\n\n        /**\n         * Clamp the vector value within the specified value range\n         * @name clamp\n         * @memberOf me.Vector2d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        clamp : function (low, high) {\n            return new me.Vector2d(this.x.clamp(low, high), this.y.clamp(low, high));\n        },\n\n        /**\n         * Clamp this vector value within the specified value range\n         * @name clampSelf\n         * @memberOf me.Vector2d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        clampSelf : function (low, high) {\n            return this._set(this.x.clamp(low, high), this.y.clamp(low, high));\n        },\n\n        /**\n         * Update this vector with the minimum value between this and the passed vector\n         * @name minV\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        minV : function (v) {\n            return this._set((this.x < v.x) ? this.x : v.x, (this.y < v.y) ? this.y : v.y);\n        },\n\n        /**\n         * Update this vector with the maximum value between this and the passed vector\n         * @name maxV\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        maxV : function (v) {\n            return this._set((this.x > v.x) ? this.x : v.x, (this.y > v.y) ? this.y : v.y);\n        },\n\n        /**\n         * Floor the vector values\n         * @name floor\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        floor : function () {\n            return new me.Vector2d(Math.floor(this.x), Math.floor(this.y));\n        },\n\n        /**\n         * Floor this vector values\n         * @name floorSelf\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        floorSelf : function () {\n            return this._set(Math.floor(this.x), Math.floor(this.y));\n        },\n\n        /**\n         * Ceil the vector values\n         * @name ceil\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        ceil : function () {\n            return new me.Vector2d(Math.ceil(this.x), Math.ceil(this.y));\n        },\n\n        /**\n         * Ceil this vector values\n         * @name ceilSelf\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        ceilSelf : function () {\n            return this._set(Math.ceil(this.x), Math.ceil(this.y));\n        },\n\n        /**\n         * Negate the vector values\n         * @name negate\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        negate : function () {\n            return new me.Vector2d(-this.x, -this.y);\n        },\n\n        /**\n         * Negate this vector values\n         * @name negateSelf\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        negateSelf : function () {\n            return this._set(-this.x, -this.y);\n        },\n\n        /**\n         * Copy the x,y values of the passed vector to this one\n         * @name copy\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        copy : function (v) {\n            return this._set(v.x, v.y);\n        },\n\n        /**\n         * return true if the two vectors are the same\n         * @name equals\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {Boolean}\n         */\n        equals : function (v) {\n            return ((this.x === v.x) && (this.y === v.y));\n        },\n\n        /**\n         * normalize this vector (scale the vector so that its magnitude is 1)\n         * @name normalize\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        normalize : function () {\n            var d = this.length();\n            if (d > 0) {\n                return this._set(this.x / d, this.y / d);\n            }\n            return this;\n        },\n\n        /**\n         * change this vector to be perpendicular to what it was before.<br>\n         * (Effectively rotates it 90 degrees in a clockwise direction)\n         * @name perp\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        perp : function () {\n            return this._set(this.y, -this.x);\n        },\n\n        /**\n         * Rotate this vector (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.Vector2d\n         * @function\n         * @param {number} angle The angle to rotate (in radians)\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            var x = this.x;\n            var y = this.y;\n            return this._set(x * Math.cos(angle) - y * Math.sin(angle), x * Math.sin(angle) + y * Math.cos(angle));\n        },\n\n        /**\n         * return the dot product of this vector and the passed one\n         * @name dotProduct\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {Number} The dot product.\n         */\n        dotProduct : function (v) {\n            return this.x * v.x + this.y * v.y;\n        },\n\n       /**\n         * return the square length of this vector\n         * @name length2\n         * @memberOf me.Vector2d\n         * @function\n         * @return {Number} The length^2 of this vector.\n         */\n        length2 : function () {\n            return this.dotProduct(this);\n        },\n\n        /**\n         * return the length (magnitude) of this vector\n         * @name length\n         * @memberOf me.Vector2d\n         * @function\n         * @return {Number} the length of this vector\n         */\n        length : function () {\n            return Math.sqrt(this.length2());\n        },\n\n        /**\n         * return the distance between this vector and the passed one\n         * @name distance\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {Number}\n         */\n        distance : function (v) {\n            var dx = this.x - v.x, dy = this.y - v.y;\n            return Math.sqrt(dx * dx + dy * dy);\n        },\n\n        /**\n         * return the angle between this vector and the passed one\n         * @name angle\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v\n         * @return {Number} angle in radians\n         */\n        angle : function (v) {\n            return Math.acos((this.dotProduct(v) / (this.length() * v.length())).clamp(-1, 1));\n        },\n\n        /**\n         * project this vector on to another vector.\n         * @name project\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v The vector to project onto.\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        project : function (v) {\n            return this.scale(this.dotProduct(v) / v.length2());\n        },\n\n        /**\n         * Project this vector onto a vector of unit length.<br>\n         * This is slightly more efficient than `project` when dealing with unit vectors.\n         * @name projectN\n         * @memberOf me.Vector2d\n         * @function\n         * @param {me.Vector2d} v The unit vector to project onto.\n         * @return {me.Vector2d} Reference to this object for method chaining\n         */\n        projectN : function (v) {\n            return this.scale(this.dotProduct(v));\n        },\n\n        /**\n         * return a clone copy of this vector\n         * @name clone\n         * @memberOf me.Vector2d\n         * @function\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        clone : function () {\n            return new me.Vector2d(this.x, this.y);\n        },\n\n        /**\n         * convert the object to a string representation\n         * @name toString\n         * @memberOf me.Vector2d\n         * @function\n         * @return {String}\n         */\n        toString : function () {\n            return \"x:\" + this.x + \",y:\" + this.y;\n        }\n    });\n\n    /**\n     * Base class for Vector2d exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Vector2d\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Vector2d.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Vector2d.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a generic 3D Vector Object\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Number} [x=0] x value of the vector\n     * @param {Number} [y=0] y value of the vector\n     * @param {Number} [z=0] z value of the vector\n     */\n    me.Vector3d = me.Object.extend(\n    /** @scope me.Vector3d.prototype */\n    {\n        /** @ignore */\n        init : function (x, y, z) {\n            return this.set(x || 0, y || 0, z || 0);\n        },\n        \n        /** \n         * @ignore */\n        _set : function (x, y, z) {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            return this;\n        },\n\n        /**\n         * set the Vector x and y properties to the given values<br>\n         * @name set\n         * @memberOf me.Vector3d\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} z\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        set : function (x, y, z) {\n            if (x !== +x || y !== +y || z !== +z) {\n                throw new me.Vector3d.Error(\n                    \"invalid x, y, z parameters (not a number)\"\n                );\n            }\n\n            /**\n             * x value of the vector\n             * @public\n             * @type Number\n             * @name x\n             * @memberOf me.Vector3d\n             */\n            //this.x = x;\n\n            /**\n             * y value of the vector\n             * @public\n             * @type Number\n             * @name y\n             * @memberOf me.Vector3d\n             */\n            //this.y = y;\n\n            /**\n             * z value of the vector\n             * @public\n             * @type Number\n             * @name z\n             * @memberOf me.Vector3d\n             */\n            //this.z = z;\n            \n            return this._set(x, y, z);\n        },\n\n        /**\n         * set the Vector x and y properties to 0\n         * @name setZero\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        setZero : function () {\n            return this.set(0, 0, 0);\n        },\n\n        /**\n         * set the Vector x and y properties using the passed vector\n         * @name setV\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        setV : function (v) {\n            return this._set(v.x, v.y, typeof (v.z) !== \"undefined\" ? v.z : this.z);\n        },\n\n        /**\n         * Add the passed vector to this vector\n         * @name add\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        add : function (v) {\n            return this._set(this.x + v.x, this.y + v.y, this.z + (v.z || 0));\n        },\n\n        /**\n         * Substract the passed vector to this vector\n         * @name sub\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        sub : function (v) {\n            return this._set(this.x - v.x, this.y - v.y, this.z - (v.z || 0));\n        },\n\n        /**\n         * Multiply this vector values by the given scalar\n         * @name scale\n         * @memberOf me.Vector3d\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @param {Number} [z=x]\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        scale : function (x, y, z) {\n            y = (typeof (y) !== \"undefined\" ? y : x);\n            z = (typeof (z) !== \"undefined\" ? z : x);\n            return this._set(this.x * x, this.y * y, this.z * z);\n        },\n\n        /**\n         * Multiply this vector values by the passed vector\n         * @name scaleV\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this._set(this.x * v.x, this.y * v.y, this.z * (v.z || 1));\n        },\n\n        /**\n         * Divide this vector values by the passed value\n         * @name div\n         * @memberOf me.Vector3d\n         * @function\n         * @param {Number} value\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        div : function (n) {\n            return this._set(this.x / n, this.y / n, this.z / n);\n        },\n\n        /**\n         * Update this vector values to absolute values\n         * @name abs\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        abs : function () {\n            return this._set((this.x < 0) ? -this.x : this.x, (this.y < 0) ? -this.y : this.y, (this.z < 0) ? -this.Z : this.z);\n        },\n\n        /**\n         * Clamp the vector value within the specified value range\n         * @name clamp\n         * @memberOf me.Vector3d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        clamp : function (low, high) {\n            return new me.Vector3d(this.x.clamp(low, high), this.y.clamp(low, high), this.z.clamp(low, high));\n        },\n\n        /**\n         * Clamp this vector value within the specified value range\n         * @name clampSelf\n         * @memberOf me.Vector3d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        clampSelf : function (low, high) {\n            return this._set(this.x.clamp(low, high), this.y.clamp(low, high), this.z.clamp(low, high));\n        },\n\n        /**\n         * Update this vector with the minimum value between this and the passed vector\n         * @name minV\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        minV : function (v) {\n            var _vz = v.z || 0;\n            return this._set((this.x < v.x) ? this.x : v.x, (this.y < v.y) ? this.y : v.y, (this.z < _vz) ? this.z : _vz);\n        },\n\n        /**\n         * Update this vector with the maximum value between this and the passed vector\n         * @name maxV\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        maxV : function (v) {\n            var _vz = v.z || 0;\n            return this._set((this.x > v.x) ? this.x : v.x, (this.y > v.y) ? this.y : v.y, (this.z > _vz) ? this.z : _vz);\n        },\n\n        /**\n         * Floor the vector values\n         * @name floor\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        floor : function () {\n            return new me.Vector3d(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\n        },\n\n        /**\n         * Floor this vector values\n         * @name floorSelf\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        floorSelf : function () {\n            return this._set(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\n        },\n\n        /**\n         * Ceil the vector values\n         * @name ceil\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        ceil : function () {\n            return new me.Vector3d(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\n        },\n\n        /**\n         * Ceil this vector values\n         * @name ceilSelf\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        ceilSelf : function () {\n            return this._set(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\n        },\n\n        /**\n         * Negate the vector values\n         * @name negate\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        negate : function () {\n            return new me.Vector3d(-this.x, -this.y, -this.z);\n        },\n\n        /**\n         * Negate this vector values\n         * @name negateSelf\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        negateSelf : function () {\n            return this._set(-this.x, -this.y, -this.z);\n        },\n\n        /**\n         * Copy the x,y values of the passed vector to this one\n         * @name copy\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        copy : function (v) {\n            return this._set(v.x, v.y, typeof (v.z) !== \"undefined\" ? v.z : this.z);\n        },\n\n        /**\n         * return true if the two vectors are the same\n         * @name equals\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {Boolean}\n         */\n        equals : function (v) {\n            return ((this.x === v.x) && (this.y === v.y) && (this.z === (v.z || this.z)));\n        },\n\n        /**\n         * normalize this vector (scale the vector so that its magnitude is 1)\n         * @name normalize\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        normalize : function () {\n            var d = this.length();\n            if (d > 0) {\n                return this._set(this.x / d, this.y / d, this.z / d);\n            }\n            return this;\n        },\n\n        /**\n         * change this vector to be perpendicular to what it was before.<br>\n         * (Effectively rotates it 90 degrees in a clockwise direction around the z axis)\n         * @name perp\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        perp : function () {\n            return this._set(this.y, -this.x, this.z);\n        },\n\n        /**\n         * Rotate this vector (counter-clockwise) by the specified angle (in radians) around the z axis\n         * @name rotate\n         * @memberOf me.Vector3d\n         * @function\n         * @param {number} angle The angle to rotate (in radians)\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            var x = this.x;\n            var y = this.y;\n            return this._set(x * Math.cos(angle) - y * Math.sin(angle), x * Math.sin(angle) + y * Math.cos(angle), this.z);\n        },\n\n        /**\n         * return the dot product of this vector and the passed one\n         * @name dotProduct\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {Number} The dot product.\n         */\n        dotProduct : function (v) {\n            return this.x * v.x + this.y * v.y + this.z * (v.z || 1);\n        },\n\n       /**\n         * return the square length of this vector\n         * @name length2\n         * @memberOf me.Vector3d\n         * @function\n         * @return {Number} The length^2 of this vector.\n         */\n        length2 : function () {\n            return this.dotProduct(this);\n        },\n\n        /**\n         * return the length (magnitude) of this vector\n         * @name length\n         * @memberOf me.Vector3d\n         * @function\n         * @return {Number} the length of this vector\n         */\n        length : function () {\n            return Math.sqrt(this.length2());\n        },\n\n        /**\n         * return the distance between this vector and the passed one\n         * @name distance\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {Number}\n         */\n        distance : function (v) {\n            var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - (v.z || 0);\n            return Math.sqrt(dx * dx + dy * dy + dz * dz);\n        },\n\n        /**\n         * return the angle between this vector and the passed one\n         * @name angle\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v\n         * @return {Number} angle in radians\n         */\n        angle : function (v) {\n            return Math.acos((this.dotProduct(v) / (this.length() * v.length())).clamp(-1, 1));\n        },\n\n        /**\n         * project this vector on to another vector.\n         * @name project\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v The vector to project onto.\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        project : function (v) {\n            return this.scale(this.dotProduct(v) / v.length2());\n        },\n\n        /**\n         * Project this vector onto a vector of unit length.<br>\n         * This is slightly more efficient than `project` when dealing with unit vectors.\n         * @name projectN\n         * @memberOf me.Vector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d} v The unit vector to project onto.\n         * @return {me.Vector3d} Reference to this object for method chaining\n         */\n        projectN : function (v) {\n            return this.scale(this.dotProduct(v));\n        },\n\n        /**\n         * return a clone copy of this vector\n         * @name clone\n         * @memberOf me.Vector3d\n         * @function\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        clone : function () {\n            return new me.Vector3d(this.x, this.y, this.z);\n        },\n\n        /**\n         * convert the object to a string representation\n         * @name toString\n         * @memberOf me.Vector3d\n         * @function\n         * @return {String}\n         */\n        toString : function () {\n            return \"x:\" + this.x + \",y:\" + this.y + \",z:\" + this.z;\n        }\n    });\n\n    /**\n     * Base class for Vector3d exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Vector3d\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Vector3d.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Vector3d.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A Vector2d object that provide notification by executing the given callback when the vector is changed.\n     * @class\n     * @extends me.Vector2d\n     * @constructor\n     * @param {Number} [x=0] x value of the vector\n     * @param {Number} [y=0] y value of the vector\n     * @param {Object} settings additional required parameters\n     * @param {Function} settings.onUpdate the callback to be executed when the vector is changed\n     */\n    me.ObservableVector2d = me.Vector2d.extend({\n    /** @scope me.ObservableVector2d.prototype */\n\n        /** @ignore */\n        init : function (x, y, settings) {\n            /**\n             * x value of the vector\n             * @public\n             * @type Number\n             * @name x\n             * @memberOf me.ObservableVector2d\n             */\n            Object.defineProperty(this, \"x\", {\n                get : function () {\n                    return this._x;\n                },\n\n                set : function (value) {\n                    this.onUpdate(value, this._y, this._x, this._y);\n                    this._x = value;\n                }\n            });\n\n            /**\n             * y value of the vector\n             * @public\n             * @type Number\n             * @name y\n             * @memberOf me.ObservableVector2d\n             */\n            Object.defineProperty(this, \"y\", {\n                get : function () {\n                    return this._y;\n                },\n\n                set : function (value) {\n                    this.onUpdate(this._x, value, this._x, this._y);\n                    this._y = value;\n                }\n            });\n\n            if (typeof(settings) === \"undefined\") {\n                throw new me.ObservableVector2d.Error(\n                    \"undefined `onUpdate` callback\"\n                );\n            }\n            this.setCallback(settings.onUpdate);\n            this._x = x || 0;\n            this._y = y || 0;\n        },\n\n        /** @ignore */\n        _set : function (x, y) {\n            this.onUpdate(x, y, this._x, this._y);\n            this._x = x;\n            this._y = y;\n            return this;\n        },\n\n        /**\n         * set the vector value without triggering the callback\n         * @name setMuted\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {Number} x x value of the vector\n         * @param {Number} y y value of the vector\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        setMuted : function (x, y) {\n            this._x = x;\n            this._y = y;\n            return this;\n        },\n        \n        /**\n         * set the callback to be executed when the vector is changed\n         * @name setCallback\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {function} onUpdate callback\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        setCallback : function (fn) {\n            if (typeof(fn) !== \"function\") {\n                throw new me.ObservableVector2d.Error(\n                    \"invalid `onUpdate` callback\"\n                );\n            }\n            this.onUpdate = fn;\n            return this;\n        },\n        \n        /**\n         * Add the passed vector to this vector\n         * @name add\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        add : function (v) {\n            return this._set(this._x + v.x, this._y + v.y);\n        },\n\n        /**\n         * Substract the passed vector to this vector\n         * @name sub\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        sub : function (v) {\n            return this._set(this._x - v.x, this._y - v.y);\n        },\n\n        /**\n         * Multiply this vector values by the given scalar\n         * @name scale\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        scale : function (x, y) {\n            return this._set(this._x * x, this._y * (typeof (y) !== \"undefined\" ? y : x));\n        },\n\n        /**\n         * Multiply this vector values by the passed vector\n         * @name scaleV\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this._set(this._x * v.x, this._y * v.y);\n        },\n\n        /**\n         * Divide this vector values by the passed value\n         * @name div\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {Number} value\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        div : function (n) {\n            return this._set(this._x / n, this._y / n);\n        },\n\n        /**\n         * Update this vector values to absolute values\n         * @name abs\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        abs : function () {\n            return this._set((this._x < 0) ? -this._x : this._x, (this._y < 0) ? -this._y : this._y);\n        },\n\n        /**\n         * Clamp the vector value within the specified value range\n         * @name clamp\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.ObservableVector2d} new me.ObservableVector2d\n         */\n        clamp : function (low, high) {\n            return new me.ObservableVector2d(this.x.clamp(low, high), this.y.clamp(low, high), {onUpdate: this.onUpdate});\n        },\n\n        /**\n         * Clamp this vector value within the specified value range\n         * @name clampSelf\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        clampSelf : function (low, high) {\n            return this._set(this._x.clamp(low, high), this._y.clamp(low, high));\n        },\n\n        /**\n         * Update this vector with the minimum value between this and the passed vector\n         * @name minV\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        minV : function (v) {\n            return this._set((this._x < v.x) ? this._x : v.x, (this._y < v.y) ? this._y : v.y);\n        },\n\n        /**\n         * Update this vector with the maximum value between this and the passed vector\n         * @name maxV\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        maxV : function (v) {\n            return this._set((this._x > v.x) ? this._x : v.x, (this._y > v.y) ? this._y : v.y);\n        },\n\n        /**\n         * Floor the vector values\n         * @name floor\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} new me.ObservableVector2d\n         */\n        floor : function () {\n            return new me.ObservableVector2d(Math.floor(this._x), Math.floor(this._y), {onUpdate: this.onUpdate});\n        },\n\n        /**\n         * Floor this vector values\n         * @name floorSelf\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        floorSelf : function () {\n            return this._set(Math.floor(this._x), Math.floor(this._y));\n        },\n\n        /**\n         * Ceil the vector values\n         * @name ceil\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} new me.ObservableVector2d\n         */\n        ceil : function () {\n            return new me.ObservableVector2d(Math.ceil(this._x), Math.ceil(this._y), {onUpdate: this.onUpdate});\n        },\n\n        /**\n         * Ceil this vector values\n         * @name ceilSelf\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        ceilSelf : function () {\n            return this._set(Math.ceil(this._x), Math.ceil(this._y));\n        },\n\n        /**\n         * Negate the vector values\n         * @name negate\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} new me.ObservableVector2d\n         */\n        negate : function () {\n            return new me.ObservableVector2d(-this._x, -this._y, {onUpdate: this.onUpdate});\n        },\n\n        /**\n         * Negate this vector values\n         * @name negateSelf\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        negateSelf : function () {\n            return this._set(-this._x, -this._y);\n        },\n\n        /**\n         * Copy the x,y values of the passed vector to this one\n         * @name copy\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        copy : function (v) {\n            return this._set(v.x, v.y);\n        },\n\n        /**\n         * return true if the two vectors are the same\n         * @name equals\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {Boolean}\n         */\n        equals : function (v) {\n            return ((this._x === v.x) && (this._y === v.y));\n        },\n\n        /**\n         * normalize this vector (scale the vector so that its magnitude is 1)\n         * @name normalize\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        normalize : function () {\n            var d = this.length();\n            if (d > 0) {\n                return this._set(this._x / d, this._y / d);\n            }\n            return this;\n        },\n\n        /**\n         * change this vector to be perpendicular to what it was before.<br>\n         * (Effectively rotates it 90 degrees in a clockwise direction)\n         * @name perp\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        perp : function () {\n            return this._set(this._y, -this._x);\n        },\n\n        /**\n         * Rotate this vector (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {number} angle The angle to rotate (in radians)\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            var x = this._x;\n            var y = this._y;\n            return this._set(x * Math.cos(angle) - y * Math.sin(angle), x * Math.sin(angle) + y * Math.cos(angle));\n        },\n\n        /**\n         * return the dot product of this vector and the passed one\n         * @name dotProduct\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {Number} The dot product.\n         */\n        dotProduct : function (v) {\n            return this._x * v.x + this._y * v.y;\n        },\n\n        /**\n         * return the distance between this vector and the passed one\n         * @name distance\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @param {me.ObservableVector2d} v\n         * @return {Number}\n         */\n        distance : function (v) {\n            return Math.sqrt((this._x - v.x) * (this._x - v.x) + (this._y - v.y) * (this._y - v.y));\n        },\n\n        /**\n         * return a clone copy of this vector\n         * @name clone\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.ObservableVector2d} new me.ObservableVector2d\n         */\n        clone : function () {\n            // shall we return a cloned me.ObservableVector2d here ?\n            return new me.ObservableVector2d(this._x, this._y, {onUpdate: this.onUpdate});\n        },\n\n        /**\n         * return a `me.Vector2d` copy of this `me.ObservableVector2d` object\n         * @name toVector2d\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {me.Vector2d} new me.Vector2d\n         */\n        toVector2d : function () {\n            return new me.Vector2d(this._x, this._y);\n        },\n\n        /**\n         * convert the object to a string representation\n         * @name toString\n         * @memberOf me.ObservableVector2d\n         * @function\n         * @return {String}\n         */\n        toString : function () {\n            return \"x:\" + this._x + \",y:\" + this._y;\n        }\n    });\n\n    /**\n     * Base class for Vector2d exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.ObservableVector2d\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.ObservableVector2d.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.ObservableVector2d.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A Vector3d object that provide notification by executing the given callback when the vector is changed.\n     * @class\n     * @extends me.Vector3d\n     * @constructor\n     * @param {Number} [x=0] x value of the vector\n     * @param {Number} [y=0] y value of the vector\n     * @param {Number} [z=0] z value of the vector\n     * @param {Object} settings additional required parameters\n     * @param {Function} settings.onUpdate the callback to be executed when the vector is changed\n     */\n    me.ObservableVector3d = me.Vector3d.extend({\n    /** @scope me.ObservableVector3d.prototype */\n\n        /** @ignore */\n        init : function (x, y, z, settings) {\n            /**\n             * x value of the vector\n             * @public\n             * @type Number\n             * @name x\n             * @memberOf me.ObservableVector3d\n             */\n            Object.defineProperty(this, \"x\", {\n                get : function () {\n                    return this._x;\n                },\n\n                set : function (value) {\n                    this.onUpdate(value, this._y, this._z, this._x, this._y, this._z);\n                    this._x = value;\n                }\n            });\n\n            /**\n             * y value of the vector\n             * @public\n             * @type Number\n             * @name y\n             * @memberOf me.ObservableVector3d\n             */\n            Object.defineProperty(this, \"y\", {\n                get : function () {\n                    return this._y;\n                },\n\n                set : function (value) {\n                    this.onUpdate(this._x, value, this._z, this._x, this._y, this._z);\n                    this._y = value;\n                }\n            });\n\n            /**\n             * z value of the vector\n             * @public\n             * @type Number\n             * @name z\n             * @memberOf me.ObservableVector3d\n             */\n            Object.defineProperty(this, \"z\", {\n                get : function () {\n                    return this._z;\n                },\n\n                set : function (value) {\n                    this.onUpdate(this._x, this._y, value, this._x, this._y, this._z);\n                    this._z = value;\n                }\n            });\n\n            if (typeof(settings) === \"undefined\") {\n                throw new me.ObservableVector3d.Error(\n                    \"undefined `onUpdate` callback\"\n                );\n            }\n            this.setCallback(settings.onUpdate);\n            this._x = x || 0;\n            this._y = y || 0;\n            this._z = z || 0;\n        },\n\n        /**\n         * @ignore */\n        _set : function (x, y, z) {\n            this.onUpdate(x, y, z, this._x, this._y, this._z);\n            this._x = x;\n            this._y = y;\n            this._z = z;\n            return this;\n        },\n        \n        /**\n         * set the vector value without triggering the callback\n         * @name setMuted\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {Number} x x value of the vector\n         * @param {Number} y y value of the vector\n         * @param {Number} z z value of the vector\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        setMuted : function (x, y, z) {\n            this._x = x;\n            this._y = y;\n            this._z = z;\n            return this;\n        },\n        \n        /**\n         * set the callback to be executed when the vector is changed\n         * @name setCallback\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {function} onUpdate callback\n         * @return {me.ObservableVector2d} Reference to this object for method chaining\n         */\n        setCallback : function (fn) {\n            if (typeof(fn) !== \"function\") {\n                throw new me.ObservableVector2d.Error(\n                    \"invalid `onUpdate` callback\"\n                );\n            }\n            this.onUpdate = fn;\n            return this;\n        },\n        \n        /**\n         * Add the passed vector to this vector\n         * @name add\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        add : function (v) {\n            return this._set(this._x + v.x, this._y + v.y, this._z + (v.z || 0));\n        },\n\n        /**\n         * Substract the passed vector to this vector\n         * @name sub\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        sub : function (v) {\n            return this._set(this._x - v.x, this._y - v.y, this._z - (v.z || 0));\n        },\n\n        /**\n         * Multiply this vector values by the given scalar\n         * @name scale\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @param {Number} [z=x]\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        scale : function (x, y, z) {\n            y = (typeof (y) !== \"undefined\" ? y : x);\n            z = (typeof (z) !== \"undefined\" ? z : x);\n            return this._set(this._x * x, this._y * y, this._z * z);\n        },\n\n        /**\n         * Multiply this vector values by the passed vector\n         * @name scaleV\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this._set(this._x * v.x, this._y * v.y, this._z * (v.z || 1));\n        },\n\n        /**\n         * Divide this vector values by the passed value\n         * @name div\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {Number} value\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        div : function (n) {\n            return this._set(this._x / n, this._y / n, this._z / n);\n        },\n\n        /**\n         * Update this vector values to absolute values\n         * @name abs\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        abs : function () {\n            return this._set(\n                (this._x < 0) ? -this._x : this._x,\n                (this._y < 0) ? -this._y : this._y,\n                (this._Z < 0) ? -this._z : this._z\n            );\n        },\n\n        /**\n         * Clamp the vector value within the specified value range\n         * @name clamp\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.ObservableVector3d} new me.ObservableVector3d\n         */\n        clamp : function (low, high) {\n            return new me.ObservableVector3d(\n                this._x.clamp(low, high),\n                this._y.clamp(low, high),\n                this._z.clamp(low, high),\n                {onUpdate: this.onUpdate}\n            );\n        },\n\n        /**\n         * Clamp this vector value within the specified value range\n         * @name clampSelf\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {Number} low\n         * @param {Number} high\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        clampSelf : function (low, high) {\n            return this._set(\n                this._x.clamp(low, high),\n                this._y.clamp(low, high),\n                this._z.clamp(low, high)\n            );\n        },\n\n        /**\n         * Update this vector with the minimum value between this and the passed vector\n         * @name minV\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        minV : function (v) {\n            var _vz = v.z || 0;\n            return this._set(\n                (this._x < v.x) ? this._x : v.x,\n                (this._y < v.y) ? this._y : v.y,\n                (this._z < _vz) ? this._z : _vz\n            );\n        },\n\n        /**\n         * Update this vector with the maximum value between this and the passed vector\n         * @name maxV\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        maxV : function (v) {\n            var _vz = v.z || 0;\n            return this._set(\n                (this._x > v.x) ? this._x : v.x,\n                (this._y > v.y) ? this._y : v.y,\n                (this._z > _vz) ? this._z : _vz\n            );\n        },\n\n        /**\n         * Floor the vector values\n         * @name floor\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} new me.ObservableVector3d\n         */\n        floor : function () {\n            return new me.ObservableVector3d(\n                Math.floor(this._x),\n                Math.floor(this._y),\n                Math.floor(this._z),\n                {onUpdate: this.onUpdate}\n            );\n        },\n\n        /**\n         * Floor this vector values\n         * @name floorSelf\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        floorSelf : function () {\n            return this._set(Math.floor(this._x), Math.floor(this._y), Math.floor(this._z));\n        },\n\n        /**\n         * Ceil the vector values\n         * @name ceil\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} new me.ObservableVector3d\n         */\n        ceil : function () {\n            return new me.ObservableVector3d(\n                Math.ceil(this._x),\n                Math.ceil(this._y),\n                Math.ceil(this._z),\n                {onUpdate: this.onUpdate}\n            );\n        },\n\n        /**\n         * Ceil this vector values\n         * @name ceilSelf\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        ceilSelf : function () {\n            return this._set(Math.ceil(this._x), Math.ceil(this._y), Math.ceil(this._z));\n        },\n\n        /**\n         * Negate the vector values\n         * @name negate\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} new me.ObservableVector3d\n         */\n        negate : function () {\n            return new me.ObservableVector3d(\n                -this._x,\n                -this._y,\n                -this._z,\n                {onUpdate: this.onUpdate}\n            );\n        },\n\n        /**\n         * Negate this vector values\n         * @name negateSelf\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        negateSelf : function () {\n            return this._set(-this._x, -this._y, -this._z);\n        },\n\n        /**\n         * Copy the x,y,z values of the passed vector to this one\n         * @name copy\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        copy : function (v) {\n            return this._set(v.x, v.y,typeof (v.z) !== \"undefined\" ? v.z : this._z);\n        },\n\n        /**\n         * return true if the two vectors are the same\n         * @name equals\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {Boolean}\n         */\n        equals : function (v) {\n            return ((this._x === v.x) && (this._y === v.y) && (this._z === (v.z || this._z)));\n        },\n\n        /**\n         * normalize this vector (scale the vector so that its magnitude is 1)\n         * @name normalize\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        normalize : function () {\n            var d = this.length();\n            if (d > 0) {\n                return this._set(this._x / d, this._y / d, this._z / d);\n            }\n            return this;\n        },\n\n        /**\n         * change this vector to be perpendicular to what it was before.<br>\n         * (Effectively rotates it 90 degrees in a clockwise direction)\n         * @name perp\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        perp : function () {\n            return this._set(this._y, -this._x, this._z);\n        },\n\n        /**\n         * Rotate this vector (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {number} angle The angle to rotate (in radians)\n         * @return {me.ObservableVector3d} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            var x = this._x;\n            var y = this._y;\n            return this._set(\n                x * Math.cos(angle) - y * Math.sin(angle),\n                x * Math.sin(angle) + y * Math.cos(angle),\n                this._z\n            );\n        },\n\n        /**\n         * return the dot product of this vector and the passed one\n         * @name dotProduct\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {Number} The dot product.\n         */\n        dotProduct : function (v) {\n            return this._x * v.x + this._y * v.y + this._z * (v.z || 1);\n        },\n\n        /**\n         * return the distance between this vector and the passed one\n         * @name distance\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @param {me.Vector2d|me.Vector3d|me.ObservableVector2d|me.ObservableVector3d} v\n         * @return {Number}\n         */\n        distance : function (v) {\n            var dx = this._x - v.x, dy = this._y - v.y, dz = this._z - (v.z || 0);\n            return Math.sqrt(dx * dx + dy * dy + dz * dz);\n        },\n\n        /**\n         * return a clone copy of this vector\n         * @name clone\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.ObservableVector3d} new me.ObservableVector3d\n         */\n        clone : function () {\n            // shall we return a cloned me.ObservableVector3d here ?\n            return new me.ObservableVector3d(\n                this._x,\n                this._y,\n                this._z,\n                {onUpdate: this.onUpdate}\n            );\n        },\n\n        /**\n         * return a `me.Vector3d` copy of this `me.ObservableVector3d` object\n         * @name toVector3d\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {me.Vector3d} new me.Vector3d\n         */\n        toVector3d : function () {\n            return new me.Vector3d(this._x, this._y, this._z);\n        },\n\n        /**\n         * convert the object to a string representation\n         * @name toString\n         * @memberOf me.ObservableVector3d\n         * @function\n         * @return {String}\n         */\n        toString : function () {\n            return \"x:\" + this._x + \",y:\" + this._y + \",z:\" + this._z;\n        }\n    });\n\n    /**\n     * Base class for Vector3d exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.ObservableVector3d\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.ObservableVector3d.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.ObservableVector3d.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a Matrix2d Object.<br>\n     * the identity matrix and parameters position : <br>\n     * <img src=\"images/identity-matrix_2x.png\"/>\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {me.Matrix2d} [mat2d] An instance of me.Matrix2d to copy from\n     * @param {Number[]} [arguments...] Matrix elements. See {@link me.Matrix2d.set}\n     */\n    me.Matrix2d = me.Object.extend(\n    /** @scope me.Matrix2d.prototype */    {\n\n        /** @ignore */\n        init : function (a, b, c, d, e, f, g, h, i) {\n            this.val = new Float32Array(9);\n            if (a instanceof me.Matrix2d) {\n                this.copy(a);\n            }\n            else if (arguments.length === 9) {\n                this.set(a, b, c, d, e, f, g, h, i);\n            }\n            else {\n                this.identity();\n            }\n        },\n\n        /**\n         * reset the transformation matrix to the identity matrix (no transformation).<br>\n         * the identity matrix and parameters position : <br>\n         * <img src=\"images/identity-matrix_2x.png\"/>\n         * @name identity\n         * @memberOf me.Matrix2d\n         * @function\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        identity : function () {\n            this.set(\n                1, 0, 0,\n                0, 1, 0,\n                0, 0, 1\n            );\n\n            return this;\n        },\n\n        /**\n         * set the matrix to the specified value\n         * @name set\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {Number} aX\n         * @param {Number} aY\n         * @param {Number} aW\n         * @param {Number} bX\n         * @param {Number} bY\n         * @param {Number} bW\n         * @param {Number} cX\n         * @param {Number} cY\n         * @param {Number} cW\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        set : function () {\n            var a = this.val;\n\n            a[0] = arguments[0];\n            a[1] = arguments[1];\n            a[2] = arguments[2];\n            a[3] = arguments[3];\n            a[4] = arguments[4];\n            a[5] = arguments[5];\n            a[6] = arguments[6];\n            a[7] = arguments[7];\n            a[8] = arguments[8];\n\n            return this;\n        },\n\n        /**\n         * Copies over the values from another me.Matrix2d.\n         * @name copy\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {me.Matrix2d} b the matrix object to copy from\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        copy : function (b) {\n            this.val.set(b.val);\n            return this;\n        },\n\n        /**\n         * multiply both matrix\n         * @name multiply\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {me.Matrix2d} b Other matrix\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        multiply : function (b) {\n            b = b.val;\n            var a = this.val,\n                a0 = a[0],\n                a1 = a[1],\n                a3 = a[3],\n                a4 = a[4],\n                b0 = b[0],\n                b1 = b[1],\n                b3 = b[3],\n                b4 = b[4],\n                b6 = b[6],\n                b7 = b[7];\n\n            a[0] = a0 * b0 + a3 * b1;\n            a[1] = a1 * b0 + a4 * b1;\n            a[3] = a0 * b3 + a3 * b4;\n            a[4] = a1 * b3 + a4 * b4;\n            a[6] += a0 * b6 + a3 * b7;\n            a[7] += a1 * b6 + a4 * b7;\n\n            return this;\n        },\n\n        /**\n         * Multiply this matrix into a vector\n         * @ignore\n         */\n        vectorMultiply : function (v) {\n            var a = this.val,\n                x = v.x,\n                y = v.y;\n\n            v.x = x * a[0] + y * a[3] + a[6];\n            v.y = x * a[1] + y * a[4] + a[7];\n\n            return v;\n        },\n\n        /**\n         * scale the matrix\n         * @name scale\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {Number} x a number representing the abscissa of the scaling vector.\n         * @param {Number} y a number representing the ordinate of the scaling vector.\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        scale : function (x, y) {\n            var a = this.val;\n\n            a[0] *= x;\n            a[1] *= x;\n            a[3] *= y;\n            a[4] *= y;\n\n            return this;\n        },\n\n        /**\n         * rotate the matrix (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {Number} angle Rotation angle in radians.\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            if (angle !== 0) {\n                var a = this.val,\n                    a0 = a[0],\n                    a1 = a[1],\n                    a3 = a[3],\n                    a4 = a[4],\n                    s = Math.sin(angle),\n                    c = Math.cos(angle);\n\n                a[0] = a0 * c + a3 * s;\n                a[1] = a1 * c + a4 * s;\n                a[3] = a0 * -s + a3 * c;\n                a[4] = a1 * -s + a4 * c;\n            }\n            return this;\n        },\n\n        /**\n         * translate the matrix\n         * @name translate\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {Number} x the x coordindates to translate the matrix by\n         * @param {Number} y the y coordindates to translate the matrix by\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        translate : function (x, y) {\n            var a = this.val;\n\n            a[6] += x * a[0] + y * a[3];\n            a[7] += x * a[1] + y * a[4];\n\n            return this;\n        },\n\n        /**\n         * translate the matrix by a vector\n         * @name translateV\n         * @memberOf me.Matrix2d\n         * @function\n         * @param {me.Vector2d} v the vector to translate the matrix by\n         * @return {me.Matrix2d} Reference to this object for method chaining\n         */\n        translateV : function (v) {\n            return this.translate(v.x, v.y);\n        },\n\n        /**\n         * returns true if the matrix is an identity matrix.\n         * @name isIdentity\n         * @memberOf me.Matrix2d\n         * @function\n         * @return {Boolean}\n         **/\n        isIdentity : function () {\n            var a = this.val;\n\n            return (\n                a[0] === 1 &&\n                a[1] === 0 &&\n                a[2] === 0 &&\n                a[3] === 0 &&\n                a[4] === 1 &&\n                a[5] === 0 &&\n                a[6] === 0 &&\n                a[7] === 0 &&\n                a[8] === 1\n            );\n        },\n\n        /**\n         * Clone the Matrix\n         * @name clone\n         * @memberOf me.Matrix2d\n         * @function\n         * @return {me.Matrix2d}\n         */\n        clone : function () {\n            return new me.Matrix2d(this);\n        },\n\n        /**\n         * convert the object to a string representation\n         * @name toString\n         * @memberOf me.Matrix2d\n         * @function\n         * @return {String}\n         */\n        toString : function () {\n            var a = this.val;\n\n            return \"me.Matrix2d(\" +\n                a[0] + \", \" + a[1] + \", \" + a[2] + \", \" +\n                a[3] + \", \" + a[4] + \", \" + a[5] + \", \" +\n                a[6] + \", \" + a[7] + \", \" + a[8] +\n            \")\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * an ellipse Object\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Number} x the center x coordinate of the ellipse\n     * @param {Number} y the center y coordinate of the ellipse\n     * @param {Number} w width (diameter) of the ellipse\n     * @param {Number} h height (diameter) of the ellipse\n     */\n    me.Ellipse = me.Object.extend(\n    {\n        /** @scope me.Ellipse.prototype */\n        /** @ignore */\n        init : function (x, y, w, h) {\n            /**\n             * the center coordinates of the ellipse\n             * @public\n             * @type {me.Vector2d}\n             * @name pos\n             * @memberOf me.Ellipse\n             */\n            this.pos = new me.Vector2d();\n\n            /**\n             * The bounding rectangle for this shape\n             * @private\n             * @type {me.Rect}\n             * @name _bounds\n             * @memberOf me.Ellipse\n             */\n            this._bounds = undefined;\n\n            /**\n             * Maximum radius of the ellipse\n             * @public\n             * @type {Number}\n             * @name radius\n             * @memberOf me.Ellipse\n             */\n            this.radius = NaN;\n\n            /**\n             * Pre-scaled radius vector for ellipse\n             * @public\n             * @type {me.Vector2d}\n             * @name radiusV\n             * @memberOf me.Ellipse\n             */\n            this.radiusV = new me.Vector2d();\n\n            /**\n             * Radius squared, for pythagorean theorom\n             * @public\n             * @type {me.Vector2d}\n             * @name radiusSq\n             * @memberOf me.Ellipse\n             */\n            this.radiusSq = new me.Vector2d();\n\n            /**\n             * x/y scaling ratio for ellipse\n             * @public\n             * @type {me.Vector2d}\n             * @name ratio\n             * @memberOf me.Ellipse\n             */\n            this.ratio = new me.Vector2d();\n\n            // the shape type\n            this.shapeType = \"Ellipse\";\n            this.setShape(x, y, w, h);\n        },\n\n        /**\n         * set new value to the Ellipse shape\n         * @name setShape\n         * @memberOf me.Ellipse\n         * @function\n         * @param {Number} x position of the ellipse\n         * @param {Number} y position of the ellipse\n         * @param {Number} w width (diameter) of the ellipse\n         * @param {Number} h height (diameter) of the ellipse\n         */\n        setShape : function (x, y, w, h) {\n            var hW = w / 2;\n            var hH = h / 2;\n            this.pos.set(x, y);\n            this.radius = Math.max(hW, hH);\n            this.ratio.set(hW / this.radius, hH / this.radius);\n            this.radiusV.set(this.radius, this.radius).scaleV(this.ratio);\n            var r = this.radius * this.radius;\n            this.radiusSq.set(r, r).scaleV(this.ratio);\n            this.updateBounds();\n            return this;\n        },\n\n        /**\n         * Rotate this Ellipse (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.Ellipse\n         * @function\n         * @param {Number} angle The angle to rotate (in radians)\n         * @return {me.Ellipse} Reference to this object for method chaining\n         */\n        rotate : function (/*angle*/) {\n            // TODO\n            return this;\n        },\n\n        /**\n         * Scale this Ellipse by the specified scalar.\n         * @name scale\n         * @memberOf me.Ellipse\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @return {me.Ellipse} Reference to this object for method chaining\n         */\n        scale : function (x, y) {\n            y = typeof (y) !== \"undefined\" ? y : x;\n            return this.setShape(\n                this.pos.x,\n                this.pos.y,\n                this.radiusV.x * 2 * x,\n                this.radiusV.y * 2 * y\n            );\n        },\n\n        /**\n         * Scale this Ellipse by the specified vector.\n         * @name scale\n         * @memberOf me.Ellipse\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Ellipse} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this.scale(v.x, v.y);\n        },\n\n        /**\n         * translate the circle/ellipse by the specified offset\n         * @name translate\n         * @memberOf me.Ellipse\n         * @function\n         * @param {Number} x x offset\n         * @param {Number} y y offset\n         * @return {me.Ellipse} this ellipse\n         */\n        translate : function (x, y) {\n            this.pos.x += x;\n            this.pos.y += y;\n            this._bounds.translate(x, y);\n            return this;\n        },\n\n        /**\n         * translate the circle/ellipse by the specified vector\n         * @name translateV\n         * @memberOf me.Ellipse\n         * @function\n         * @param {me.Vector2d} v vector offset\n         * @return {me.Rect} this ellipse\n         */\n        translateV : function (v) {\n            this.pos.add(v);\n            this._bounds.translateV(v);\n            return this;\n        },\n\n        /**\n         * check if this circle/ellipse contains the specified point\n         * @name containsPointV\n         * @memberOf me.Ellipse\n         * @function\n         * @param  {me.Vector2d} point\n         * @return {boolean} true if contains\n         */\n        containsPointV: function (v) {\n            return this.containsPoint(v.x, v.y);\n        },\n\n        /**\n         * check if this circle/ellipse contains the specified point\n         * @name containsPoint\n         * @memberOf me.Ellipse\n         * @function\n         * @param  {Number} x x coordinate\n         * @param  {Number} y y coordinate\n         * @return {boolean} true if contains\n         */\n        containsPoint: function (x, y) {\n            // Make position relative to object center point.\n            x -= this.pos.x;\n            y -= this.pos.y;\n            // Pythagorean theorem.\n            return (\n                ((x * x) / this.radiusSq.x) +\n                ((y * y) / this.radiusSq.y)\n            ) <= 1.0;\n        },\n\n        /**\n         * returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.\n         * @name getBounds\n         * @memberOf me.Ellipse\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        getBounds : function () {\n            return this._bounds;\n        },\n\n        /**\n         * update the bounding box for this shape.\n         * @name updateBounds\n         * @memberOf me.Ellipse\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        updateBounds : function () {\n            var rx = this.radiusV.x,\n                ry = this.radiusV.y,\n                x = this.pos.x - rx,\n                y = this.pos.y - ry,\n                w = rx * 2,\n                h = ry * 2;\n\n            if (!this._bounds) {\n                this._bounds = new me.Rect(x, y, w, h);\n            }  else {\n                this._bounds.setShape(x, y, w, h);\n            }\n            return this._bounds;\n        },\n\n        /**\n         * clone this Ellipse\n         * @name clone\n         * @memberOf me.Ellipse\n         * @function\n         * @return {me.Ellipse} new Ellipse\n         */\n        clone : function () {\n            return new me.Ellipse(\n                this.pos.x,\n                this.pos.y,\n                this.radiusV.x * 2,\n                this.radiusV.y * 2\n            );\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a polygon Object.<br>\n     * Please do note that melonJS implements a simple Axis-Aligned Boxes collision algorithm, which requires all polygons used for collision to be convex with all vertices defined with clockwise winding.\n     * A polygon is convex when all line segments connecting two points in the interior do not cross any edge of the polygon\n     * (which means that all angles are less than 180 degrees), as described here below : <br>\n     * <center><img src=\"images/convex_polygon.png\"/></center><br>\n     * A polygon's `winding` is clockwise iff its vertices (points) are declared turning to the right. The image above shows COUNTERCLOCKWISE winding.\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Number} x origin point of the Polygon\n     * @param {Number} y origin point of the Polygon\n     * @param {me.Vector2d[]} points array of vector defining the Polygon\n     */\n    me.Polygon = me.Object.extend(\n    /** @scope me.Polygon.prototype */ {\n\n        /** @ignore */\n        init : function (x, y, points) {\n            /**\n             * origin point of the Polygon\n             * @public\n             * @type {me.Vector2d}\n             * @name pos\n             * @memberOf me.Polygon\n             */\n            this.pos = new me.Vector2d();\n\n            /**\n             * The bounding rectangle for this shape\n             * @private\n             * @type {me.Rect}\n             * @name _bounds\n             * @memberOf me.Polygon\n             */\n            this._bounds = undefined;\n\n            /**\n             * Array of points defining the Polygon <br>\n             * Note: If you manually change `points`, you **must** call `recalc`afterwards so that the changes get applied correctly.\n             * @public\n             * @type {me.Vector2d[]}\n             * @name points\n             * @memberOf me.Polygon\n             */\n            this.points = null;\n\n            // the shape type\n            this.shapeType = \"Polygon\";\n            this.setShape(x, y, points);\n        },\n\n        /**\n         * set new value to the Polygon\n         * @name setShape\n         * @memberOf me.Polygon\n         * @function\n         * @param {Number} x position of the Polygon\n         * @param {Number} y position of the Polygon\n         * @param {me.Vector2d[]} points array of vector defining the Polygon\n         */\n        setShape : function (x, y, points) {\n            this.pos.set(x, y);\n            this.points = points;\n            this.recalc();\n            this.updateBounds();\n            return this;\n        },\n\n        /**\n         * Rotate this Polygon (counter-clockwise) by the specified angle (in radians).\n         * @name rotate\n         * @memberOf me.Polygon\n         * @function\n         * @param {Number} angle The angle to rotate (in radians)\n         * @return {me.Polygon} Reference to this object for method chaining\n         */\n        rotate : function (angle) {\n            if (angle !== 0) {\n                var points = this.points;\n                var len = points.length;\n                for (var i = 0; i < len; i++) {\n                    points[i].rotate(angle);\n                }\n                this.recalc();\n                this.updateBounds();\n            }\n            return this;\n        },\n\n        /**\n         * Scale this Polygon by the given scalar.\n         * @name scale\n         * @memberOf me.Polygon\n         * @function\n         * @param {Number} x\n         * @param {Number} [y=x]\n         * @return {me.Polygon} Reference to this object for method chaining\n         */\n        scale : function (x, y) {\n            y = typeof (y) !== \"undefined\" ? y : x;\n\n            var points = this.points;\n            var len = points.length;\n            for (var i = 0; i < len; i++) {\n                points[i].scale(x, y);\n            }\n            this.recalc();\n            this.updateBounds();\n            return this;\n        },\n\n        /**\n         * Scale this Polygon by the given vector\n         * @name scaleV\n         * @memberOf me.Polygon\n         * @function\n         * @param {me.Vector2d} v\n         * @return {me.Polygon} Reference to this object for method chaining\n         */\n        scaleV : function (v) {\n            return this.scale(v.x, v.y);\n        },\n\n        /**\n         * Computes the calculated collision polygon.\n         * This **must** be called if the `points` array, `angle`, or `offset` is modified manually.\n         * @name recalc\n         * @memberOf me.Polygon\n         * @function\n         */\n        recalc : function () {\n            var i;\n            // The edges here are the direction of the `n`th edge of the polygon, relative to\n            // the `n`th point. If you want to draw a given edge from the edge value, you must\n            // first translate to the position of the starting point.\n            var edges = this.edges = [];\n            // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n            // to the position of the `n`th point. If you want to draw an edge normal, you must first\n            // translate to the position of the starting point.\n            var normals = this.normals = [];\n            // Copy the original points array and apply the offset/angle\n            var points = this.points;\n            var len = points.length;\n\n            if (len < 3) {\n                throw new me.Polygon.Error(\"Requires at least 3 points\");\n            }\n\n            // Calculate the edges/normals\n            for (i = 0; i < len; i++) {\n                var e = new me.Vector2d().copy(points[(i + 1) % len]).sub(points[i]);\n                edges.push(e);\n                normals.push(new me.Vector2d().copy(e).perp().normalize());\n            }\n            return this;\n        },\n\n        /**\n         * translate the Polygon by the specified offset\n         * @name translate\n         * @memberOf me.Polygon\n         * @function\n         * @param {Number} x x offset\n         * @param {Number} y y offset\n         * @return {me.Polygon} this Polygon\n         */\n        translate : function (x, y) {\n            this.pos.x += x;\n            this.pos.y += y;\n            this._bounds.translate(x, y);\n            return this;\n        },\n\n        /**\n         * translate the Polygon by the specified vector\n         * @name translateV\n         * @memberOf me.Polygon\n         * @function\n         * @param {me.Vector2d} v vector offset\n         * @return {me.Polygon} this Polygon\n         */\n        translateV : function (v) {\n            this.pos.add(v);\n            this._bounds.translateV(v);\n            return this;\n        },\n\n        /**\n         * check if this Polygon contains the specified point\n         * @name containsPointV\n         * @memberOf me.Polygon\n         * @function\n         * @param  {me.Vector2d} point\n         * @return {boolean} true if contains\n         */\n        containsPointV: function (v) {\n            return this.containsPoint(v.x, v.y);\n        },\n\n        /**\n         * check if this Polygon contains the specified point <br>\n         * (Note: it is highly recommended to first do a hit test on the corresponding <br>\n         *  bounding rect, as the function can be highly consuming with complex shapes)\n         * @name containsPoint\n         * @memberOf me.Polygon\n         * @function\n         * @param  {Number} x x coordinate\n         * @param  {Number} y y coordinate\n         * @return {boolean} true if contains\n         */\n        containsPoint: function (x, y) {\n            var intersects = false;\n            var posx = this.pos.x, posy = this.pos.y;\n            var points = this.points;\n            var len = points.length;\n\n            //http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n            for (var i = 0, j = len - 1; i < len; j = i++) {\n                var iy = points[i].y + posy, ix = points[i].x + posx,\n                    jy = points[j].y + posy, jx = points[j].x + posx;\n                if (((iy > y) !== (jy > y)) && (x < (jx - ix) * (y - iy) / (jy - iy) + ix)) {\n                    intersects = !intersects;\n                }\n            }\n            return intersects;\n        },\n\n        /**\n         * returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.\n         * @name getBounds\n         * @memberOf me.Polygon\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        getBounds : function () {\n            return this._bounds;\n        },\n\n        /**\n         * update the bounding box for this shape.\n         * @name updateBounds\n         * @memberOf me.Polygon\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        updateBounds : function () {\n            var x = Infinity, y = Infinity, right = -Infinity, bottom = -Infinity;\n            this.points.forEach(function (point) {\n                x = Math.min(x, point.x);\n                y = Math.min(y, point.y);\n                right = Math.max(right, point.x);\n                bottom = Math.max(bottom, point.y);\n            });\n\n            if (!this._bounds) {\n                this._bounds = new me.Rect(x, y, right - x, bottom - y);\n            } else {\n                this._bounds.setShape(x, y, right - x, bottom - y);\n            }\n\n            return this._bounds.translateV(this.pos);\n        },\n\n        /**\n         * clone this Polygon\n         * @name clone\n         * @memberOf me.Polygon\n         * @function\n         * @return {me.Polygon} new Polygon\n         */\n        clone : function () {\n            var copy = [];\n            this.points.forEach(function (point) {\n                copy.push(new me.Vector2d(point.x, point.y));\n            });\n            return new me.Polygon(this.pos.x, this.pos.y, copy);\n        }\n    });\n\n    /**\n     * Base class for Polygon exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Polygon\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Polygon.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Polygon.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a rectangle Object\n     * @class\n     * @extends me.Polygon\n     * @memberOf me\n     * @constructor\n     * @param {Number} x position of the Rectangle\n     * @param {Number} y position of the Rectangle\n     * @param {Number} w width of the rectangle\n     * @param {Number} h height of the rectangle\n     */\n    me.Rect = me.Polygon.extend(\n    /** @scope me.Rect.prototype */ {\n\n        /** @ignore */\n        init : function (x, y, w, h) {\n\n            this.pos = new me.Vector2d();\n\n            // pre-allocate the vector array\n            this.points = [\n                new me.Vector2d(), new me.Vector2d(),\n                new me.Vector2d(), new me.Vector2d()\n            ];\n            \n            this.shapeType = \"Polygon\";\n            this.setShape(x, y, w, h);\n        },\n\n        /**\n         * set new value to the rectangle shape\n         * @name setShape\n         * @memberOf me.Rect\n         * @function\n         * @param {Number} x position of the Rectangle\n         * @param {Number} y position of the Rectangle\n         * @param {Number} w width of the rectangle\n         * @param {Number} h height of the rectangle\n         * @return {me.Rect} this rectangle\n         */\n        setShape : function (x, y, w, h) {\n\n            this.points[0].set(0, 0); // 0, 0 \n            this.points[1].set(w, 0); // 1, 0\n            this.points[2].set(w, h); // 1, 1\n            this.points[3].set(0, h); // 0, 1\n\n            me.Polygon.prototype.setShape.apply(this, [x, y, this.points]);\n\n            // private properties to cache w & h\n            this._width = w;\n            this._height = h;\n\n            return this;\n        },\n\n        /**\n         * resize the rectangle\n         * @name resize\n         * @memberOf me.Rect\n         * @function\n         * @param {Number} w new width of the rectangle\n         * @param {Number} h new height of the rectangle\n         * @return {me.Rect} this rectangle\n         */\n        resize : function (w, h) {\n            this.width = w;\n            this.height = h;\n            return this;\n        },\n\n        /**\n         * returns the bounding box for this shape, the smallest rectangle object completely containing this shape.\n         * @name getBounds\n         * @memberOf me.Rect\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        getBounds : function () {\n            return this;\n        },\n\n        /**\n         * update the bounding box for this shape.\n         * @name updateBounds\n         * @memberOf me.Rect\n         * @function\n         * @return {me.Rect} this shape bounding box Rectangle object\n         */\n        updateBounds : function () {\n            return this;\n        },\n\n        /**\n         * clone this rectangle\n         * @name clone\n         * @memberOf me.Rect\n         * @function\n         * @return {me.Rect} new rectangle\n         */\n        clone : function () {\n            return new me.Rect(this.pos.x, this.pos.y, this._width, this._height);\n        },\n\n        /**\n         * copy the position and size of the given rectangle into this one\n         * @name copy\n         * @memberOf me.Rect\n         * @function\n         * @param {me.Rect} rect Source rectangle\n         * @return {me.Rect} new rectangle\n         */\n        copy : function (rect) {\n            return this.setShape(rect.pos.x, rect.pos.y, rect._width, rect._height);\n        },\n\n        /**\n         * translate the rect by the specified offset\n         * @name translate\n         * @memberOf me.Rect\n         * @function\n         * @param {Number} x x offset\n         * @param {Number} y y offset\n         * @return {me.Rect} this rectangle\n         */\n        translate : function (x, y) {\n            this.pos.x += x;\n            this.pos.y += y;\n            return this;\n        },\n\n        /**\n         * translate the rect by the specified vector\n         * @name translateV\n         * @memberOf me.Rect\n         * @function\n         * @param {me.Vector2d} v vector offset\n         * @return {me.Rect} this rectangle\n         */\n        translateV : function (v) {\n            return this.translate(v.x, v.y);\n        },\n\n        /**\n         * merge this rectangle with another one\n         * @name union\n         * @memberOf me.Rect\n         * @function\n         * @param {me.Rect} rect other rectangle to union with\n         * @return {me.Rect} the union(ed) rectangle\n         */\n        union : function (/** {me.Rect} */ r) {\n            var x1 = Math.min(this.left, r.left);\n            var y1 = Math.min(this.top, r.top);\n\n            this.resize(\n                Math.max(this.right, r.right) - x1,\n                Math.max(this.bottom, r.bottom) - y1\n            );\n\n            this.pos.set(x1, y1);\n\n            return this;\n        },\n\n        /**\n         * check if this rectangle is intersecting with the specified one\n         * @name overlaps\n         * @memberOf me.Rect\n         * @function\n         * @param  {me.Rect} rect\n         * @return {boolean} true if overlaps\n         */\n        overlaps : function (r)    {\n            return (\n                this.left < r.right &&\n                r.left < this.right &&\n                this.top < r.bottom &&\n                r.top < this.bottom\n            );\n        },\n\n        /**\n         * check if this rectangle contains the specified one\n         * @name contains\n         * @memberOf me.Rect\n         * @function\n         * @param  {me.Rect} rect\n         * @return {boolean} true if contains\n         */\n        contains: function (r) {\n            return (\n                r.left >= this.left &&\n                r.right <= this.right &&\n                r.top >= this.top &&\n                r.bottom <= this.bottom\n            );\n        },\n\n        /**\n         * check if this rectangle contains the specified point\n         * @name containsPoint\n         * @memberOf me.Rect\n         * @function\n         * @param  {Number} x x coordinate\n         * @param  {Number} y y coordinate\n         * @return {boolean} true if contains\n         */\n        containsPoint: function (x, y) {\n            return (\n                x >= this.left &&\n                x <= this.right &&\n                y >= this.top &&\n                y <= this.bottom\n            );\n        },\n\n        /**\n         * Returns a polygon whose edges are the same as this box.\n         * @name toPolygon\n         * @memberOf me.Rect\n         * @function\n         * @return {me.Polygon} a new Polygon that represents this rectangle.\n         */\n        toPolygon: function () {\n            return new me.Polygon(\n                this.pos.x, this.pos.y, this.points\n            );\n        }\n    });\n\n    // redefine some properties to ease our life when getting the rectangle coordinates\n    \n    /**\n     * left coordinate of the Rectangle\n     * @public\n     * @type {Number}\n     * @name left\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"left\", {\n        get : function () {\n            return this.pos.x;\n        },\n        configurable : true\n    });\n\n    /**\n     * right coordinate of the Rectangle\n     * @public\n     * @type {Number}\n     * @name right\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"right\", {\n        get : function () {\n            var w = this._width;\n            return (this.pos.x + w) || w;\n        },\n        configurable : true\n    });\n\n    /**\n     * top coordinate of the Rectangle\n     * @public\n     * @type {Number}\n     * @name top\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"top\", {\n        get : function () {\n            return this.pos.y;\n        },\n        configurable : true\n    });\n\n    /**\n     * bottom coordinate of the Rectangle\n     * @public\n     * @type {Number}\n     * @name bottom\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"bottom\", {\n        get : function () {\n            var h = this._height;\n            return (this.pos.y + h) || h;\n        },\n        configurable : true\n    });\n    \n    /**\n     * width of the Rectangle\n     * @public\n     * @type {Number}\n     * @name width\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"width\", {\n        get : function () {\n            return this._width;\n        },\n        set : function (value) {\n            this._width = value;\n            this.points[1].x = this.points[2].x = value;\n            this.recalc();\n        },\n        configurable : true\n    });\n\n    /**\n     * height of the Rectangle\n     * @public\n     * @type {Number}\n     * @name height\n     * @memberOf me.Rect\n     */\n    Object.defineProperty(me.Rect.prototype, \"height\", {\n        get : function () {\n            return this._height;\n        },\n        set : function (value) {\n            this._height = value;\n            this.points[2].y = this.points[3].y = value;\n            this.recalc();\n        },\n        configurable : true\n    });\n    \n})();\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a line segment Object.<br>\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Number} x origin point of the Line\n     * @param {Number} y origin point of the Line\n     * @param {me.Vector2d[]} points array of vectors defining the Line\n     */\n    me.Line = me.Polygon.extend(\n    /** @scope me.Line.prototype */ {\n\n        /**\n         * check if this line segment contains the specified point\n         * @name containsPointV\n         * @memberOf me.Line\n         * @function\n         * @param  {me.Vector2d} point\n         * @return {boolean} true if contains\n         */\n        containsPointV: function (v) {\n            return this.containsPoint(v.x, v.y);\n        },\n\n        /**\n         * check if this line segment contains the specified point\n         * @name containsPoint\n         * @memberOf me.Line\n         * @function\n         * @param  {Number} x x coordinate\n         * @param  {Number} y y coordinate\n         * @return {boolean} true if contains\n         */\n        containsPoint: function (x, y) {\n            // translate the given coordinates,\n            // rather than creating temp translated vectors\n            x -= this.pos.x; // Cx\n            y -= this.pos.y; // Cy\n            var start = this.points[0]; // Ax/Ay\n            var end = this.points[1]; // Bx/By\n\n            //(Cy - Ay) * (Bx - Ax) = (By - Ay) * (Cx - Ax)\n            return (y - start.y) * (end.x - start.x) === (end.y - start.y) * (x - start.x);\n        },\n\n        /**\n         * Computes the calculated collision edges and normals.\n         * This **must** be called if the `points` array, `angle`, or `offset` is modified manually.\n         * @name recalc\n         * @memberOf me.Line\n         * @function\n         */\n        recalc : function () {\n            // The edges here are the direction of the `n`th edge of the polygon, relative to\n            // the `n`th point. If you want to draw a given edge from the edge value, you must\n            // first translate to the position of the starting point.\n            var edges = this.edges = [];\n            // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n            // to the position of the `n`th point. If you want to draw an edge normal, you must first\n            // translate to the position of the starting point.\n            var normals = this.normals = [];\n            // Copy the original points array and apply the offset/angle\n            var points = this.points;\n\n            if (points.length !== 2) {\n                throw new me.Line.Error(\"Requires exactly 2 points\");\n            }\n\n            // Calculate the edges/normals\n            var e = new me.Vector2d().copy(points[1]).sub(points[0]);\n            edges.push(e);\n            normals.push(new me.Vector2d().copy(e).perp().normalize());\n\n            return this;\n        },\n        \n        /**\n         * clone this line segment\n         * @name clone\n         * @memberOf me.Line\n         * @function\n         * @return {me.Line} new Line\n         */\n        clone : function () {\n            var copy = [];\n            this.points.forEach(function (point) {\n                copy.push(new me.Vector2d(point.x, point.y));\n            });\n            return new me.Line(this.pos.x, this.pos.y, copy);\n        }\n    });\n\n    /**\n     * Base class for Line exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Line\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Line.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Line.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n(function () {\n\n    /**\n     * a Generic Body Object <br>\n     * @class\n     * @extends me.Rect\n     * @memberOf me\n     * @constructor\n     * @param {me.Entity} entity the parent entity\n     * @param {me.Rect[]|me.Polygon[]|me.Line[]|me.Ellipse[]} [shapes] the initial list of shapes\n     */\n    me.Body = me.Rect.extend(\n    /** @scope me.Body.prototype */\n    {\n        /** @ignore */\n        init : function (entity, shapes) {\n\n            /**\n             * reference to the parent entity\n             * @ignore\n             */\n            this.entity = entity;\n\n            /**\n             * The collision shapes of the entity <br>\n             * @ignore\n             * @type {me.Polygon[]|me.Line[]|me.Ellipse[]}\n             * @name shapes\n             * @memberOf me.Body\n             */\n            this.shapes = [];\n\n            /**\n             * The body collision mask, that defines what should collide with what.<br>\n             * (by default will collide with all entities)\n             * @ignore\n             * @type Number\n             * @default me.collision.types.ALL_OBJECT\n             * @name collisionMask\n             * @see me.collision.types\n             * @memberOf me.Body\n             */\n            this.collisionMask = me.collision.types.ALL_OBJECT;\n\n            /**\n             * define the collision type of the body for collision filtering\n             * @public\n             * @type Number\n             * @default me.collision.types.ENEMY_OBJECT\n             * @name collisionType\n             * @see me.collision.types\n             * @memberOf me.Body\n             * @example\n             * // set the entity body collision type\n             * myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n             */\n            this.collisionType = me.collision.types.ENEMY_OBJECT;\n\n            /**\n             * entity current velocity<br>\n             * @public\n             * @type me.Vector2d\n             * @default <0,0>\n             * @name vel\n             * @memberOf me.Body\n             */\n            if (typeof(this.vel) === \"undefined\") {\n                this.vel = new me.Vector2d();\n            }\n            this.vel.set(0, 0);\n\n            /**\n             * entity current acceleration<br>\n             * @public\n             * @type me.Vector2d\n             * @default <0,0>\n             * @name accel\n             * @memberOf me.Body\n             */\n            if (typeof(this.accel) === \"undefined\") {\n                this.accel = new me.Vector2d();\n            }\n            this.accel.set(0, 0);\n\n            /**\n             * entity current friction<br>\n             * @public\n             * @type me.Vector2d\n             * @default <0,0>\n             * @name friction\n             * @memberOf me.Body\n             */\n            if (typeof(this.friction) === \"undefined\") {\n                this.friction = new me.Vector2d();\n            }\n            this.friction.set(0, 0);\n\n            /**\n             * max velocity (to limit entity velocity)<br>\n             * @public\n             * @type me.Vector2d\n             * @default <1000,1000>\n             * @name maxVel\n             * @memberOf me.Body\n             */\n            if (typeof(this.maxVel) === \"undefined\") {\n                this.maxVel = new me.Vector2d();\n            }\n            this.maxVel.set(1000, 1000);\n\n            /**\n             * Default gravity value of the entity<br>\n             * to be set to 0 for RPG, shooter, etc...<br>\n             * Note: Gravity can also globally be defined through me.sys.gravity\n             * @public\n             * @see me.sys.gravity\n             * @type Number\n             * @default 0.98\n             * @name gravity\n             * @memberOf me.Body\n             */\n            this.gravity = typeof(me.sys.gravity) !== \"undefined\" ? me.sys.gravity : 0.98;\n\n            /**\n             * falling state of the object<br>\n             * true if the object is falling<br>\n             * false if the object is standing on something<br>\n             * @readonly\n             * @public\n             * @type Boolean\n             * @default false\n             * @name falling\n             * @memberOf me.Body\n             */\n            this.falling = false;\n\n            /**\n             * jumping state of the object<br>\n             * equal true if the entity is jumping<br>\n             * @readonly\n             * @public\n             * @type Boolean\n             * @default false\n             * @name jumping\n             * @memberOf me.Body\n             */\n            this.jumping = false;\n\n            // call the super constructor\n            me.Rect.prototype.init.apply(this, [\n                    0,\n                    0,\n                    entity.width,\n                    entity.height\n                ]\n            );\n\n            // parses the given shapes array and add them\n            for (var s = 0; s < shapes.length; s++) {\n                this.addShape(shapes[s].clone(), true);\n            }\n        },\n\n        /**\n         * add a collision shape to this entity <br>\n         * (note: me.Rect objects will be converted to me.Polygon before being added)\n         * @name addShape\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @param {me.Rect|me.Polygon|me.Line|me.Ellipse} shape a shape object\n         * @return {Number} the shape array length\n         */\n        addShape : function (shape, batchInsert) {\n            if (shape instanceof me.Rect) {\n                this.shapes.push(shape.toPolygon());\n            } else {\n                // else polygon or circle\n                this.shapes.push(shape);\n            }\n\n            if (batchInsert !== true) {\n                // update the body bounds to take in account the added shape\n                this.updateBounds();\n            }\n\n            // return the length of the shape list\n            return this.shapes.length;\n        },\n\n        /**\n         * add collision shapes based on the given PhysicsEditor JSON object\n         * @name addShapesFromJSON\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @param {Object} json a JSON object as exported from the PhysicsEditor tool\n         * @param {String} id the shape identifier within the given the json object\n         * @param {String} [scale=1] the desired scale of the body (physic-body-editor only)\n         * @see https://www.codeandweb.com/physicseditor\n         * @return {Number} the shape array length\n         */\n        addShapesFromJSON : function (json, id, scale) {\n            var data;\n            scale = scale || 1;\n\n            // identify the json format\n            if (typeof(json.rigidBodies) === \"undefined\") {\n                // Physic Editor Format (https://www.codeandweb.com/physicseditor)\n                data = json[id];\n\n                if (typeof(data) === \"undefined\") {\n                    throw new me.Body.Error(\"Identifier (\" + id + \") undefined for the given PhysicsEditor JSON object)\");\n                }\n\n                // go through all shapes and add them to the body\n                for (var i = 0; i < data.length; i++) {\n                    var points = [];\n                    for (var s = 0; s < data[i].shape.length; s += 2) {\n                        points.push(new me.Vector2d(data[i].shape[s], data[i].shape[s + 1]));\n                    }\n                    this.addShape(new me.Polygon(0, 0, points), true);\n                }\n            } else {\n                // Physic Body Editor Format (http://www.aurelienribon.com/blog/projects/physics-body-editor/)\n                json.rigidBodies.forEach(function (shape) {\n                    if (shape.name === id) {\n                        data = shape;\n                        // how to stop a forEach loop?\n                    }\n                });\n\n                if (typeof(data) === \"undefined\") {\n                    throw new me.Body.Error(\"Identifier (\" + id + \") undefined for the given PhysicsEditor JSON object)\");\n                }\n\n                // shapes origin point\n                // top-left origin in the editor is (0,1)\n                this.pos.set(data.origin.x, 1.0 - data.origin.y).scale(scale);\n\n                var self = this;\n                // parse all polygons\n                data.polygons.forEach(function (poly) {\n                    var points = [];\n                    poly.forEach(function (point) {\n                        // top-left origin in the editor is (0,1)\n                        points.push(new me.Vector2d(point.x, 1.0 - point.y).scale(scale));\n                    });\n                    self.addShape(new me.Polygon(0, 0, points), true);\n                });\n                // parse all circles\n                data.circles.forEach(function (circle) {\n                    self.addShape(new me.Ellipse(\n                        circle.cx * scale,\n                        (1.0 - circle.cy) * scale,\n                        circle.r * 2 * scale,\n                        circle.r * 2 * scale\n                    ), true);\n                });\n            }\n\n            // update the body bounds to take in account the added shapes\n            this.updateBounds();\n\n            // return the length of the shape list\n            return this.shapes.length;\n        },\n\n        /**\n         * return the collision shape at the given index\n         * @name getShape\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @param {Number} [index=0] the shape object at the specified index\n         * @return {me.Polygon|me.Line|me.Ellipse} shape a shape object\n         */\n        getShape : function (index) {\n            return this.shapes[index || 0];\n        },\n\n        /**\n         * remove the specified shape from the body shape list\n         * @name removeShape\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @param {me.Polygon|me.Line|me.Ellipse} shape a shape object\n         * @return {Number} the shape array length\n         */\n        removeShape : function (shape) {\n            this.shapes.remove(shape);\n\n            // update the body bounds to take in account the removed shape\n            this.updateBounds();\n\n            // return the length of the shape list\n            return this.shapes.length;\n        },\n\n        /**\n         * remove the shape at the given index from the body shape list\n         * @name removeShapeAt\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @param {Number} index the shape object at the specified index\n         * @return {Number} the shape array length\n         */\n        removeShapeAt : function (index) {\n            return this.removeShape(this.getShape(index));\n        },\n\n        /**\n         * By default all entities are able to collide with all other entities, <br>\n         * but it's also possible to specificy 'collision filters' to provide a finer <br>\n         * control over which entities can collide with each other.\n         * @name setCollisionMask\n         * @memberOf me.Body\n         * @public\n         * @function\n         * @see me.collision.types\n         * @param {Number} bitmask the collision mask\n         * @example\n         * // filter collision detection with collision shapes, enemies and collectables\n         * myEntity.body.setCollisionMask(me.collision.types.WORLD_SHAPE | me.collision.types.ENEMY_OBJECT | me.collision.types.COLLECTABLE_OBJECT);\n         * ...\n         * // disable collision detection with all other objects\n         * myEntity.body.setCollisionMask(me.collision.types.NO_OBJECT);\n         */\n        setCollisionMask : function (bitmask) {\n            this.collisionMask = bitmask;\n        },\n\n        /**\n         * the built-in function to solve the collision response\n         * @protected\n         * @name respondToCollision\n         * @memberOf me.Body\n         * @function\n         * @param {me.collision.ResponseObject} response the collision response object\n         */\n        respondToCollision: function (response) {\n            // the overlap vector\n            var overlap = response.overlapV;\n\n            // FIXME: Respond proportionally to object mass\n\n            // Move out of the other object shape\n            this.entity.pos.sub(overlap);\n\n            // adjust velocity\n            if (overlap.x !== 0) {\n                this.vel.x = ~~(0.5 + this.vel.x - overlap.x) || 0;\n            }\n            if (overlap.y !== 0) {\n                this.vel.y = ~~(0.5 + this.vel.y - overlap.y) || 0;\n\n                // cancel the falling an jumping flags if necessary\n                this.falling = overlap.y >= 1;\n                this.jumping = overlap.y <= -1;\n            }\n        },\n\n        /**\n         * update the body bounding rect (private)\n         * the body rect size is here used to cache the total bounding rect\n         * @private\n         * @name updateBounds\n         * @memberOf me.Body\n         * @function\n         */\n        updateBounds : function () {\n            if (this.shapes.length > 0) {\n                // reset the rect with default values\n                var _bounds = this.shapes[0].getBounds();\n                this.pos.setV(_bounds.pos);\n                this.resize(_bounds.width, _bounds.height);\n\n                for (var i = 1 ; i < this.shapes.length; i++) {\n                    this.union(this.shapes[i].getBounds());\n                }\n            }\n\n            // update the parent entity bounds\n            this.entity.onBodyUpdate(this.pos, this.width, this.height);\n\n            return this;\n        },\n\n        /**\n         * set the entity default velocity<br>\n         * note : velocity is by default limited to the same value, see\n         * setMaxVelocity if needed<br>\n         * @name setVelocity\n         * @memberOf me.Body\n         * @function\n         * @param {Number} x velocity on x axis\n         * @param {Number} y velocity on y axis\n         * @protected\n         */\n        setVelocity : function (x, y) {\n            this.accel.x = x !== 0 ? x : this.accel.x;\n            this.accel.y = y !== 0 ? y : this.accel.y;\n\n            // limit by default to the same max value\n            this.setMaxVelocity(x, y);\n        },\n\n        /**\n         * cap the entity velocity to the specified value<br>\n         * @name setMaxVelocity\n         * @memberOf me.Body\n         * @function\n         * @param {Number} x max velocity on x axis\n         * @param {Number} y max velocity on y axis\n         * @protected\n         */\n        setMaxVelocity : function (x, y) {\n            this.maxVel.x = x;\n            this.maxVel.y = y;\n        },\n\n        /**\n         * set the entity default friction<br>\n         * @name setFriction\n         * @memberOf me.Body\n         * @function\n         * @param {Number} x horizontal friction\n         * @param {Number} y vertical friction\n         * @protected\n         */\n        setFriction : function (x, y) {\n            this.friction.x = x || 0;\n            this.friction.y = y || 0;\n        },\n\n        /**\n         * apply friction to a vector\n         * @ignore\n         */\n        applyFriction : function (vel) {\n            var fx = this.friction.x * me.timer.tick,\n                nx = vel.x + fx,\n                x = vel.x - fx,\n                fy = this.friction.y * me.timer.tick,\n                ny = vel.y + fy,\n                y = vel.y - fy;\n\n            vel.x = (\n                (nx < 0) ? nx :\n                ( x > 0) ? x  : 0\n            );\n            vel.y = (\n                (ny < 0) ? ny :\n                ( y > 0) ? y  : 0\n            );\n        },\n\n        /**\n         * compute the new velocity value\n         * @ignore\n         */\n        computeVelocity : function (vel) {\n\n            // apply gravity (if any)\n            if (this.gravity) {\n                // apply a constant gravity (if not on a ladder)\n                vel.y += this.gravity * me.timer.tick;\n\n                // check if falling / jumping\n                this.falling = (vel.y > 0);\n                this.jumping = (this.falling ? false : this.jumping);\n            }\n\n            // apply friction\n            if (this.friction.x || this.friction.y) {\n                this.applyFriction(vel);\n            }\n\n            // cap velocity\n            if (vel.y !== 0) {\n                vel.y = vel.y.clamp(-this.maxVel.y, this.maxVel.y);\n            }\n            if (vel.x !== 0) {\n                vel.x = vel.x.clamp(-this.maxVel.x, this.maxVel.x);\n            }\n        },\n\n        /**\n         * update the body position\n         * @name update\n         * @memberOf me.Body\n         * @function\n         * @return {boolean} true if resulting velocity is different than 0\n         */\n        update : function (/* dt */) {\n            // update the velocity\n            this.computeVelocity(this.vel);\n\n            // update player entity position\n            this.entity.pos.add(this.vel);\n\n            // returns true if vel is different from 0\n            return (this.vel.x !== 0 || this.vel.y !== 0);\n        },\n\n        /**\n         * Destroy function<br>\n         * @ignore\n         */\n        destroy : function () {\n            this.entity = null;\n            this.shapes = [];\n        }\n    });\n\n    /**\n     * Base class for Body exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Body\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Body.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Body.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * A QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.\n * Based on the QuadTree Library by Timo Hausmann and released under the MIT license\n * https://github.com/timohausmann/quadtree-js/\n**/\n\n(function () {\n\n\n    /**\n     * a pool of `QuadTree` objects\n     */\n    var QT_ARRAY = [];\n\n    /**\n     * will pop a quadtree object from the array\n     * or create a new one if the array is empty\n     */\n    var QT_ARRAY_POP = function (bounds, max_objects, max_levels, level) {\n        if (QT_ARRAY.length > 0) {\n            var _qt =  QT_ARRAY.pop();\n            _qt.bounds = bounds;\n            _qt.max_objects = max_objects || 4;\n            _qt.max_levels  = max_levels || 4;\n            _qt.level = level || 0;\n            return _qt;\n        } else {\n            return new me.QuadTree(bounds, max_objects, max_levels, level);\n        }\n    };\n\n    /**\n     * Push back a quadtree back into the array\n     */\n    var QT_ARRAY_PUSH = function (qt) {\n        QT_ARRAY.push(qt);\n    };\n\n\n    /**\n     * Quadtree Constructor <br>\n     * note: the global quadtree instance is available through `me.collision.quadTree`\n     * @class\n     * @name QuadTree\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @see me.collision.quadTree\n     * @param {me.Rect} bounds bounds of the node\n     * @param {Number} [max_objects=4] max objects a node can hold before splitting into 4 subnodes\n     * @param {Number} [max_levels=4] total max levels inside root Quadtree\n     * @param {Number} [level] deepth level, required for subnodes\n     */\n    function Quadtree(bounds, max_objects, max_levels, level) {\n        this.max_objects = max_objects || 4;\n        this.max_levels  = max_levels || 4;\n\n        this.level = level || 0;\n        this.bounds = bounds;\n\n        this.objects = [];\n        this.nodes = [];\n    }\n\n\n    /*\n     * Split the node into 4 subnodes\n     */\n    Quadtree.prototype.split = function () {\n\n        var nextLevel = this.level + 1,\n            subWidth  = ~~(0.5 + this.bounds.width / 2),\n            subHeight = ~~(0.5 + this.bounds.height / 2),\n            x = ~~(0.5 + this.bounds.pos.x),\n            y = ~~(0.5 + this.bounds.pos.y);\n\n         //top right node\n        this.nodes[0] = QT_ARRAY_POP({\n            pos : {\n                x : x + subWidth,\n                y : y\n            },\n            width : subWidth,\n            height : subHeight\n        }, this.max_objects, this.max_levels, nextLevel);\n\n        //top left node\n        this.nodes[1] = QT_ARRAY_POP({\n            pos : {\n                x : x,\n                y : y\n            },\n            width : subWidth,\n            height : subHeight\n        }, this.max_objects, this.max_levels, nextLevel);\n\n        //bottom left node\n        this.nodes[2] = QT_ARRAY_POP({\n            pos : {\n                x : x,\n                y : y + subHeight\n            },\n            width : subWidth,\n            height : subHeight\n        }, this.max_objects, this.max_levels, nextLevel);\n\n        //bottom right node\n        this.nodes[3] = QT_ARRAY_POP({\n            pos : {\n                x : x + subWidth,\n                y : y + subHeight\n            },\n            width : subWidth,\n            height : subHeight\n        }, this.max_objects, this.max_levels, nextLevel);\n    };\n\n\n    /*\n     * Determine which node the object belongs to\n     * @param {me.Rect} rect bounds of the area to be checked\n     * @return Integer index of the subnode (0-3), or -1 if rect cannot completely fit within a subnode and is part of the parent node\n     */\n    Quadtree.prototype.getIndex = function (rect) {\n\n        var index = -1,\n            rx = rect.pos.x,\n            ry = rect.pos.y,\n            rw = rect.width,\n            rh = rect.height,\n            verticalMidpoint = this.bounds.pos.x + (this.bounds.width / 2),\n            horizontalMidpoint = this.bounds.pos.y + (this.bounds.height / 2),\n            //rect can completely fit within the top quadrants\n            topQuadrant = (ry < horizontalMidpoint && ry + rh < horizontalMidpoint),\n            //rect can completely fit within the bottom quadrants\n            bottomQuadrant = (ry > horizontalMidpoint);\n\n        //rect can completely fit within the left quadrants\n        if (rx < verticalMidpoint && rx + rw < verticalMidpoint) {\n            if (topQuadrant) {\n                index = 1;\n            } else if (bottomQuadrant) {\n                index = 2;\n            }\n        } else if (rx > verticalMidpoint) {\n            //rect can completely fit within the right quadrants\n            if (topQuadrant) {\n                index = 0;\n            } else if (bottomQuadrant) {\n                index = 3;\n            }\n        }\n\n        return index;\n    };\n\n    /**\n     * Insert the given object container into the node.\n     * @name insertContainer\n     * @memberOf me.QuadTree\n     * @function\n     * @param {me.Container} container group of objects to be added\n     */\n    Quadtree.prototype.insertContainer = function (container) {\n\n        for (var i = container.children.length, child; i--, (child = container.children[i]);) {\n            if (child instanceof me.Container) {\n                if (child.name !== \"rootContainer\") {\n                    this.insert(child);\n                }\n                // recursivly insert all childs\n                this.insertContainer(child);\n            } else {\n                // only insert object with a bounding box\n                if (typeof (child.getBounds) === \"function\") {\n                    this.insert(child);\n                }\n            }\n        }\n    };\n\n    /**\n     * Insert the given object into the node. If the node\n     * exceeds the capacity, it will split and add all\n     * objects to their corresponding subnodes.\n     * @name insert\n     * @memberOf me.QuadTree\n     * @function\n     * @param {Object} item object to be added\n     */\n    Quadtree.prototype.insert = function (item) {\n\n        var index = -1;\n\n        //if we have subnodes ...\n        if (this.nodes.length > 0) {\n            index = this.getIndex(item.getBounds());\n\n            if (index !== -1) {\n                this.nodes[index].insert(item);\n                return;\n            }\n        }\n\n        this.objects.push(item);\n\n        if (this.objects.length > this.max_objects && this.level < this.max_levels) {\n\n            //split if we don't already have subnodes\n            if (this.nodes.length === 0) {\n                this.split();\n            }\n\n            var i = 0;\n\n            //add all objects to there corresponding subnodes\n            while (i < this.objects.length) {\n\n                index = this.getIndex(this.objects[i].getBounds());\n\n                if (index !== -1) {\n                    this.nodes[index].insert(this.objects.splice(i, 1)[0]);\n                } else {\n                    i = i + 1;\n                }\n            }\n        }\n    };\n\n    /**\n     * Return all objects that could collide with the given object\n     * @name retrieve\n     * @memberOf me.QuadTree\n     * @function\n     * @param {Object} object object to be checked against\n     * @param {Object} [function] a sorting function for the returned array\n     * @return {Object[]} array with all detected objects\n     */\n    Quadtree.prototype.retrieve = function (item, fn) {\n\n        var returnObjects = this.objects;\n\n        //if we have subnodes ...\n        if (this.nodes.length > 0) {\n\n            var index = this.getIndex(item.getBounds());\n\n            //if rect fits into a subnode ..\n            if (index !== -1) {\n                returnObjects = returnObjects.concat(this.nodes[index].retrieve(item));\n            } else {\n                 //if rect does not fit into a subnode, check it against all subnodes\n                for (var i = 0; i < this.nodes.length; i = i + 1) {\n                    returnObjects = returnObjects.concat(this.nodes[i].retrieve(item));\n                }\n            }\n        }\n\n        if (typeof(fn) === \"function\") {\n            returnObjects.sort(fn);\n        }\n\n        return returnObjects;\n    };\n\n\n    /**\n     * clear the quadtree\n     * @name clear\n     * @memberOf me.QuadTree\n     * @function\n     */\n    Quadtree.prototype.clear = function (bounds) {\n\n        this.objects.length = 0;\n\n        for (var i = 0; i < this.nodes.length; i = i + 1) {\n            this.nodes[i].clear();\n            // recycle the quadTree object\n            QT_ARRAY_PUSH(this.nodes[i]);\n        }\n        // empty the array\n        this.nodes = [];\n\n        // resize the root bounds if required\n        if (typeof bounds !== \"undefined\") {\n            this.bounds.setShape(bounds.pos.x, bounds.pos.y, bounds.width, bounds.height);\n        }\n    };\n\n    //make Quadtree available in the me namespace\n    me.QuadTree = Quadtree;\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Separating Axis Theorem implementation, based on the SAT.js library by Jim Riecken <jimr@jimr.ca>\n * Available under the MIT License - https://github.com/jriecken/sat-js\n */\n\n(function () {\n\n    /**\n     * Constants for Vornoi regions\n     * @ignore\n     */\n    var LEFT_VORNOI_REGION = -1;\n\n    /**\n     * Constants for Vornoi regions\n     * @ignore\n     */\n    var MIDDLE_VORNOI_REGION = 0;\n\n    /**\n     * Constants for Vornoi regions\n     * @ignore\n     */\n    var RIGHT_VORNOI_REGION = 1;\n\n\n    /**\n     * A pool of `Vector` objects that are used in calculations to avoid allocating memory.\n     * @type {Array.<Vector>}\n     */\n    var T_VECTORS = [];\n    for (var v = 0; v < 10; v++) { T_VECTORS.push(new me.Vector2d()); }\n\n    /**\n     * A pool of arrays of numbers used in calculations to avoid allocating memory.\n     * @type {Array.<Array.<number>>}\n     */\n    var T_ARRAYS = [];\n    for (var a = 0; a < 5; a++) { T_ARRAYS.push([]); }\n\n\n    /**\n     * Flattens the specified array of points onto a unit vector axis,\n     * resulting in a one dimensional range of the minimum and\n     * maximum value on that axis.\n     * @param {Array.<Vector>} points The points to flatten.\n     * @param {Vector} normal The unit vector axis to flatten on.\n     * @param {Array.<number>} result An array.  After calling this function,\n     *   result[0] will be the minimum value,\n     *   result[1] will be the maximum value.\n     */\n    function flattenPointsOn(points, normal, result) {\n        var min = Number.MAX_VALUE;\n        var max = -Number.MAX_VALUE;\n        var len = points.length;\n        for (var i = 0; i < len; i++) {\n            // The magnitude of the projection of the point onto the normal\n            var dot = points[i].dotProduct(normal);\n            if (dot < min) { min = dot; }\n            if (dot > max) { max = dot; }\n        }\n        result[0] = min;\n        result[1] = max;\n    }\n\n    /**\n     * Check whether two convex polygons are separated by the specified\n     * axis (must be a unit vector).\n     * @param {Vector} aPos The position of the first polygon.\n     * @param {Vector} bPos The position of the second polygon.\n     * @param {Array.<Vector>} aPoints The points in the first polygon.\n     * @param {Array.<Vector>} bPoints The points in the second polygon.\n     * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n     *   will be projected onto this axis.\n     * @param {Response=} response A Response object (optional) which will be populated\n     *   if the axis is not a separating axis.\n     * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n     *   and a response is passed in, information about how much overlap and\n     *   the direction of the overlap will be populated.\n     */\n    function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n        var rangeA = T_ARRAYS.pop();\n        var rangeB = T_ARRAYS.pop();\n        // The magnitude of the offset between the two polygons\n        var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n        var projectedOffset = offsetV.dotProduct(axis);\n\n        // Project the polygons onto the axis.\n        flattenPointsOn(aPoints, axis, rangeA);\n        flattenPointsOn(bPoints, axis, rangeB);\n        // Move B's range to its position relative to A.\n        rangeB[0] += projectedOffset;\n        rangeB[1] += projectedOffset;\n        // Check if there is a gap. If there is, this is a separating axis and we can stop\n        if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n            T_VECTORS.push(offsetV);\n            T_ARRAYS.push(rangeA);\n            T_ARRAYS.push(rangeB);\n            return true;\n        }\n\n        // This is not a separating axis. If we're calculating a response, calculate the overlap.\n        if (response) {\n            var overlap = 0;\n            // A starts further left than B\n            if (rangeA[0] < rangeB[0]) {\n                response.aInB = false;\n                // A ends before B does. We have to pull A out of B\n                if (rangeA[1] < rangeB[1]) {\n                    overlap = rangeA[1] - rangeB[0];\n                    response.bInA = false;\n                // B is fully inside A.  Pick the shortest way out.\n                } else {\n                    var option1 = rangeA[1] - rangeB[0];\n                    var option2 = rangeB[1] - rangeA[0];\n                    overlap = option1 < option2 ? option1 : -option2;\n                }\n            // B starts further left than A\n            } else {\n                response.bInA = false;\n                // B ends before A ends. We have to push A out of B\n                if (rangeA[1] > rangeB[1]) {\n                    overlap = rangeA[0] - rangeB[1];\n                    response.aInB = false;\n                // A is fully inside B.  Pick the shortest way out.\n                } else {\n                    var option11 = rangeA[1] - rangeB[0];\n                    var option22 = rangeB[1] - rangeA[0];\n                    overlap = option11 < option22 ? option11 : -option22;\n                }\n            }\n\n            // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n            var absOverlap = Math.abs(overlap);\n            if (absOverlap < response.overlap) {\n                response.overlap = absOverlap;\n                response.overlapN.copy(axis);\n                if (overlap < 0) {\n                    response.overlapN.negateSelf();\n                }\n            }\n        }\n        T_VECTORS.push(offsetV);\n        T_ARRAYS.push(rangeA);\n        T_ARRAYS.push(rangeB);\n        return false;\n    }\n\n\n    /**\n     * Calculates which Vornoi region a point is on a line segment. <br>\n     * It is assumed that both the line and the point are relative to `(0,0)`<br>\n     * <pre>\n     *             |       (0)      |\n     *      (-1)  [S]--------------[E]  (1)\n     *             |       (0)      |\n     * </pre>\n     *\n     * @ignore\n     * @param {Vector} line The line segment.\n     * @param {Vector} point The point.\n     * @return  {number} LEFT_VORNOI_REGION (-1) if it is the left region,\n     *          MIDDLE_VORNOI_REGION (0) if it is the middle region,\n     *          RIGHT_VORNOI_REGION (1) if it is the right region.\n     */\n    function vornoiRegion(line, point) {\n        var len2 = line.length2();\n        var dp = point.dotProduct(line);\n        if (dp < 0) {\n            // If the point is beyond the start of the line, it is in the\n            // left vornoi region.\n            return LEFT_VORNOI_REGION;\n        } else if (dp > len2) {\n            // If the point is beyond the end of the line, it is in the\n            // right vornoi region.\n            return RIGHT_VORNOI_REGION;\n        } else {\n            // Otherwise, it's in the middle one.\n            return MIDDLE_VORNOI_REGION;\n        }\n    }\n\n    /**\n     * A singleton for managing collision detection (and projection-based collision response) of 2D shapes.<br>\n     * Based on the Separating Axis Theorem and supports detecting collisions between simple Axis-Aligned Boxes, convex polygons and circles based shapes.\n     * @namespace me.collision\n     * @memberOf me\n     */\n    me.collision = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * the world quadtree used for the collision broadphase\n         * @name quadTree\n         * @memberOf me.collision\n         * @public\n         * @type {me.QuadTree}\n         */\n        api.quadTree = null;\n\n        /**\n         * The maximum number of levels that the quadtree will create. Default is 4.\n         * @name maxDepth\n         * @memberOf me.collision\n         * @public\n         * @type {number}\n         * @see me.collision.quadTree\n         *\n         */\n        api.maxDepth = 4;\n\n        /**\n         * The maximum number of children that a quadtree node can contain before it is split into sub-nodes. Default is 8.\n         * @name maxChildren\n         * @memberOf me.collision\n         * @public\n         * @type {boolean}\n         * @see me.collision.quadTree\n         */\n        api.maxChildren = 8;\n\n        /**\n         * bounds of the physic world.\n         * @name bounds\n         * @memberOf me.collision\n         * @public\n         * @type {me.Rect}\n         */\n        api.bounds = null;\n\n        /**\n         * Enum for collision type values.\n         * @property NO_OBJECT to disable collision check\n         * @property PLAYER_OBJECT\n         * @property NPC_OBJECT\n         * @property ENEMY_OBJECT\n         * @property COLLECTABLE_OBJECT\n         * @property ACTION_OBJECT e.g. doors\n         * @property PROJECTILE_OBJECT e.g. missiles\n         * @property WORLD_SHAPE e.g. walls; for map collision shapes\n         * @property USER user-defined collision types (see example)\n         * @property ALL_OBJECT all of the above (including user-defined types)\n         * @readonly\n         * @enum {Number}\n         * @name types\n         * @memberOf me.collision\n         * @see me.body.setCollisionMask\n         * @see me.body.collisionType\n         * @example\n         * // set the entity body collision type\n         * myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n         *\n         * // filter collision detection with collision shapes, enemies and collectables\n         * myEntity.body.setCollisionMask(\n         *     me.collision.types.WORLD_SHAPE |\n         *     me.collision.types.ENEMY_OBJECT |\n         *     me.collision.types.COLLECTABLE_OBJECT\n         * );\n         *\n         * // User-defined collision types are defined using BITWISE LEFT-SHIFT:\n         * game.collisionTypes = {\n         *     LOCKED_DOOR : me.collision.types.USER << 0,\n         *     OPEN_DOOR   : me.collision.types.USER << 1,\n         *     LOOT        : me.collision.types.USER << 2,\n         * };\n         *\n         * // Set collision type for a door entity\n         * myDoorEntity.body.collisionType = game.collisionTypes.LOCKED_DOOR;\n         *\n         * // Set collision mask for the player entity, so it collides with locked doors and loot\n         * myPlayerEntity.body.setCollisionMask(\n         *     me.collision.types.ENEMY_OBJECT |\n         *     me.collision.types.WORLD_SHAPE |\n         *     game.collisionTypes.LOCKED_DOOR |\n         *     game.collisionTypes.LOOT\n         * );\n         */\n        api.types = {\n            /** to disable collision check */\n            NO_OBJECT           : 0,\n            PLAYER_OBJECT       : 1 << 0,\n            NPC_OBJECT          : 1 << 1,\n            ENEMY_OBJECT        : 1 << 2,\n            COLLECTABLE_OBJECT  : 1 << 3,\n            ACTION_OBJECT       : 1 << 4, // door, etc...\n            PROJECTILE_OBJECT   : 1 << 5, // missiles, etc...\n            WORLD_SHAPE         : 1 << 6, // walls, etc...\n            USER                : 1 << 7, // user-defined types start here...\n            ALL_OBJECT          : 0xFFFFFFFF // all objects\n        };\n\n        /**\n         * Initialize the collision/physic world\n         * @ignore\n         */\n        api.init = function () {\n            // default bounds to the game viewport\n            api.bounds = me.game.viewport.clone();\n            // initializa the quadtree\n            api.quadTree = new me.QuadTree(api.bounds, api.maxChildren, api.maxDepth);\n\n            // reset the collision detection engine if a TMX level is loaded\n            me.event.subscribe(me.event.LEVEL_LOADED, function () {\n                // default bounds to game world\n                api.bounds = me.game.world.clone();\n                // reset the quadtree\n                api.quadTree.clear(api.bounds);\n            });\n        };\n\n        /**\n         * An object representing the result of an intersection.\n         * @property {me.Entity} a The first object participating in the intersection\n         * @property {me.Entity} b The second object participating in the intersection\n         * @property {Number} overlap Magnitude of the overlap on the shortest colliding axis\n         * @property {me.Vector2d} overlapV The overlap vector (i.e. `overlapN.scale(overlap, overlap)`). If this vector is subtracted from the position of a, a and b will no longer be colliding\n         * @property {me.Vector2d} overlapN The shortest colliding axis (unit-vector)\n         * @property {Boolean} aInB Whether the first object is entirely inside the second\n         * @property {Boolean} bInA Whether the second object is entirely inside the first\n         * @property {Number} indexShapeA The index of the colliding shape for the object a body\n         * @property {Number} indexShapeB The index of the colliding shape for the object b body\n         * @name ResponseObject\n         * @memberOf me.collision\n         * @public\n         * @type {Object}\n         * @see me.collision.check\n         */\n        api.ResponseObject = function () {\n            this.a = null;\n            this.b = null;\n            this.overlapN = new me.Vector2d();\n            this.overlapV = new me.Vector2d();\n            this.aInB = true;\n            this.bInA = true;\n            this.indexShapeA = -1;\n            this.indexShapeB = -1;\n            this.overlap = Number.MAX_VALUE;\n        };\n\n        /**\n         * Set some values of the response back to their defaults. <br>\n         * Call this between tests if you are going to reuse a single <br>\n         * Response object for multiple intersection tests <br>\n         * (recommended as it will avoid allocating extra memory) <br>\n         * @name clear\n         * @memberOf me.collision.ResponseObject\n         * @public\n         * @function\n         */\n        api.ResponseObject.prototype.clear = function () {\n            this.aInB = true;\n            this.bInA = true;\n            this.overlap = Number.MAX_VALUE;\n            this.indexShapeA = -1;\n            this.indexShapeB = -1;\n            return this;\n        };\n\n        /**\n         * a global instance of a response object used for collision detection <br>\n         * this object will be reused amongst collision detection call if not user-defined response is specified\n         * @name response\n         * @memberOf me.collision\n         * @public\n         * @type {me.collision.ResponseObject}\n         */\n        api.response = new api.ResponseObject();\n\n        /**\n         * a callback used to determine if two objects should collide (based on both respective objects collision mask and type).<br>\n         * you can redefine this function if you need any specific rules over what should collide with what.\n         * @name shouldCollide\n         * @memberOf me.collision\n         * @public\n         * @function\n         * @param {me.Entity} a a reference to the object A.\n         * @param {me.Entity} b a reference to the object B.\n         * @return {Boolean} true if they should collide, false otherwise\n         */\n        api.shouldCollide = function (a, b) {\n            return (\n                a.body && b.body &&\n                (a.body.collisionMask & b.body.collisionType) !== 0 &&\n                (a.body.collisionType & b.body.collisionMask) !== 0\n            );\n        };\n\n        /**\n         * Checks if the specified entity collides with others entities\n         * @name check\n         * @memberOf me.collision\n         * @public\n         * @function\n         * @param {me.Entity} obj entity to be tested for collision\n         * @param {me.collision.ResponseObject} [respObj=me.collision.response] a user defined response object that will be populated if they intersect.\n         * @return {Boolean} in case of collision, false otherwise\n         * @example\n         * update : function (dt) {\n         *    // ...\n         *\n         *    // handle collisions against other shapes\n         *    me.collision.check(this);\n         *\n         *    // ...\n         * },\n         *\n         * // colision handler\n         * onCollision : function (response) {\n         *     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         *         // makes the other entity solid, by substracting the overlap vector to the current position\n         *         this.pos.sub(response.overlapV);\n         *         this.hurt();\n         *         // not solid\n         *         return false;\n         *     }\n         *     // Make the object solid\n         *     return true;\n         * },\n         */\n        api.check = function (objA, responseObject) {\n            var collision = 0;\n            var response = responseObject || api.response;\n\n            // retreive a list of potential colliding objects\n            var candidates = api.quadTree.retrieve(objA);\n\n            for (var i = candidates.length, objB; i--, (objB = candidates[i]);) {\n\n                // check if both objects \"should\" collide\n                if ((objB !== objA) && api.shouldCollide(objA, objB) &&\n                    // fast AABB check if both bounding boxes are overlaping\n                    objA.getBounds().overlaps(objB.getBounds())) {\n\n                    // go trough all defined shapes in A\n                    var aLen = objA.body.shapes.length;\n                    var bLen = objB.body.shapes.length;\n                    if (aLen === 0 || bLen === 0) {\n                        continue;\n                    }\n\n                    var indexA = 0;\n                    do {\n                        var shapeA = objA.body.getShape(indexA);\n                        // go through all defined shapes in B\n                        var indexB = 0;\n                        do {\n                            var shapeB = objB.body.getShape(indexB);\n\n                            // full SAT collision check\n                            if (api[\"test\" + shapeA.shapeType + shapeB.shapeType]\n                                .call(\n                                    this,\n                                    objA, // a reference to the object A\n                                    shapeA,\n                                    objB,  // a reference to the object B\n                                    shapeB,\n                                     // clear response object before reusing\n                                    response.clear()) === true\n                            ) {\n                                // we touched something !\n                                collision++;\n\n                                // set the shape index\n                                response.indexShapeA = indexA;\n                                response.indexShapeB = indexB;\n\n                                // execute the onCollision callback\n                                if (objA.onCollision(response, objB) !== false) {\n                                    objA.body.respondToCollision.call(objA.body, response);\n                                }\n                                if (objB.onCollision(response, objA) !== false) {\n                                    objB.body.respondToCollision.call(objB.body, response);\n                                }\n                            }\n                            indexB++;\n                        } while (indexB < bLen);\n                        indexA++;\n                    } while (indexA < aLen);\n                }\n            }\n            // we could return the amount of objects we collided with ?\n            return collision > 0;\n        };\n\n        /**\n         * Checks whether polygons collide.\n         * @ignore\n         * @param {me.Entity} a a reference to the object A.\n         * @param {me.Polygon} polyA a reference to the object A Polygon to be tested\n         * @param {me.Entity} b a reference to the object B.\n         * @param {me.Polygon} polyB a reference to the object B Polygon to be tested\n         * @param {Response=} response Response object (optional) that will be populated if they intersect.\n         * @return {boolean} true if they intersect, false if they don't.\n         */\n        api.testPolygonPolygon = function (a, polyA, b, polyB, response) {\n            // specific point for\n            var aPoints = polyA.points;\n            var aNormals = polyA.normals;\n            var aLen = aNormals.length;\n            var bPoints = polyB.points;\n            var bNormals = polyB.normals;\n            var bLen = bNormals.length;\n            // aboslute shape position\n            var posA = T_VECTORS.pop().copy(a.pos).add(a.ancestor._absPos).add(polyA.pos);\n            var posB = T_VECTORS.pop().copy(b.pos).add(b.ancestor._absPos).add(polyB.pos);\n            var i;\n\n            // If any of the edge normals of A is a separating axis, no intersection.\n            for (i = 0; i < aLen; i++) {\n                if (isSeparatingAxis(posA, posB, aPoints, bPoints, aNormals[i], response)) {\n                    T_VECTORS.push(posA);\n                    T_VECTORS.push(posB);\n                    return false;\n                }\n            }\n\n            // If any of the edge normals of B is a separating axis, no intersection.\n            for (i = 0;i < bLen; i++) {\n                if (isSeparatingAxis(posA, posB, aPoints, bPoints, bNormals[i], response)) {\n                    T_VECTORS.push(posA);\n                    T_VECTORS.push(posB);\n                    return false;\n                }\n            }\n\n            // Since none of the edge normals of A or B are a separating axis, there is an intersection\n            // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n            // final overlap vector.\n            if (response) {\n                response.a = a;\n                response.b = b;\n                response.overlapV.copy(response.overlapN).scale(response.overlap);\n            }\n            T_VECTORS.push(posA);\n            T_VECTORS.push(posB);\n            return true;\n        };\n\n        /**\n         * Check if two Ellipse collide.\n         * @ignore\n         * @param {me.Entity} a a reference to the object A.\n         * @param {me.Ellipse} ellipseA a reference to the object A Ellipse to be tested\n         * @param {me.Entity} b a reference to the object B.\n         * @param {me.Ellipse} ellipseB a reference to the object B Ellipse to be tested\n         * @param {Response=} response Response object (optional) that will be populated if\n         *   the circles intersect.\n         * @return {boolean} true if the circles intersect, false if they don't.\n         */\n        api.testEllipseEllipse = function (a, ellipseA, b, ellipseB, response) {\n            // Check if the distance between the centers of the two\n            // circles is greater than their combined radius.\n            var differenceV = T_VECTORS.pop().copy(b.pos).add(b.ancestor._absPos).add(ellipseB.pos)\n                .sub(a.pos).add(a.ancestor._absPos).sub(ellipseA.pos);\n            var radiusA = ellipseA.radius;\n            var radiusB = ellipseB.radius;\n            var totalRadius = radiusA + radiusB;\n            var totalRadiusSq = totalRadius * totalRadius;\n            var distanceSq = differenceV.length2();\n            // If the distance is bigger than the combined radius, they don't intersect.\n            if (distanceSq > totalRadiusSq) {\n                T_VECTORS.push(differenceV);\n                return false;\n            }\n            // They intersect.  If we're calculating a response, calculate the overlap.\n            if (response) {\n                var dist = Math.sqrt(distanceSq);\n                response.a = a;\n                response.b = b;\n                response.overlap = totalRadius - dist;\n                response.overlapN.copy(differenceV.normalize());\n                response.overlapV.copy(differenceV).scale(response.overlap);\n                response.aInB = radiusA <= radiusB && dist <= radiusB - radiusA;\n                response.bInA = radiusB <= radiusA && dist <= radiusA - radiusB;\n            }\n            T_VECTORS.push(differenceV);\n            return true;\n        };\n\n        /**\n         * Check if a polygon and an ellipse collide.\n         * @ignore\n         * @param {me.Entity} a a reference to the object A.\n         * @param {me.Polygon} polyA a reference to the object A Polygon to be tested\n         * @param {me.Entity} b a reference to the object B.\n         * @param {me.Ellipse} ellipseB a reference to the object B Ellipse to be tested\n         * @param {Response=} response Response object (optional) that will be populated if they intersect.\n         * @return {boolean} true if they intersect, false if they don't.\n         */\n        api.testPolygonEllipse = function (a, polyA, b, ellipseB, response) {\n            // Get the position of the circle relative to the polygon.\n            var circlePos = T_VECTORS.pop().copy(b.pos).add(b.ancestor._absPos).add(ellipseB.pos)\n                .sub(a.pos).add(a.ancestor._absPos).sub(polyA.pos);\n            var radius = ellipseB.radius;\n            var radius2 = radius * radius;\n            var points = polyA.points;\n            var edges = polyA.edges;\n            var len = edges.length;\n            var edge = T_VECTORS.pop();\n            var normal = T_VECTORS.pop();\n            var point = T_VECTORS.pop();\n            var dist = 0;\n\n            // For each edge in the polygon:\n            for (var i = 0; i < len; i++) {\n                var next = i === len - 1 ? 0 : i + 1;\n                var prev = i === 0 ? len - 1 : i - 1;\n                var overlap = 0;\n                var overlapN = null;\n\n                // Get the edge.\n                edge.copy(edges[i]);\n                // Calculate the center of the circle relative to the starting point of the edge.\n                point.copy(circlePos).sub(points[i]);\n\n                // If the distance between the center of the circle and the point\n                // is bigger than the radius, the polygon is definitely not fully in\n                // the circle.\n                if (response && point.length2() > radius2) {\n                    response.aInB = false;\n                }\n\n                // Calculate which Vornoi region the center of the circle is in.\n                var region = vornoiRegion(edge, point);\n                var inRegion = true;\n                // If it's the left region:\n                if (region === LEFT_VORNOI_REGION) {\n                    var point2 = null;\n                    if (len > 1) {\n                        // We need to make sure we're in the RIGHT_VORNOI_REGION of the previous edge.\n                        edge.copy(edges[prev]);\n                        // Calculate the center of the circle relative the starting point of the previous edge\n                        point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n                        region = vornoiRegion(edge, point2);\n                        if (region !== RIGHT_VORNOI_REGION) {\n                            inRegion = false;\n                        }\n                    }\n\n                    if (inRegion) {\n                        // It's in the region we want.  Check if the circle intersects the point.\n                        dist = point.length();\n                        if (dist > radius) {\n                            // No intersection\n                            T_VECTORS.push(circlePos);\n                            T_VECTORS.push(edge);\n                            T_VECTORS.push(normal);\n                            T_VECTORS.push(point);\n                            if (point2) {\n                                T_VECTORS.push(point2);\n                            }\n                            return false;\n                        } else if (response) {\n                            // It intersects, calculate the overlap.\n                            response.bInA = false;\n                            overlapN = point.normalize();\n                            overlap = radius - dist;\n                        }\n                    }\n\n                    if (point2) {\n                        T_VECTORS.push(point2);\n                    }\n                // If it's the right region:\n                } else if (region === RIGHT_VORNOI_REGION) {\n                    if (len > 1) {\n                        // We need to make sure we're in the left region on the next edge\n                        edge.copy(edges[next]);\n                        // Calculate the center of the circle relative to the starting point of the next edge.\n                        point.copy(circlePos).sub(points[next]);\n                        region = vornoiRegion(edge, point);\n                        if (region !== LEFT_VORNOI_REGION) {\n                            inRegion = false;\n                        }\n                    }\n\n                    if (inRegion) {\n                        // It's in the region we want.  Check if the circle intersects the point.\n                        dist = point.length();\n                        if (dist > radius) {\n                            // No intersection\n                            T_VECTORS.push(circlePos);\n                            T_VECTORS.push(edge);\n                            T_VECTORS.push(normal);\n                            T_VECTORS.push(point);\n                            return false;\n                        } else if (response) {\n                            // It intersects, calculate the overlap.\n                            response.bInA = false;\n                            overlapN = point.normalize();\n                            overlap = radius - dist;\n                        }\n                    }\n                // Otherwise, it's the middle region:\n                } else {\n                    // Need to check if the circle is intersecting the edge,\n                    // Get the normal.\n                    normal.copy(polyA.normals[i]);\n                    // Find the perpendicular distance between the center of the\n                    // circle and the edge.\n                    dist = point.dotProduct(normal);\n                    var distAbs = Math.abs(dist);\n                    // If the circle is on the outside of the edge, there is no intersection.\n                    if ((len === 1 || dist > 0) && distAbs > radius) {\n                        // No intersection\n                        T_VECTORS.push(circlePos);\n                        T_VECTORS.push(edge);\n                        T_VECTORS.push(normal);\n                        T_VECTORS.push(point);\n                        return false;\n                    } else if (response) {\n                        // It intersects, calculate the overlap.\n                        overlapN = normal;\n                        overlap = radius - dist;\n                        // If the center of the circle is on the outside of the edge, or part of the\n                        // circle is on the outside, the circle is not fully inside the polygon.\n                        if (dist >= 0 || overlap < 2 * radius) {\n                            response.bInA = false;\n                        }\n                    }\n                }\n\n                // If this is the smallest overlap we've seen, keep it.\n                // (overlapN may be null if the circle was in the wrong Vornoi region).\n                if (overlapN && response && Math.abs(overlap) < Math.abs(response.overlap)) {\n                    response.overlap = overlap;\n                    response.overlapN.copy(overlapN);\n                }\n            }\n\n            // Calculate the final overlap vector - based on the smallest overlap.\n            if (response) {\n                response.a = a;\n                response.b = b;\n                response.overlapV.copy(response.overlapN).scale(response.overlap);\n            }\n            T_VECTORS.push(circlePos);\n            T_VECTORS.push(edge);\n            T_VECTORS.push(normal);\n            T_VECTORS.push(point);\n            return true;\n        };\n\n        /**\n         * Check if an ellipse and a polygon collide. <br>\n         * **NOTE:** This is slightly less efficient than testPolygonEllipse as it just\n         * runs testPolygonEllipse and reverses the response at the end.\n         * @ignore\n         * @param {me.Entity} a a reference to the object A.\n         * @param {me.Ellipse} ellipseA a reference to the object A Ellipse to be tested\n         * @param {me.Entity} a a reference to the object B.\n         * @param {me.Polygon} polyB a reference to the object B Polygon to be tested\n         * @param {Response=} response Response object (optional) that will be populated if\n         *   they intersect.\n         * @return {boolean} true if they intersect, false if they don't.\n         */\n        api.testEllipsePolygon = function (a, ellipseA, b, polyB, response) {\n            // Test the polygon against the circle.\n            var result = api.testPolygonEllipse(b, polyB, a, ellipseA, response);\n            if (result && response) {\n                // Swap A and B in the response.\n                var resa = response.a;\n                var aInB = response.aInB;\n                response.overlapN.negateSelf();\n                response.overlapV.negateSelf();\n                response.a = response.b;\n                response.b = resa;\n                response.aInB = response.bInA;\n                response.bInA = aInB;\n            }\n            return result;\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * A base class for renderable objects.\n     * @class\n     * @extends me.Rect\n     * @memberOf me\n     * @constructor\n     * @param {Number} x position of the renderable object\n     * @param {Number} y position of the renderable object\n     * @param {Number} width object width\n     * @param {Number} height object height\n     */\n    me.Renderable = me.Rect.extend(\n    /** @scope me.Renderable.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (x, y, width, height) {\n            /**\n             * to identify the object as a renderable object\n             * @ignore\n             */\n            this.isRenderable = true;\n\n           /**\n            * (G)ame (U)nique (Id)entifier\" <br>\n            * a GUID will be allocated for any renderable object added <br>\n            * to an object container (including the `me.game.world` container)\n            * @public\n            * @type String\n            * @name GUID\n            * @memberOf me.Renderable\n            */\n            this.GUID = undefined;\n\n            /**\n             * Whether the renderable object is visible and within the viewport<br>\n             * @public\n             * @readonly\n             * @type Boolean\n             * @default false\n             * @name inViewport\n             * @memberOf me.Renderable\n             */\n            this.inViewport = false;\n\n            /**\n             * Whether the renderable object will always update, even when outside of the viewport<br>\n             * @public\n             * @type Boolean\n             * @default false\n             * @name alwaysUpdate\n             * @memberOf me.Renderable\n             */\n            this.alwaysUpdate = false;\n\n            /**\n             * Whether to update this object when the game is paused.\n             * @public\n             * @type Boolean\n             * @default false\n             * @name updateWhenPaused\n             * @memberOf me.Renderable\n             */\n            this.updateWhenPaused = false;\n\n            /**\n             * make the renderable object persistent over level changes<br>\n             * @public\n             * @type Boolean\n             * @default false\n             * @name isPersistent\n             * @memberOf me.Renderable\n             */\n            this.isPersistent = false;\n\n            /**\n             * Define if a renderable follows screen coordinates (floating)<br>\n             * or the world coordinates (not floating)<br>\n             * @public\n             * @type Boolean\n             * @default false\n             * @name floating\n             * @memberOf me.Renderable\n             */\n            this.floating = false;\n\n            /**\n             * Define the object anchoring point<br>\n             * This is used when positioning, or scaling the object<br>\n             * The anchor point is a value between 0.0 and 1.0 (1.0 being the maximum size of the object) <br>\n             * (0, 0) means the top-left corner, <br>\n             * (1, 1) means the bottom-right corner, <br>\n             * @public\n             * @type me.Vector2d\n             * @default <0.5,0.5>\n             * @name anchorPoint\n             * @memberOf me.Renderable\n             */\n            this.anchorPoint = new me.Vector2d(0.5, 0.5);\n\n            /**\n             * Define the renderable opacity<br>\n             * Set to zero if you do not wish an object to be drawn\n             * @see me.Renderable#setOpacity\n             * @see me.Renderable#getOpacity\n             * @public\n             * @type Number\n             * @default 1.0\n             * @name me.Renderable#alpha\n             */\n            this.alpha = 1.0;\n\n            /**\n             * a reference to the Container object that contains this renderable,\n             * or undefined if it has not been added to one.\n             * @public\n             * @type me.Container\n             * @default undefined\n             * @name me.Renderable#ancestor\n             */\n            this.ancestor = undefined;\n\n            /**\n             * The bounding rectangle for this renderable\n             * @ignore\n             * @type {me.Rect}\n             * @name _bounds\n             * @memberOf me.Renderable\n             */\n            if (this._bounds) {\n                this._bounds.setShape(x, y, width, height);\n            }\n            else {\n                this._bounds = new me.Rect(x, y, width, height);\n            }\n\n            /**\n             * Absolute position in the game world\n             * @ignore\n             * @type {me.Vector2d}\n             * @name _absPos\n             * @memberOf me.Renderable\n             */\n            if (this._absPos) {\n                this._absPos.set(x, y);\n            }\n            else {\n                this._absPos = new me.Vector2d(x, y);\n            }\n\n            // set position to observable. Can use updateBounds, as _bounds using a regular vector.\n            // will not lead to stack too deep.\n            if (this.pos) {\n                this.pos.setMuted(x, y, 0).setCallback(this.updateBoundsPos.bind(this));\n            } else {\n                this.pos = new me.ObservableVector3d(x, y, 0, { onUpdate: this.updateBoundsPos.bind(this) });\n            }\n\n            this._width = width;\n            this._height = height;\n\n            this.shapeType = \"Rectangle\";\n\n            // ensure it's fully opaque by default\n            this.setOpacity(1.0);\n        },\n\n        /**\n         * returns the bounding box for this renderable\n         * @name getBounds\n         * @memberOf me.Renderable\n         * @function\n         * @return {me.Rect} bounding box Rectangle object\n         */\n        getBounds : function () {\n            return this._bounds;\n        },\n\n        /**\n         * get the renderable alpha channel value<br>\n         * @name getOpacity\n         * @memberOf me.Renderable\n         * @function\n         * @return {Number} current opacity value between 0 and 1\n         */\n        getOpacity : function () {\n            return this.alpha;\n        },\n\n        /**\n         * update the renderable's bounding rect dimensions\n         * @private\n         * @name resizeBounds\n         * @memberOf me.Renderable\n         * @function\n         */\n        resizeBounds : function (width, height) {\n            this._bounds.resize(width, height);\n            return this._bounds;\n        },\n\n        /**\n         * set the renderable alpha channel value<br>\n         * @name setOpacity\n         * @memberOf me.Renderable\n         * @function\n         * @param {Number} alpha opacity value between 0.0 and 1.0\n         */\n        setOpacity : function (alpha) {\n            if (typeof (alpha) === \"number\") {\n                this.alpha = alpha.clamp(0.0, 1.0);\n                // Set to 1 if alpha is NaN\n                if (this.alpha !== this.alpha) {\n                    this.alpha = 1.0;\n                }\n            }\n        },\n\n        /**\n         * update function\n         * called by the game manager on each game loop\n         * @name update\n         * @memberOf me.Renderable\n         * @function\n         * @protected\n         * @param {Number} dt time since the last update in milliseconds.\n         * @return false\n         **/\n        update : function () {\n            return false;\n        },\n\n        /**\n         * update the renderable's bounding rect (private)\n         * @private\n         * @name updateBoundsPos\n         * @memberOf me.Renderable\n         * @function\n         */\n        updateBoundsPos : function (newX, newY) {\n            this._bounds.pos.set(newX, newY);\n            // XXX: This is called from the constructor, before it gets an ancestor\n            if (this.ancestor) {\n                this._bounds.pos.add(this.ancestor._absPos);\n            }\n            return this._bounds;\n        },\n\n        /**\n         * update the bounds\n         * @private\n         * @deprecated\n         * @name updateBounds\n         * @memberOf me.Entity\n         * @function\n         */\n        updateBounds : function () {\n            console.warn(\"Deprecated: me.Renderable.updateBounds\");\n            return me.Rect.prototype.updateBounds.apply(this);\n        },\n\n        /**\n         * object draw\n         * called by the game manager on each game loop\n         * @name draw\n         * @memberOf me.Renderable\n         * @function\n         * @protected\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer a renderer object\n         **/\n        draw : function (/*renderer*/) {\n            // empty one !\n        }\n    });\n\n    /**\n     * width of the Renderable bounding box<br>\n     * @public\n     * @type {Number}\n     * @name width\n     * @memberOf me.Renderable\n     */\n    Object.defineProperty(me.Renderable.prototype, \"width\", {\n        get : function () {\n            return this._width;\n        },\n        set : function (value) {\n            this.resizeBounds(value, this._height);\n            this._width = value;\n        },\n        configurable : true\n    });\n\n    /**\n     * height of the Renderable bounding box <br>\n     * @public\n     * @type {Number}\n     * @name height\n     * @memberOf me.Renderable\n     */\n    Object.defineProperty(me.Renderable.prototype, \"height\", {\n        get : function () {\n            return this._height;\n        },\n        set : function (value) {\n            this.resizeBounds(this._width, value);\n            this._height = value;\n        },\n        configurable : true\n    });\n\n    /**\n     * Base class for Renderable exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Renderable\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Renderable.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Renderable.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A Simple object to display a sprite on screen.\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} x the x coordinates of the sprite object\n     * @param {Number} y the y coordinates of the sprite object\n     * @param {Object} settings Contains additional parameters for the sprite\n     * @param {me.video.renderer.Texture|Image|String} settings.image reference to a sprite image or to a texture atlas.\n     * @param {String} [settings.region] the region name containing the sprite within a specified texture atlas\n     * @param {Number} [settings.framewidth=settings.image.width] Image source width.\n     * @param {Number} [settings.frameheight=settings.image.height] Image source height.\n     * @param {Number} [settings.rotation] Initial rotation angle in radians.\n     * @param {Boolean} [settings.flipX] Initial flip for X-axis.\n     * @param {Boolean} [settings.flipY] Initial flip for Y-axis.\n     * @param {me.Vector2d} [settings.anchorPoint={x:0.5, y:0.5}] Anchor point to draw the frame at (defaults to the center of the frame).\n     * @example\n     * // create a static Sprite Object\n     * mySprite = new me.Sprite (100, 100, {\n     *     image : me.loader.getImage(\"mySpriteImage\")\n     * });\n     */\n    me.Sprite = me.Renderable.extend(\n    /** @scope me.Sprite.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (x, y, settings) {\n\n            /**\n             * private/internal scale factor\n             * @ignore\n             */\n            this._scale = new me.Vector2d(1, 1);\n\n            // if true, image flipping/scaling is needed\n            this.scaleFlag = false;\n\n            // just to keep track of when we flip\n            this.lastflipX = false;\n            this.lastflipY = false;\n\n            this.flipX(!!settings.flipX);\n            this.flipY(!!settings.flipY);\n\n            // current frame texture offset\n            /**\n             * The position to draw from on the source image.\n             * @public\n             * @type me.Vector2d\n             * @name offset\n             * @memberOf me.Vector2d\n             */\n            this.offset = new me.Vector2d();\n\n            /**\n             * Set the angle (in Radians) of a sprite to rotate it <br>\n             * WARNING: rotating sprites decreases performance with Canvas Renderer\n             * @public\n             * @type Number\n             * @default 0\n             * @name me.Sprite#angle\n             */\n            this.angle = settings.rotation || 0;\n\n            /**\n             * Source rotation angle for pre-rotating the source image<br>\n             * Commonly used for TexturePacker\n             * @ignore\n             */\n            this._sourceAngle = 0;\n\n            // to manage the flickering effect\n            this.flickering = false;\n            this.flickerDuration = 0;\n            this.flickercb = null;\n            this.flickerState = false;\n\n            // Used by the game engine to adjust visibility as the\n            // sprite moves in and out of the viewport\n            this.isSprite = true;\n\n            var image = settings.image;\n\n            if (typeof (settings.region) !== \"undefined\") {\n                if ((typeof (image) === \"object\") && image.getRegion) {\n                    // use a texture atlas\n                    var region = image.getRegion(settings.region);\n                    if (region) {\n                        this.image = image.getTexture();\n                        // set the sprite offset within the texture\n                        this.offset.setV(region.offset);\n                        // set angle if defined\n                        this._sourceAngle = region.angle;\n                        settings.framewidth = settings.framewidth || region.width;\n                        settings.frameheight = settings.frameheight || region.height;\n                    } else {\n                        // throw an error\n                        throw new me.Renderable.Error(\"Texture - region for \" + settings.region + \" not found\");\n                    }\n                } else {\n                    // throw an error\n                    throw new me.Renderable.Error(\"Texture - invalid texture atlas : \" + image);\n                }\n            } else {\n               // use a standard image\n               this.image = me.utils.getImage(image);\n            }\n\n            // call the super constructor\n            me.Renderable.prototype.init.apply(this, [\n                x, y,\n                settings.framewidth  || image.width,\n                settings.frameheight || image.height\n            ]);\n\n            // update anchorPoint\n            if (settings.anchorPoint) {\n                this.anchorPoint.set(settings.anchorPoint.x, settings.anchorPoint.y);\n            }\n\n        },\n\n        /**\n         * return the flickering state of the object\n         * @name isFlickering\n         * @memberOf me.Sprite\n         * @function\n         * @return {Boolean}\n         */\n        isFlickering : function () {\n            return this.flickering;\n        },\n\n        /**\n         * make the object flicker\n         * @name flicker\n         * @memberOf me.Sprite\n         * @function\n         * @param {Number} duration expressed in milliseconds\n         * @param {Function} callback Function to call when flickering ends\n         * @example\n         * // make the object flicker for 1 second\n         * // and then remove it\n         * this.flicker(1000, function () {\n         *     me.game.world.removeChild(this);\n         * });\n         */\n        flicker : function (duration, callback) {\n            this.flickerDuration = duration;\n            if (this.flickerDuration <= 0) {\n                this.flickering = false;\n                this.flickercb = null;\n            }\n            else if (!this.flickering) {\n                this.flickercb = callback;\n                this.flickering = true;\n            }\n        },\n\n        /**\n         * Flip object on horizontal axis\n         * @name flipX\n         * @memberOf me.Sprite\n         * @function\n         * @param {Boolean} flip enable/disable flip\n         */\n        flipX : function (flip) {\n            if (flip !== this.lastflipX) {\n                this.lastflipX = flip;\n\n                // invert the scale.x value\n                this._scale.x = -this._scale.x;\n\n                // set the scaleFlag\n                this.scaleFlag = this._scale.x !== 1.0 || this._scale.y !== 1.0;\n            }\n        },\n\n        /**\n         * Flip object on vertical axis\n         * @name flipY\n         * @memberOf me.Sprite\n         * @function\n         * @param {Boolean} flip enable/disable flip\n         */\n        flipY : function (flip) {\n            if (flip !== this.lastflipY) {\n                this.lastflipY = flip;\n\n                // invert the scale.x value\n                this._scale.y = -this._scale.y;\n\n                // set the scaleFlag\n                this.scaleFlag = this._scale.x !== 1.0 || this._scale.y !== 1.0;\n            }\n        },\n\n        /**\n         * scale the sprite around his center<br>\n         * @name scale\n         * @memberOf me.Sprite\n         * @function\n         * @param {Number} ratioX x scaling ratio\n         * @param {Number} ratioY y scaling ratio\n         */\n        scale : function (ratioX, ratioY) {\n            var x = ratioX;\n            var y = typeof(ratioY) === \"undefined\" ? ratioX : ratioY;\n            if (x > 0) {\n                this._scale.x = this._scale.x < 0.0 ? -x : x;\n            }\n            if (y > 0) {\n                this._scale.y = this._scale.y < 0.0 ? -y : y;\n            }\n            // set the scaleFlag\n            this.scaleFlag = this._scale.x !== 1.0 || this._scale.y !== 1.0;\n\n            // resize the bounding box\n            this.resizeBounds(this.width * x, this.height * y);\n\n        },\n\n        /**\n         * scale the sprite around his center<br>\n         * @name scaleV\n         * @memberOf me.Sprite\n         * @function\n         * @param {me.Vector2d} vector ratio\n         */\n        scaleV : function (ratio) {\n            this.scale(ratio.x, ratio.y);\n        },\n\n        /**\n         * sprite update<br>\n         * not to be called by the end user<br>\n         * called by the game manager on each game loop\n         * @name update\n         * @memberOf me.Sprite\n         * @function\n         * @protected\n         * @return false\n         **/\n        update : function (dt) {\n            //update the \"flickering\" state if necessary\n            if (this.flickering) {\n                this.flickerDuration -= dt;\n                if (this.flickerDuration < 0) {\n                    if (this.flickercb) {\n                        this.flickercb();\n                    }\n                    this.flicker(-1);\n                }\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * object draw<br>\n         * not to be called by the end user<br>\n         * called by the game manager on each game loop\n         * @name draw\n         * @memberOf me.Sprite\n         * @function\n         * @protected\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer a renderer object\n         **/\n        draw : function (renderer) {\n            // do nothing if we are flickering\n            if (this.flickering) {\n                this.flickerState = !this.flickerState;\n                if (!this.flickerState) {\n                    return;\n                }\n            }\n            // save global alpha\n            var alpha = renderer.globalAlpha();\n            // sprite alpha value\n            renderer.setGlobalAlpha(alpha * this.getOpacity());\n\n            // clamp position vector to pixel grid\n            var xpos = ~~this.pos.x, ypos = ~~this.pos.y;\n\n            var w = this.width, h = this.height;\n\n            // save context\n            renderer.save();\n\n            // calculate pixel pos of the anchor point\n            var ax = w * this.anchorPoint.x, ay = h * this.anchorPoint.y;\n            xpos -= ax;\n            ypos -= ay;\n\n            if ((this.scaleFlag) || (this.angle !== 0) || (this._sourceAngle !== 0)) {\n                // translate to the defined anchor point\n                xpos += ax;\n                ypos += ay;\n                renderer.translate(xpos, ypos);\n                // rotate\n                if (this.angle !== 0) {\n                    renderer.rotate(this.angle);\n                }\n                // scale\n                if (this.scaleFlag) {\n                    renderer.scale(this._scale.x, this._scale.y);\n                }\n                // remove image's TexturePacker/ShoeBox rotation\n                if (this._sourceAngle !== 0) {\n                    renderer.translate(-(xpos+ax), -(ypos+ay));\n                    renderer.rotate(this._sourceAngle);\n                    xpos -= this.height;\n                    w = this.height;\n                    h = this.width;\n                } else {\n                    xpos = -ax;\n                    ypos = -ay;\n                }\n            }\n\n            renderer.drawImage(\n                this.image,\n                this.offset.x, this.offset.y,   // sx,sy\n                w, h,                           // sw,sh\n                xpos, ypos,                     // dx,dy\n                w, h                            // dw,dh\n            );\n\n            // restore context\n            renderer.restore();\n\n            // restore global alpha\n            renderer.setGlobalAlpha(alpha);\n        },\n\n        /**\n         * Destroy function<br>\n         * @ignore\n         */\n        destroy : function () {\n            this.onDestroyEvent.apply(this, arguments);\n        },\n\n        /**\n         * OnDestroy Notification function<br>\n         * Called by engine before deleting the object\n         * @name onDestroyEvent\n         * @memberOf me.Sprite\n         * @function\n         */\n        onDestroyEvent : function () {\n            // to be extended !\n        }\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * an object to manage animation\n     * @class\n     * @extends me.Sprite\n     * @memberOf me\n     * @constructor\n     * @param {Number} x the x coordinates of the sprite object\n     * @param {Number} y the y coordinates of the sprite object\n     * @param {Object} settings Contains additional parameters for the animation sheet\n     * @param {Image|String} settings.image Image to use for the animation\n     * @param {Number} [settings.framewidth] Width of a single frame within the spritesheet\n     * @param {Number} [settings.frameheight] Height of a single frame within the spritesheet\n     * @param {me.Vector2d} [settings.anchorPoint={x:0.5, y:0.5}] Anchor point to draw the frame at (defaults to the center of the frame).\n     * @example\n     * // standalone image, with anchor in the center\n     * var animationSheet = new me.AnimationSheet(0, 0, {\n     *     image : \"animationsheet\",\n     *     framewidth : 64,\n     *     frameheight : 64,\n     *     anchorPoint : new me.Vector2d(0.5, 0.5)\n     * });\n     */\n    me.AnimationSheet = me.Sprite.extend(\n    /** @scope me.AnimationSheet.prototype */\n    {\n        /** @ignore */\n        init : function (x, y, settings) {\n\n            /**\n             * pause and resume animation<br>\n             * default value : false;\n             * @public\n             * @type Boolean\n             * @name me.AnimationSheet#animationpause\n             */\n            this.animationpause = false;\n\n            /**\n             * animation cycling speed (delay between frame in ms)<br>\n             * default value : 100ms;\n             * @public\n             * @type Number\n             * @name me.AnimationSheet#animationspeed\n             */\n            this.animationspeed = 100;\n\n            // hold all defined animation\n            this.anim = {};\n\n            // a flag to reset animation\n            this.resetAnim = null;\n\n            // default animation sequence\n            this.current = null;\n\n            // animation frame delta\n            this.dt = 0;\n\n            // default animation speed (ms)\n            this.animationspeed = 100;\n\n            // call the constructor\n            me.Sprite.prototype.init.apply(this, [ x, y, settings ]);\n\n            // store/reset the current atlas information\n            if (typeof(settings.atlas) !== \"undefined\") {\n                this.textureAtlas = settings.atlas;\n                this.atlasIndices = settings.atlasIndices;\n            } else {\n                // \"regular\" spritesheet\n                this.textureAtlas = me.video.renderer.cache.get(\n                    me.utils.getImage(settings.image),\n                    settings\n                ).getAtlas();\n                this.atlasIndices = null;\n            }\n\n            // create a default animation sequence with all sprites\n            this.addAnimation(\"default\", null);\n\n            // set as default\n            this.setCurrentAnimation(\"default\");\n        },\n\n        /**\n         * add an animation <br>\n         * For fixed-sized cell sprite sheet, the index list must follow the\n         * logic as per the following example :<br>\n         * <img src=\"images/spritesheet_grid.png\"/>\n         * @name addAnimation\n         * @memberOf me.AnimationSheet\n         * @function\n         * @param {String} name animation id\n         * @param {Number[]|String[]|Object[]} index list of sprite index or name\n         * defining the animation. Can also use objects to specify delay for each frame, see below\n         * @param {Number} [animationspeed] cycling speed for animation in ms\n         * (delay between each frame).\n         * @see me.AnimationSheet#animationspeed\n         * @example\n         * // walking animation\n         * this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n         * // eating animation\n         * this.addAnimation(\"eat\", [ 6, 6 ]);\n         * // rolling animation\n         * this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n         * // slower animation\n         * this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n         * // or get more specific with delay for each frame. Good solution instead of repeating:\n         * this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n         * // can do this with atlas values as well:\n         * this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n         * // define an dying animation that stop on the last frame\n         * this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n         */\n        addAnimation : function (name, index, animationspeed) {\n            this.anim[name] = {\n                name : name,\n                frames : [],\n                idx : 0,\n                length : 0\n            };\n\n            if (index == null) {\n                index = [];\n                // create a default animation with all frame\n                Object.keys(this.textureAtlas).forEach(function (v, i) {\n                    index[i] = i;\n                });\n            }\n\n            // # of frames\n            var counter = 0;\n            // set each frame configuration (offset, size, etc..)\n            for (var i = 0, len = index.length; i < len; i++) {\n                var frame = index[i];\n                var frameObject;\n                if (typeof(frame) === \"number\" || typeof(frame) === \"string\") {\n                    frameObject = {\n                        name: frame,\n                        delay: animationspeed || this.animationspeed\n                    };\n                }\n                else {\n                  frameObject = frame;\n                }\n                var frameObjectName = frameObject.name;\n                if (typeof(frameObjectName) === \"number\") {\n                    if (typeof (this.textureAtlas[frameObjectName]) !== \"undefined\") {\n                        // TODO: adding the cache source coordinates add undefined entries in webGL mode\n                        this.anim[name].frames[i] = Object.assign(\n                            {},\n                            this.textureAtlas[frameObjectName],\n                            frameObject\n                        );\n                        counter++;\n                    }\n                } else { // string\n                    if (this.atlasIndices === null) {\n                        throw new me.Renderable.Error(\n                            \"string parameters for addAnimation are not allowed for standard spritesheet based Texture\"\n                        );\n                    } else {\n                        this.anim[name].frames[i] = Object.assign(\n                            {},\n                            this.textureAtlas[this.atlasIndices[frameObjectName]],\n                            frameObject\n                        );\n                        counter++;\n                    }\n                }\n            }\n            this.anim[name].length = counter;\n        },\n\n        /**\n         * set the current animation\n         * this will always change the animation & set the frame to zero\n         * @name setCurrentAnimation\n         * @memberOf me.AnimationSheet\n         * @function\n         * @param {String} name animation id\n         * @param {String|Function} [onComplete] animation id to switch to when\n         * complete, or callback\n         * @example\n         * // set \"walk\" animation\n         * this.setCurrentAnimation(\"walk\");\n         *\n         * // set \"walk\" animation if it is not the current animation\n         * if (this.isCurrentAnimation(\"walk\")) {\n         *     this.setCurrentAnimation(\"walk\");\n         * }\n         *\n         * // set \"eat\" animation, and switch to \"walk\" when complete\n         * this.setCurrentAnimation(\"eat\", \"walk\");\n         *\n         * // set \"die\" animation, and remove the object when finished\n         * this.setCurrentAnimation(\"die\", (function () {\n         *    me.game.world.removeChild(this);\n         *    return false; // do not reset to first frame\n         * }).bind(this));\n         *\n         * // set \"attack\" animation, and pause for a short duration\n         * this.setCurrentAnimation(\"die\", (function () {\n         *    this.animationpause = true;\n         *\n         *    // back to \"standing\" animation after 1 second\n         *    setTimeout(function () {\n         *        this.setCurrentAnimation(\"standing\");\n         *    }, 1000);\n         *\n         *    return false; // do not reset to first frame\n         * }).bind(this));\n         **/\n        setCurrentAnimation : function (name, resetAnim, _preserve_dt) {\n            if (this.anim[name]) {\n                this.current = this.anim[name];\n                this.resetAnim = resetAnim || null;\n                this.setAnimationFrame(this.current.idx);\n                if (!_preserve_dt) {\n                    this.dt = 0;\n                }\n            } else {\n                throw new me.Renderable.Error(\"animation id '\" + name + \"' not defined\");\n            }\n        },\n\n        /**\n         * return true if the specified animation is the current one.\n         * @name isCurrentAnimation\n         * @memberOf me.AnimationSheet\n         * @function\n         * @param {String} name animation id\n         * @return {Boolean}\n         * @example\n         * if (!this.isCurrentAnimation(\"walk\")) {\n         *     // do something funny...\n         * }\n         */\n        isCurrentAnimation : function (name) {\n            return this.current.name === name;\n        },\n\n        /**\n         * force the current animation frame index.\n         * @name setAnimationFrame\n         * @memberOf me.AnimationSheet\n         * @function\n         * @param {Number} [index=0] animation frame index\n         * @example\n         * // reset the current animation to the first frame\n         * this.setAnimationFrame();\n         */\n        setAnimationFrame : function (idx) {\n            this.current.idx = (idx || 0) % this.current.length;\n            var frame = this.getAnimationFrameObjectByIndex(this.current.idx);\n            this.offset = frame.offset;\n            this.width = frame.width;\n            this.height = frame.height;\n            this._sourceAngle = frame.angle;\n            if (frame.anchorPoint) {\n                this.anchorPoint = frame.anchorPoint;\n            }\n        },\n\n        /**\n         * return the current animation frame index.\n         * @name getCurrentAnimationFrame\n         * @memberOf me.AnimationSheet\n         * @function\n         * @return {Number} current animation frame index\n         */\n        getCurrentAnimationFrame : function () {\n            return this.current.idx;\n        },\n\n        /**\n         * Returns the frame object by the index.\n         * @name getAnimationFrameObjectByIndex\n         * @memberOf me.AnimationSheet\n         * @function\n         * @private\n         * @return {Number} if using number indices. Returns {Object} containing frame data if using texture atlas\n         */\n        getAnimationFrameObjectByIndex : function (id) {\n            return this.current.frames[id];\n        },\n\n        /**\n         * update the animation<br>\n         * this is automatically called by the game manager {@link me.game}\n         * @name update\n         * @memberOf me.AnimationSheet\n         * @function\n         * @protected\n         * @param {Number} dt time since the last update in milliseconds.\n         */\n        update : function (dt) {\n            // Update animation if necessary\n            if (this.animationpause || this.current.length <= 1) {\n                return me.Sprite.prototype.update.apply(this, [ dt ]);\n            }\n\n            var duration = 0,\n                result = false;\n\n            this.dt += dt;\n            duration = this.getAnimationFrameObjectByIndex(this.current.idx).delay;\n            while (this.dt >= duration) {\n                result = true;\n                this.dt -= duration;\n                this.setAnimationFrame(this.current.idx + 1);\n\n                // Switch animation if we reach the end of the strip and a callback is defined\n                if (this.current.idx === 0 && this.resetAnim)  {\n                    // If string, change to the corresponding animation\n                    if (typeof this.resetAnim === \"string\") {\n                        this.setCurrentAnimation(this.resetAnim, null, true);\n                    }\n                    // Otherwise is must be callable\n                    else if (this.resetAnim() === false) {\n                        // Reset to last frame\n                        this.setAnimationFrame(this.current.length - 1);\n\n                        // Bail early without skipping any more frames.\n                        this.dt %= duration;\n                        break;\n                    }\n                }\n\n                // Get next frame duration\n                duration = this.getAnimationFrameObjectByIndex(this.current.idx).delay;\n            }\n\n            return me.Sprite.prototype.update.apply(this, [ dt ]) || result;\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n(function () {\n    // some ref shortcut\n    var MIN = Math.min, MAX = Math.max;\n\n    /**\n     * a camera/viewport Object\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} minX start x offset\n     * @param {Number} minY start y offset\n     * @param {Number} maxX end x offset\n     * @param {Number} maxY end y offset\n     */\n    me.Viewport = me.Renderable.extend(\n    /** @scope me.Viewport.prototype */ {\n        /** @ignore */\n        init : function (minX, minY, maxX, maxY) {\n            me.Renderable.prototype.init.apply(this, [minX, minY, maxX - minX, maxY - minY]);\n\n            /**\n             * Axis definition\n             * @property NONE\n             * @property HORIZONTAL\n             * @property VERTICAL\n             * @property BOTH\n             * @public\n             * @constant\n             * @enum {Number}\n             * @name AXIS\n             * @memberOf me.Viewport\n             */\n            this.AXIS = {\n                NONE : 0,\n                HORIZONTAL : 1,\n                VERTICAL : 2,\n                BOTH : 3\n            };\n\n            /**\n             * Camera bounds\n             * @public\n             * @constant\n             * @type me.Rect\n             * @name bounds\n             * @memberOf me.Viewport\n             */\n            this.bounds = new me.Rect(-Infinity, -Infinity, Infinity, Infinity);\n\n            // offset for shake effect\n            this.offset = new me.Vector2d();\n\n            // target to follow\n            this.target = null;\n\n            // default value follow\n            this.follow_axis = this.AXIS.NONE;\n\n            // shake variables\n            this._shake = {\n                intensity : 0,\n                duration : 0,\n                axis : this.AXIS.BOTH,\n                onComplete : null\n            };\n\n            // flash variables\n            this._fadeOut = {\n                color : null,\n                duration : 0,\n                tween : null\n            };\n            // fade variables\n            this._fadeIn = {\n                color : null,\n                duration : 0,\n                tween : null\n            };\n\n            // set a default deadzone\n            this.setDeadzone(this.width / 6, this.height / 6);\n        },\n\n        // -- some private function ---\n\n        /** @ignore */\n        _followH : function (target) {\n            var _x = this.pos.x;\n            if ((target.x - this.pos.x) > (this.deadzone.right)) {\n                this.pos.x = ~~MIN((target.x) - (this.deadzone.right), this.bounds.width - this.width);\n            }\n            else if ((target.x - this.pos.x) < (this.deadzone.pos.x)) {\n                this.pos.x = ~~MAX((target.x) - this.deadzone.pos.x, this.bounds.pos.x);\n            }\n            return (_x !== this.pos.x);\n        },\n\n        /** @ignore */\n        _followV : function (target) {\n            var _y = this.pos.y;\n            if ((target.y - this.pos.y) > (this.deadzone.bottom)) {\n                this.pos.y = ~~MIN((target.y) - (this.deadzone.bottom),    this.bounds.height - this.height);\n            }\n            else if ((target.y - this.pos.y) < (this.deadzone.pos.y)) {\n                this.pos.y = ~~MAX((target.y) - this.deadzone.pos.y, this.bounds.pos.y);\n            }\n            return (_y !== this.pos.y);\n        },\n\n        // -- public function ---\n\n        /**\n         * reset the viewport to specified coordinates\n         * @name reset\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} [x=0]\n         * @param {Number} [y=0]\n         */\n        reset : function (x, y) {\n            // reset the initial viewport position to 0,0\n            this.pos.x = x || 0;\n            this.pos.y = y || 0;\n\n            // reset the target\n            this.target = null;\n\n            // reset default axis value for follow\n            this.follow_axis = null;\n        },\n\n        /**\n         * change the deadzone settings.\n         * the \"deadzone\" defines an area within the current viewport in which\n         * the followed entity can move without scrolling the viewport.\n         * @name setDeadzone\n         * @see me.Viewport.follow\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} w deadzone width\n         * @param {Number} h deadzone height\n         */\n        setDeadzone : function (w, h) {\n            if (typeof(this.deadzone) === \"undefined\") {\n                this.deadzone = new me.Rect(0, 0, 0, 0);\n            }\n\n            // reusing the old code for now...\n            this.deadzone.pos.set(\n                ~~((this.width - w) / 2),\n                ~~((this.height - h) / 2 - h * 0.25)\n            );\n            this.deadzone.resize(w, h);\n\n            // force a camera update\n            this.updateTarget();\n        },\n\n\n        /**\n         * resize the viewport\n         * @name resize\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} w new width of the viewport\n         * @param {Number} h new height of the viewport\n         * @return {me.Viewport} this viewport\n        */\n        resize : function (w, h) {\n            me.Renderable.prototype.resize.apply(this, [w, h]);\n            var level = me.levelDirector.getCurrentLevel();\n\n            this.setBounds(\n                0, 0,\n                Math.max(w, level ? level.width : 0),\n                Math.max(h, level ? level.height : 0)\n            );\n\n            this.setDeadzone(w / 6, h / 6);\n            this.moveTo(0, 0);\n            this.update();\n            me.event.publish(me.event.VIEWPORT_ONRESIZE, [ this.width, this.height ]);\n            return this;\n        },\n\n        /**\n         * set the viewport boundaries (set to the world limit by default).\n         * the viewport is bound to the given coordinates and cannot move/be scrolled outside of it.\n         * @name setBounds\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} x world left limit\n         * @param {Number} y world top limit\n         * @param {Number} w world width limit\n         * @param {Number} h world height limit\n         */\n        setBounds : function (x, y, w, h) {\n            this.bounds.pos.set(x, y);\n            this.bounds.resize(w, h);\n            this.moveTo(this.pos.x, this.pos.y);\n        },\n\n        /**\n         * set the viewport to follow the specified entity\n         * @name follow\n         * @memberOf me.Viewport\n         * @function\n         * @param {me.Entity|me.Vector2d} target Entity or Position\n         * Vector to follow\n         * @param {me.Viewport.AXIS} [axis=this.AXIS.BOTH] Which axis to follow\n         */\n        follow : function (target, axis) {\n            if (target instanceof me.Entity) {\n                this.target = target.pos;\n            }\n            else if ((target instanceof me.Vector2d) || (target instanceof me.Vector3d))  {\n                this.target = target;\n            }\n            else {\n                throw new me.Renderable.Error(\"invalid target for viewport.follow\");\n            }\n            // if axis is null, camera is moved on target center\n            this.follow_axis = (\n                typeof(axis) === \"undefined\" ? this.AXIS.BOTH : axis\n            );\n            // force a camera update\n            this.updateTarget();\n        },\n\n        /**\n         * move the viewport position by the specified offset\n         * @name move\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @example\n         * // Move the viewport up by four pixels\n         * me.game.viewport.move(0, -4);\n         */\n        move : function (x, y) {\n            this.moveTo(~~(this.pos.x + x), ~~(this.pos.y + y));\n        },\n\n        /**\n         * move the viewport to the specified coordinates\n         * @name moveTo\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         */\n\n        moveTo : function (x, y) {\n            this.pos.x = (~~x).clamp(\n                this.bounds.pos.x,\n                this.bounds.width - this.width\n            );\n            this.pos.y = (~~y).clamp(\n                this.bounds.pos.y,\n                this.bounds.height - this.height\n            );\n\n            //publish the corresponding message\n            me.event.publish(me.event.VIEWPORT_ONCHANGE, [this.pos]);\n        },\n\n        /** @ignore */\n        updateTarget : function () {\n            var updated = false;\n\n            if (this.target) {\n                switch (this.follow_axis) {\n                    case this.AXIS.NONE:\n                        //this.focusOn(this.target);\n                        break;\n\n                    case this.AXIS.HORIZONTAL:\n                        updated = this._followH(this.target);\n                        break;\n\n                    case this.AXIS.VERTICAL:\n                        updated = this._followV(this.target);\n                        break;\n\n                    case this.AXIS.BOTH:\n                        updated = this._followH(this.target);\n                        updated = this._followV(this.target) || updated;\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n\n            return updated;\n        },\n\n        /** @ignore */\n        update : function (dt) {\n            var updated = this.updateTarget();\n\n            if (this._shake.duration > 0) {\n                this._shake.duration -= dt;\n                if (this._shake.duration <= 0) {\n                    this._shake.duration = 0;\n                    this.offset.setZero();\n                    if (typeof(this._shake.onComplete) === \"function\") {\n                        this._shake.onComplete();\n                    }\n                }\n                else {\n                    if (this._shake.axis === this.AXIS.BOTH ||\n                        this._shake.axis === this.AXIS.HORIZONTAL) {\n                        this.offset.x = (Math.random() - 0.5) * this._shake.intensity;\n                    }\n                    if (this._shake.axis === this.AXIS.BOTH ||\n                        this._shake.axis === this.AXIS.VERTICAL) {\n                        this.offset.y = (Math.random() - 0.5) * this._shake.intensity;\n                    }\n                }\n                // updated!\n                updated = true;\n            }\n\n            if (updated === true) {\n                //publish the corresponding message\n                me.event.publish(me.event.VIEWPORT_ONCHANGE, [this.pos]);\n            }\n\n            // check for fade/flash effect\n            if ((this._fadeIn.tween != null) || (this._fadeOut.tween != null)) {\n                updated = true;\n            }\n\n            return updated;\n        },\n\n        /**\n         * shake the camera\n         * @name shake\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} intensity maximum offset that the screen can be moved\n         * while shaking\n         * @param {Number} duration expressed in milliseconds\n         * @param {me.Viewport.AXIS} [axis=this.AXIS.BOTH] specify on which axis you\n         *   want the shake effect\n         * @param {Function} [onComplete] callback once shaking effect is over\n         * @example\n         * // shake it baby !\n         * me.game.viewport.shake(10, 500, me.game.viewport.AXIS.BOTH);\n         */\n        shake : function (intensity, duration, axis, onComplete) {\n            if (this._shake.duration > 0) {\n                return;\n            }\n\n            this._shake = {\n                intensity : intensity,\n                duration : duration,\n                axis : axis || this.AXIS.BOTH,\n                onComplete : onComplete\n            };\n        },\n\n        /**\n         * fadeOut(flash) effect<p>\n         * screen is filled with the specified color and slowly goes back to normal\n         * @name fadeOut\n         * @memberOf me.Viewport\n         * @function\n         * @param {me.Color|String} color a CSS color value\n         * @param {Number} [duration=1000] expressed in milliseconds\n         * @param {Function} [onComplete] callback once effect is over\n         */\n        fadeOut : function (color, duration, onComplete) {\n            this._fadeOut.color = me.pool.pull(\"me.Color\").copy(color);\n            this._fadeOut.color.alpha = 1.0;\n            this._fadeOut.duration = duration || 1000; // convert to ms\n            this._fadeOut.tween = me.pool.pull(\"me.Tween\", this._fadeOut.color)\n                .to({ alpha: 0.0 }, this._fadeOut.duration)\n                .onComplete(onComplete || null);\n            this._fadeOut.tween.isPersistent = true;\n            this._fadeOut.tween.start();\n        },\n\n        /**\n         * fadeIn effect <p>\n         * fade to the specified color\n         * @name fadeIn\n         * @memberOf me.Viewport\n         * @function\n         * @param {me.Color|String} color a CSS color value\n         * @param {Number} [duration=1000] expressed in milliseconds\n         * @param {Function} [onComplete] callback once effect is over\n         */\n        fadeIn : function (color, duration, onComplete) {\n            this._fadeIn.color = me.pool.pull(\"me.Color\").copy(color);\n            this._fadeIn.color.alpha = 0.0;\n            this._fadeIn.duration = duration || 1000; //convert to ms\n            this._fadeIn.tween = me.pool.pull(\"me.Tween\", this._fadeIn.color)\n                .to({ alpha: 1.0 }, this._fadeIn.duration)\n                .onComplete(onComplete || null);\n            this._fadeIn.tween.isPersistent = true;\n            this._fadeIn.tween.start();\n        },\n\n        /**\n         * return the viewport width\n         * @name getWidth\n         * @memberOf me.Viewport\n         * @function\n         * @return {Number}\n         */\n        getWidth : function () {\n            return this.width;\n        },\n\n        /**\n         * return the viewport height\n         * @name getHeight\n         * @memberOf me.Viewport\n         * @function\n         * @return {Number}\n         */\n        getHeight : function () {\n            return this.height;\n        },\n\n        /**\n         * set the viewport position around the specified object\n         * @name focusOn\n         * @memberOf me.Viewport\n         * @function\n         * @param {me.Renderable}\n         */\n        focusOn : function (target) {\n            var bounds = target.getBounds();\n            this.moveTo(\n                target.pos.x + bounds.pos.x + (bounds.width / 2),\n                target.pos.y + bounds.pos.y + (bounds.height / 2)\n            );\n        },\n\n        /**\n         * check if the specified rectangle is in the viewport\n         * @name isVisible\n         * @memberOf me.Viewport\n         * @function\n         * @param {me.Rect} rect\n         * @return {Boolean}\n         */\n        isVisible : function (rect) {\n            return rect.overlaps(this);\n        },\n\n        /**\n         * convert the given \"local\" (screen) coordinates into world coordinates\n         * @name localToWorld\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} [v] an optional vector object where to set the\n         * converted value\n         * @return {me.Vector2d}\n         */\n        localToWorld : function (x, y, v) {\n            v = v || new me.Vector2d();\n            return (v.set(x, y)).add(this.pos).sub(me.game.world.pos);\n        },\n\n        /**\n         * convert the given world coordinates into \"local\" (screen) coordinates\n         * @name worldToLocal\n         * @memberOf me.Viewport\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} [v] an optional vector object where to set the\n         * converted value\n         * @return {me.Vector2d}\n         */\n        worldToLocal : function (x, y, v) {\n            v = v || new me.Vector2d();\n            return (v.set(x, y)).sub(this.pos).add(me.game.world.pos);\n        },\n\n        /**\n         * render the camera effects\n         * @ignore\n         */\n        draw : function () {\n            // fading effect\n            if (this._fadeIn.tween) {\n                me.video.renderer.clearSurface(null, this._fadeIn.color);\n                // remove the tween if over\n                if (this._fadeIn.color.alpha === 1.0) {\n                    this._fadeIn.tween = null;\n                    me.pool.push(this._fadeIn.color);\n                    this._fadeIn.color = null;\n                }\n            }\n\n            // flashing effect\n            if (this._fadeOut.tween) {\n                me.video.renderer.clearSurface(null, this._fadeOut.color);\n                // remove the tween if over\n                if (this._fadeOut.color.alpha === 0.0) {\n                    this._fadeOut.tween = null;\n                    me.pool.push(this._fadeOut.color);\n                    this._fadeOut.color = null;\n                }\n            }\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * GUI Object<br>\n     * A very basic object to manage GUI elements <br>\n     * The object simply register on the \"pointerdown\" <br>\n     * or \"touchstart\" event and call the onClick function\"\n     * @class\n     * @extends me.Sprite\n     * @memberOf me\n     * @constructor\n     * @param {Number} x the x coordinate of the GUI Object\n     * @param {Number} y the y coordinate of the GUI Object\n     * @param {Object} settings See {@link me.Entity}\n     * @example\n     *\n     * // create a basic GUI Object\n     * var myButton = me.GUI_Object.extend(\n     * {\n     *    init:function (x, y)\n     *    {\n     *       var settings = {}\n     *       settings.image = \"button\";\n     *       settings.framewidth = 100;\n     *       settings.frameheight = 50;\n     *       // super constructor\n     *       me.GUI_Object.prototype.init.apply(this, [x, y, settings]);\n     *       // define the object z order\n     *       this.pos.z = 4;\n     *    },\n     *\n     *    // output something in the console\n     *    // when the object is clicked\n     *    onClick:function (event)\n     *    {\n     *       console.log(\"clicked!\");\n     *       // don't propagate the event\n     *       return false;\n     *    }\n     * });\n     *\n     * // add the object at pos (10,10)\n     * me.game.world.addChild(new myButton(10,10));\n     *\n     */\n    me.GUI_Object = me.Sprite.extend({\n    /** @scope me.GUI_Object.prototype */\n\n        /**\n         * @ignore\n         */\n        init : function (x, y, settings) {\n            /**\n             * object can be clicked or not\n             * @public\n             * @type boolean\n             * @default true\n             * @name me.GUI_Object#isClickable\n             */\n            this.isClickable = true;\n\n            /**\n             * Tap and hold threshold timeout in ms\n             * @type {number}\n             * @default 250\n             * @name me.GUI_Object#holdThreshold\n             */\n            this.holdThreshold = 250;\n\n            /**\n             * object can be tap and hold\n             * @public\n             * @type boolean\n             * @default false\n             * @name me.GUI_Object#isHoldable\n             */\n            this.isHoldable = false;\n\n            /**\n             * true if the pointer is over the object\n             * @public\n             * @type boolean\n             * @default false\n             * @name me.GUI_Object#hover\n             */\n            this.hover = false;\n\n            // object has been updated (clicked,etc..)\n            this.holdTimeout = null;\n            this.updated = false;\n            this.released = true;\n\n            // call the parent constructor\n            me.Sprite.prototype.init.apply(this, [ x, y, settings ]);\n\n            // GUI items use screen coordinates\n            this.floating = true;\n        },\n\n        /**\n         * return true if the object has been clicked\n         * @ignore\n         */\n        update : function () {\n            if (this.updated) {\n                // clear the flag\n                if (!this.released) {\n                    this.updated = false;\n                }\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * function callback for the pointerdown event\n         * @ignore\n         */\n        clicked : function (event) {\n            // Check if left mouse button is pressed OR if device has touch\n            if ((event.which === 1 || me.device.touch) && this.isClickable) {\n                this.updated = true;\n                this.released = false;\n                if (this.isHoldable) {\n                    if (this.holdTimeout !== null) {\n                        me.timer.clearTimeout(this.holdTimeout);\n                    }\n                    this.holdTimeout = me.timer.setTimeout(this.hold.bind(this), this.holdThreshold, false);\n                    this.released = false;\n                }\n                return this.onClick(event);\n            }\n        },\n\n        /**\n         * function called when the object is pressed <br>\n         * to be extended <br>\n         * return false if we need to stop propagating the event\n         * @name onClick\n         * @memberOf me.GUI_Object\n         * @public\n         * @function\n         * @param {Event} event the event object\n         */\n        onClick : function (/* event */) {\n            return false;\n        },\n\n        /**\n         * function callback for the pointerEnter event\n         * @ignore\n         */\n        enter : function (event) {\n            this.hover = true;\n            return this.onOver(event);\n        },\n\n        /**\n         * function called when the pointer is over the object\n         * @name onOver\n         * @memberOf me.GUI_Object\n         * @public\n         * @function\n         * @param {Event} event the event object\n         */\n        onOver : function (/* event */) {},\n\n        /**\n         * function callback for the pointerLeave event\n         * @ignore\n         */\n        leave : function (event) {\n            this.hover = false;\n            this.release.call(this, event);\n            return this.onOut(event);\n        },\n\n        /**\n         * function called when the pointer is leaving the object area\n         * @name onOut\n         * @memberOf me.GUI_Object\n         * @public\n         * @function\n         * @param {Event} event the event object\n         */\n        onOut : function (/* event */) {},\n\n        /**\n         * function callback for the pointerup event\n         * @ignore\n         */\n        release : function (event) {\n            if (this.released === false) {\n                this.released = true;\n                me.timer.clearTimeout(this.holdTimeout);\n                return this.onRelease(event);\n            }\n        },\n\n        /**\n         * function called when the object is pressed and released <br>\n         * to be extended <br>\n         * return false if we need to stop propagating the event\n         * @name onRelease\n         * @memberOf me.GUI_Object\n         * @public\n         * @function\n         * @param {Event} event the event object\n         */\n        onRelease : function () {\n            return false;\n        },\n\n        /**\n         * function callback for the tap and hold timer event\n         * @ignore\n         */\n        hold : function () {\n            me.timer.clearTimeout(this.holdTimeout);\n            if (!this.released) {\n                this.onHold();\n            }\n        },\n\n        /**\n         * function called when the object is pressed and held<br>\n         * to be extended <br>\n         * @name onHold\n         * @memberOf me.GUI_Object\n         * @public\n         * @function\n         */\n        onHold : function () {},\n\n        /**\n         * function called when added to the game world or a container\n         * @ignore\n         */\n        onActivateEvent : function () {\n            // register pointer events\n            me.input.registerPointerEvent(\"pointerdown\", this, this.clicked.bind(this));\n            me.input.registerPointerEvent(\"pointerup\", this, this.release.bind(this));\n            me.input.registerPointerEvent(\"pointercancel\", this, this.release.bind(this));\n            me.input.registerPointerEvent(\"pointerenter\", this, this.enter.bind(this));\n            me.input.registerPointerEvent(\"pointerleave\", this, this.leave.bind(this));\n        },\n\n        /**\n         * function called when removed from the game world or a container\n         * @ignore\n         */\n        onDeactivateEvent : function () {\n            // release pointer events\n            me.input.releasePointerEvent(\"pointerdown\", this);\n            me.input.releasePointerEvent(\"pointerup\", this);\n            me.input.releasePointerEvent(\"pointercancel\", this);\n            me.input.releasePointerEvent(\"pointerenter\", this);\n            me.input.releasePointerEvent(\"pointerleave\", this);\n            me.timer.clearTimeout(this.holdTimeout);\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * Private function to re-use for object removal in a defer\n     * @ignore\n     */\n    var deferredRemove = function (child, keepalive) {\n        this.removeChildNow(child, keepalive);\n    };\n\n    var globalFloatingCounter = 0;\n\n    /**\n     * me.Container represents a collection of child objects\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} [x=0] position of the container\n     * @param {Number} [y=0] position of the container\n     * @param {Number} [w=me.game.viewport.width] width of the container\n     * @param {number} [h=me.game.viewport.height] height of the container\n     */\n    me.Container = me.Renderable.extend(\n    /** @scope me.Container.prototype */\n    {\n        /**\n         * constructor\n         * @ignore\n         */\n        init : function (x, y, width, height) {\n            /**\n             * keep track of pending sort\n             * @ignore\n             */\n            this.pendingSort = null;\n\n            // TODO; container do not have a physic body\n            // ADD child container child one by one to the quadtree?\n\n            /**\n             * the container default transformation matrix\n             * @public\n             * @type me.Matrix2d\n             * @name transform\n             * @memberOf me.Container\n             */\n            this.transform = new me.Matrix2d();\n\n            /**\n             * whether the container is the root of the scene\n             * @private\n             * @ignore\n             */\n            this._root = false;\n\n            // call the _super constructor\n            me.Renderable.prototype.init.apply(this,\n                [x || 0, y || 0,\n                width || Infinity,\n                height || Infinity]\n            );\n\n            /**\n             * The array of children of this container.\n             * @ignore\n             */\n            this.children = [];\n\n            /**\n             * The property of the child object that should be used to sort on <br>\n             * value : \"x\", \"y\", \"z\"\n             * @public\n             * @type String\n             * @default me.game.sortOn\n             * @name sortOn\n             * @memberOf me.Container\n             */\n            this.sortOn = me.game.sortOn;\n\n            /**\n             * Specify if the children list should be automatically sorted when adding a new child\n             * @public\n             * @type Boolean\n             * @default true\n             * @name autoSort\n             * @memberOf me.Container\n             */\n            this.autoSort = true;\n\n            /**\n             * Specify if the children z index should automatically be managed by the parent container\n             * @public\n             * @type Boolean\n             * @default true\n             * @name autoDepth\n             * @memberOf me.Container\n             */\n            this.autoDepth = true;\n\n            /**\n             * Used by the debug panel plugin\n             * @ignore\n             */\n            this.drawCount = 0;\n\n            /**\n             * The bounds that contains all its children\n             * @public\n             * @type me.Rect\n             * @name childBounds\n             * @memberOf me.Container\n             */\n            this.childBounds = this.getBounds().clone();\n\n            // reset the transformation matrix\n            this.transform.identity();\n        },\n\n\n        /**\n         * Add a child to the container <br>\n         * if auto-sort is disable, the object will be appended at the bottom of the list\n         * @name addChild\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         * @param {number} [z] forces the z index of the child to the specified value\n         * @return {me.Renderable} the added child\n         */\n        addChild : function (child, z) {\n            if (typeof(child.ancestor) !== \"undefined\") {\n                child.ancestor.removeChildNow(child);\n            }\n            else {\n                // only allocate a GUID if the object has no previous ancestor\n                // (e.g. move one child from one container to another)\n                if (child.isRenderable) {\n                    // allocated a GUID value (use child.id as based index if defined)\n                    child.GUID = me.utils.createGUID(child.id);\n                }\n            }\n\n            child.ancestor = this;\n            this.children.push(child);\n\n            // set the child z value if required\n            if (typeof(child.pos) !== \"undefined\") {\n                if (typeof(z) === \"number\") {\n                        child.pos.z = z;\n                } else if (this.autoDepth === true) {\n                    child.pos.z = this.children.length;\n                }\n            }\n\n            if (this.autoSort === true) {\n                this.sort();\n            }\n\n            if (typeof child.onActivateEvent === \"function\" && this.isAttachedToRoot()) {\n                child.onActivateEvent();\n            }\n\n            return child;\n        },\n\n        /**\n         * Add a child to the container at the specified index<br>\n         * (the list won't be sorted after insertion)\n         * @name addChildAt\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         * @param {Number} index\n         * @return {me.Renderable} the added child\n         */\n        addChildAt : function (child, index) {\n            if (index >= 0 && index < this.children.length) {\n                if (typeof(child.ancestor) !== \"undefined\") {\n                    child.ancestor.removeChildNow(child);\n                }\n                else {\n                    // only allocate a GUID if the object has no previous ancestor\n                    // (e.g. move one child from one container to another)\n                    if (child.isRenderable) {\n                        // allocated a GUID value\n                        child.GUID = me.utils.createGUID();\n                    }\n                }\n                child.ancestor = this;\n\n                this.children.splice(index, 0, child);\n\n                if (typeof child.onActivateEvent === \"function\" && this.isAttachedToRoot()) {\n                    child.onActivateEvent();\n                }\n\n                return child;\n            }\n            else {\n                throw new me.Container.Error(\"Index (\" + index + \") Out Of Bounds for addChildAt()\");\n            }\n        },\n\n        /**\n         * Swaps the position (z-index) of 2 children\n         * @name swapChildren\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         * @param {me.Renderable} child2\n         */\n        swapChildren : function (child, child2) {\n            var index = this.getChildIndex(child);\n            var index2 = this.getChildIndex(child2);\n\n            if ((index !== -1) && (index2 !== -1)) {\n                // swap z index\n                var _z = child.pos.z;\n                child.pos.z = child2.pos.z;\n                child2.pos.z = _z;\n                // swap the positions..\n                this.children[index] = child2;\n                this.children[index2] = child;\n            }\n            else {\n                throw new me.Container.Error(child + \" Both the supplied childs must be a child of the caller \" + this);\n            }\n        },\n\n        /**\n         * Returns the Child at the specified index\n         * @name getChildAt\n         * @memberOf me.Container\n         * @function\n         * @param {Number} index\n         */\n        getChildAt : function (index) {\n            if (index >= 0 && index < this.children.length) {\n                return this.children[index];\n            }\n            else {\n                throw new me.Container.Error(\"Index (\" + index + \") Out Of Bounds for getChildAt()\");\n            }\n        },\n\n        /**\n         * Returns the index of the Child\n         * @name getChildAt\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         */\n        getChildIndex : function (child) {\n            return this.children.indexOf(child);\n        },\n\n        /**\n         * Returns true if contains the specified Child\n         * @name hasChild\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         * @return {Boolean}\n         */\n        hasChild : function (child) {\n            return this === child.ancestor;\n        },\n\n        /**\n         * return the child corresponding to the given property and value.<br>\n         * note : avoid calling this function every frame since\n         * it parses the whole object tree each time\n         * @name getChildByProp\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {String} prop Property name\n         * @param {String|RegExp|Number|Boolean} value Value of the property\n         * @return {me.Renderable[]} Array of childs\n         * @example\n         * // get the first child object called \"mainPlayer\" in a specific container :\n         * var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n         *\n         * // or query the whole world :\n         * var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n         *\n         * // partial property matches are also allowed by using a RegExp.\n         * // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n         * var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n         *\n         * // searching for numbers or other data types :\n         * var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n         * var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n         */\n        getChildByProp : function (prop, value)    {\n            var objList = [];\n\n            function compare(obj, prop) {\n                var v = obj[prop];\n                if (value instanceof RegExp && typeof(v) === \"string\") {\n                    if (value.test(v)) {\n                        objList.push(obj);\n                    }\n                }\n                else if (v === value) {\n                    objList.push(obj);\n                }\n            }\n\n            for (var i = this.children.length - 1; i >= 0; i--) {\n                var obj = this.children[i];\n                compare(obj, prop);\n                if (obj instanceof me.Container) {\n                    objList = objList.concat(obj.getChildByProp(prop, value));\n                }\n            }\n            return objList;\n        },\n\n        /**\n         * returns the list of childs with the specified class type\n         * @name getChildByType\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {Object} class type\n         * @return {me.Renderable[]} Array of children\n         */\n        getChildByType : function (_class) {\n            var objList = [];\n\n            for (var i = this.children.length - 1; i >= 0; i--) {\n                var obj = this.children[i];\n                if (obj instanceof _class) {\n                    objList.push(obj);\n                }\n                if (obj instanceof me.Container) {\n                    objList = objList.concat(obj.getChildByType(_class));\n                }\n            }\n            return objList;\n        },\n\n        /**\n         * returns the list of childs with the specified name<br>\n         * as defined in Tiled (Name field of the Object Properties)<br>\n         * note : avoid calling this function every frame since\n         * it parses the whole object list each time\n         * @name getChildByName\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {String|RegExp|Number|Boolean} name entity name\n         * @return {me.Renderable[]} Array of children\n         */\n        getChildByName : function (name) {\n            return this.getChildByProp(\"name\", name);\n        },\n\n        /**\n         * return the child corresponding to the specified GUID<br>\n         * note : avoid calling this function every frame since\n         * it parses the whole object list each time\n         * @name getChildByGUID\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {String|RegExp|Number|Boolean} GUID entity GUID\n         * @return {me.Renderable} corresponding child or null\n         */\n        getChildByGUID : function (guid) {\n            var obj = this.getChildByProp(\"GUID\", guid);\n            return (obj.length > 0) ? obj[0] : null;\n        },\n\n        /**\n         * resizes the child bounds rectangle, based on children bounds.\n         * @name updateChildBounds\n         * @memberOf me.Container\n         * @function\n         * @return {me.Rect} updated child bounds\n         */\n        updateChildBounds : function () {\n            this.childBounds.pos.set(Infinity, Infinity);\n            this.childBounds.resize(-Infinity, -Infinity);\n            var childBounds;\n            for (var i = this.children.length, child; i--, (child = this.children[i]);) {\n                if (child.isRenderable) {\n                    if (child instanceof me.Container) {\n                        childBounds = child.childBounds;\n                    }\n                    else {\n                        childBounds = child.getBounds();\n                    }\n                    // TODO : returns an \"empty\" rect instead of null (e.g. EntityObject)\n                    // TODO : getBounds should always return something anyway\n                    if (childBounds !== null) {\n                        this.childBounds.union(childBounds);\n                    }\n                }\n            }\n            return this.childBounds;\n        },\n\n        /**\n         * Checks if this container is root or if ti's attached to the root container.\n         * @private\n         * @name isAttachedToRoot\n         * @memberOf me.Container\n         * @function\n         * @returns Boolean\n         */\n        isAttachedToRoot : function () {\n            if (this._root) {\n                return true;\n            } else {\n                var ancestor = this.ancestor;\n                while (ancestor) {\n                    if (ancestor._root === true) {\n                        return true;\n                    }\n                    ancestor = ancestor.ancestor;\n                }\n                return false;\n            }\n        },\n\n        /**\n         * update the renderable's bounding rect (private)\n         * @private\n         * @name updateBoundsPos\n         * @memberOf me.Container\n         * @function\n         */\n        updateBoundsPos : function (newX, newY) {\n            me.Renderable.prototype.updateBoundsPos.apply(this, [ newX, newY ]);\n\n            // Update container's absolute position\n            this._absPos.set(newX, newY);\n            if (this.ancestor) {\n                this._absPos.add(this.ancestor._absPos);\n            }\n\n            // Notify children that the parent's position has changed\n            for (var i = this.children.length, child; i--, (child = this.children[i]);) {\n                if (child.isRenderable) {\n                    child.updateBoundsPos(child.pos.x, child.pos.y);\n                }\n            }\n\n            return this._bounds;\n        },\n\n        onActivateEvent : function () {\n          for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n              var child = this.children[i];\n              if (typeof child.onActivateEvent === \"function\") {\n                  child.onActivateEvent();\n              }\n          }\n        },\n\n        /**\n         * Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update & draw stack has completed\n         * @name removeChild\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {me.Renderable} child\n         * @param {Boolean} [keepalive=False] True to prevent calling child.destroy()\n         */\n        removeChild : function (child, keepalive) {\n            if (child.ancestor) {\n                deferredRemove.defer(this, child, keepalive);\n            }\n        },\n\n\n        /**\n         * Removes (and optionally destroys) a child from the container.<br>\n         * (removal is immediate and unconditional)<br>\n         * Never use keepalive=true with objects from {@link me.pool}. Doing so will create a memory leak.\n         * @name removeChildNow\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         * @param {Boolean} [keepalive=False] True to prevent calling child.destroy()\n         */\n        removeChildNow : function (child, keepalive) {\n            var childIndex = -1;\n            if (this.hasChild(child) && ((childIndex = this.getChildIndex(child)) >= 0)) {\n                child.ancestor = undefined;\n\n                if (typeof child.onDeactivateEvent === \"function\") {\n                    child.onDeactivateEvent();\n                }\n\n                if (!keepalive) {\n                    if (typeof (child.destroy) === \"function\") {\n                        child.destroy();\n                    }\n\n                    me.pool.push(child);\n                }\n\n                this.children.splice(childIndex, 1);\n            }\n            else {\n                throw new me.Container.Error(child + \" The supplied child must be a child of the caller \" + this);\n            }\n        },\n\n        /**\n         * Automatically set the specified property of all childs to the given value\n         * @name setChildsProperty\n         * @memberOf me.Container\n         * @function\n         * @param {String} property property name\n         * @param {Object} value property value\n         * @param {Boolean} [recursive=false] recursively apply the value to child containers if true\n         */\n        setChildsProperty : function (prop, val, recursive) {\n            for (var i = this.children.length; i >= 0; i--) {\n                var obj = this.children[i];\n                if ((recursive === true) && (obj instanceof me.Container)) {\n                    obj.setChildsProperty(prop, val, recursive);\n                }\n                obj[prop] = val;\n            }\n        },\n\n        /**\n         * Move the child in the group one step forward (z depth).\n         * @name moveUp\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         */\n        moveUp : function (child) {\n            var childIndex = this.getChildIndex(child);\n            if (childIndex - 1 >= 0) {\n                // note : we use an inverted loop\n                this.swapChildren(child, this.getChildAt(childIndex - 1));\n            }\n        },\n\n        /**\n         * Move the child in the group one step backward (z depth).\n         * @name moveDown\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         */\n        moveDown : function (child) {\n            var childIndex = this.getChildIndex(child);\n            if (childIndex >= 0 && (childIndex + 1) < this.children.length) {\n                // note : we use an inverted loop\n                this.swapChildren(child, this.getChildAt(childIndex + 1));\n            }\n        },\n\n        /**\n         * Move the specified child to the top(z depth).\n         * @name moveToTop\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         */\n        moveToTop : function (child) {\n            var childIndex = this.getChildIndex(child);\n            if (childIndex > 0) {\n                // note : we use an inverted loop\n                this.children.splice(0, 0, this.children.splice(childIndex, 1)[0]);\n                // increment our child z value based on the previous child depth\n                child.pos.z = this.children[1].pos.z + 1;\n            }\n        },\n\n        /**\n         * Move the specified child the bottom (z depth).\n         * @name moveToBottom\n         * @memberOf me.Container\n         * @function\n         * @param {me.Renderable} child\n         */\n        moveToBottom : function (child) {\n            var childIndex = this.getChildIndex(child);\n            if (childIndex >= 0 && childIndex < (this.children.length - 1)) {\n                // note : we use an inverted loop\n                this.children.splice((this.children.length - 1), 0, this.children.splice(childIndex, 1)[0]);\n                // increment our child z value based on the next child depth\n                child.pos.z = this.children[(this.children.length - 2)].pos.z - 1;\n            }\n        },\n\n        /**\n         * Manually trigger the sort of all the childs in the container</p>\n         * @name sort\n         * @memberOf me.Container\n         * @public\n         * @function\n         * @param {Boolean} [recursive=false] recursively sort all containers if true\n         */\n        sort : function (recursive) {\n            // do nothing if there is already a pending sort\n            if (!this.pendingSort) {\n                if (recursive === true) {\n                    // trigger other child container sort function (if any)\n                    for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n                        if (obj instanceof me.Container) {\n                            // note : this will generate one defered sorting function\n                            // for each existing containe\n                            obj.sort(recursive);\n                        }\n                    }\n                }\n                /** @ignore */\n                this.pendingSort = function (self) {\n                    // sort everything in this container\n                    self.children.sort(self[\"_sort\" + self.sortOn.toUpperCase()]);\n                    // clear the defer id\n                    self.pendingSort = null;\n                    // make sure we redraw everything\n                    me.game.repaint();\n                }.defer(this, this);\n            }\n        },\n\n        onDeactivateEvent : function () {\n            for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n                var child = this.children[i];\n                if (typeof child.onDeactivateEvent === \"function\") {\n                    child.onDeactivateEvent();\n                }\n            }\n        },\n\n        /**\n         * Z Sorting function\n         * @ignore\n         */\n        _sortZ : function (a, b) {\n            return (b.pos && a.pos) ? (b.pos.z - a.pos.z) : (a.pos ? -Infinity : Infinity);\n        },\n\n        /**\n         * Reverse Z Sorting function\n         * @ignore\n         */\n        _sortReverseZ : function (a, b) {\n            return (a.pos && b.pos) ? (a.pos.z - b.pos.z) : (a.pos ? Infinity : -Infinity);\n        },\n\n        /**\n         * X Sorting function\n         * @ignore\n         */\n        _sortX : function (a, b) {\n            if (!b.pos || !a.pos) {\n                return (a.pos ? -Infinity : Infinity);\n            }\n            var result = b.pos.z - a.pos.z;\n            return (result ? result : (b.pos.x - a.pos.x));\n        },\n\n        /**\n         * Y Sorting function\n         * @ignore\n         */\n        _sortY : function (a, b) {\n            if (!b.pos || !a.pos) {\n                return (a.pos ? -Infinity : Infinity);\n            }\n            var result = b.pos.z - a.pos.z;\n            return (result ? result : (b.pos.y - a.pos.y));\n        },\n\n        /**\n         * Destroy function<br>\n         * @ignore\n         */\n        destroy : function () {\n            // cancel any sort operation\n            if (this.pendingSort) {\n                clearTimeout(this.pendingSort);\n                this.pendingSort = null;\n            }\n\n            // delete all children\n            for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n                // don't remove it if a persistent object\n                if (!obj.isPersistent) {\n                    this.removeChildNow(obj);\n                }\n            }\n\n            // reset the transformation matrix\n            this.transform.identity();\n        },\n\n        /**\n         * @ignore\n         */\n        update : function (dt) {\n            me.Renderable.prototype.update.apply(this, [dt]);\n            var isDirty = false;\n            var isFloating = false;\n            var isPaused = me.state.isPaused();\n            var viewport = me.game.viewport;\n\n            // Update container's absolute position\n            this._absPos.setV(this.pos);\n            if (this.ancestor) {\n                this._absPos.add(this.ancestor._absPos);\n            }\n\n            for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n                if (isPaused && (!obj.updateWhenPaused)) {\n                    // skip this object\n                    continue;\n                }\n\n                if (obj.isRenderable) {\n                    isFloating = (globalFloatingCounter > 0 || obj.floating);\n                    if (isFloating) {\n                        globalFloatingCounter++;\n                    }\n                    // check if object is visible\n                    obj.inViewport = isFloating || viewport.isVisible(obj.getBounds());\n\n                    // update our object\n                    isDirty = ((obj.inViewport || obj.alwaysUpdate) && obj.update(dt)) || isDirty;\n\n                    // Update child's absolute position\n                    obj._absPos.setV(this._absPos).add(obj.pos);\n\n                    if (globalFloatingCounter > 0) {\n                        globalFloatingCounter--;\n                    }\n                }\n                else {\n                    // just directly call update() for non renderable object\n                    isDirty = obj.update(dt) || isDirty;\n                }\n            }\n\n            return isDirty;\n        },\n\n        /**\n         * @ignore\n         */\n        draw : function (renderer, rect) {\n            var isFloating = false,\n                restore = false,\n                alpha = renderer.globalAlpha();\n\n            this.drawCount = 0;\n\n            if (this.transform.isIdentity()) {\n                renderer.translate(this.pos.x, this.pos.y);\n            }\n            else {\n                restore = true;\n                renderer.save();\n                renderer.transform(this.transform);\n            }\n\n            // apply the group opacity\n            renderer.setGlobalAlpha(alpha * this.getOpacity());\n\n            for (var i = this.children.length, obj; i--, (obj = this.children[i]);) {\n                isFloating = obj.floating;\n                if ((obj.inViewport || isFloating) && obj.isRenderable) {\n                    if (isFloating) {\n                        // translate to screen coordinates\n                        renderer.save();\n                        renderer.resetTransform();\n                    }\n\n                    // draw the object\n                    obj.draw(renderer, rect);\n\n                    if (isFloating) {\n                        renderer.restore();\n                    }\n\n                    this.drawCount++;\n                }\n            }\n\n            if (restore) {\n                renderer.restore();\n            }\n            else {\n                renderer.translate(-this.pos.x, -this.pos.y);\n                renderer.setGlobalAlpha(alpha);\n            }\n        }\n    });\n\n    /**\n     * Base class for ObjectContainer exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Container\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Container.Error = me.Renderable.Error.extend({\n        init : function (msg) {\n            me.Renderable.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Container.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n(function () {\n\n    /**\n     * a Generic Object Entity<br>\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} x the x coordinates of the entity object\n     * @param {Number} y the y coordinates of the entity object\n     * @param {Object} settings Entity properties, to be defined through Tiled or when calling the entity constructor\n     * <img src=\"images/object_properties.png\"/>\n     * @param {String} [settings.name] object entity name\n     * @param {String} [settings.id] object unique IDs\n     * @param {Image|String} [settings.image] resource name of a spritesheet to use for the entity renderable component\n     * @param {Number} [settings.framewidth] width of a single frame in the given spritesheet\n     * @param {Number} [settings.frameheight] height of a single frame in the given spritesheet\n     * @param {String} [settings.type] object type\n     * @param {Number} [settings.collisionMask] Mask collision detection for this object\n     * @param {{me.Rect[],me.Polygon[],me.Line[],me.Ellipse[]}} [settings.shapes] the initial list of collision shapes (usually populated through Tiled)\n     */\n    me.Entity = me.Renderable.extend(\n    /** @scope me.Entity.prototype */\n    {\n        /** @ignore */\n        init : function (x, y, settings) {\n\n            /**\n             * The entity renderable object (if defined)\n             * @public\n             * @type me.Renderable\n             * @name renderable\n             * @memberOf me.Entity\n             */\n            this.renderable = null;\n\n            // ensure mandatory properties are defined\n            if ((typeof settings.width !== \"number\") || (typeof settings.height !== \"number\")) {\n                throw new me.Entity.Error(\"height and width properties are mandatory when passing settings parameters to an object entity\");\n            }\n\n            // call the super constructor\n            me.Renderable.prototype.init.apply(this, [x, y,\n                        settings.width,\n                        settings.height]);\n\n            if (settings.image) {\n                this.renderable = new me.AnimationSheet(0, 0, {\n                    \"image\" : settings.image,\n                    \"framewidth\" : ~~(settings.framewidth || settings.width),\n                    \"frameheight\" : ~~(settings.frameheight || settings.height),\n                    \"spacing\" : ~~settings.spacing,\n                    \"margin\" : ~~settings.margin,\n                    \"anchorPoint\" : settings.anchorPoint,\n                });\n            }\n\n            // Update anchorPoint\n            if (settings.anchorPoint) {\n                this.anchorPoint.set(settings.anchorPoint.x, settings.anchorPoint.y);\n            }\n\n            /**\n             * Entity name<br>\n             * as defined in the Tiled Object Properties\n             * @public\n             * @type String\n             * @name name\n             * @memberOf me.Entity\n             */\n            this.name = settings.name || \"\";\n\n            /**\n             * object type (as defined in Tiled)\n             * @public\n             * @type String\n             * @name type\n             * @memberOf me.Entity\n             */\n            this.type = settings.type || \"\";\n\n            /**\n             * object unique ID (as defined in Tiled)\n             * @public\n             * @type Number\n             * @name id\n             * @memberOf me.Entity\n             */\n            this.id = settings.id || \"\";\n\n            /**\n             * dead/living state of the entity<br>\n             * default value : true\n             * @public\n             * @type Boolean\n             * @name alive\n             * @memberOf me.Entity\n             */\n            this.alive = true;\n\n            /**\n             * the entity body object\n             * @public\n             * @type me.Body\n             * @name body\n             * @memberOf me.Entity\n             */\n            // initialize the default body\n            var shapes = (\n                Array.isArray(settings.shapes) ?\n                settings.shapes :\n                [ new me.Rect(0, 0, this.width, this.height) ]\n            );\n            if (this.body) {\n                this.body.init(this, shapes);\n            }\n            else {\n                this.body = new me.Body(this, shapes);\n            }\n\n            // ensure the entity bounds and pos are up-to-date\n            var bounds = this.body.updateBounds();\n\n            // resize the entity if required\n            if (this.width === 0 && this.height === 0) {\n                this.resize(bounds.width, bounds.height);\n            }\n\n            // set the  collision mask if defined\n            if (typeof(settings.collisionMask) !== \"undefined\") {\n                this.body.setCollisionMask(settings.collisionMask);\n            }\n\n            // set the  collision mask if defined\n            if (typeof(settings.collisionType) !== \"undefined\") {\n                if (typeof me.collision.types[settings.collisionType] !== \"undefined\") {\n                    this.body.collisionType = me.collision.types[settings.collisionType];\n                } else {\n                    throw new me.Entity.Error(\"Invalid value for the collisionType property\");\n                }\n            }\n        },\n\n        /**\n         * return the distance to the specified entity\n         * @name distanceTo\n         * @memberOf me.Entity\n         * @function\n         * @param {me.Entity} entity Entity\n         * @return {Number} distance\n         */\n        distanceTo: function (e) {\n            var a = this.getBounds();\n            var b = e.getBounds();\n            // the me.Vector2d object also implements the same function, but\n            // we have to use here the center of both entities\n            var dx = (a.pos.x + (a.width / 2))  - (b.pos.x + (b.width / 2));\n            var dy = (a.pos.y + (a.height / 2)) - (b.pos.y + (b.height / 2));\n            return Math.sqrt(dx * dx + dy * dy);\n        },\n\n        /**\n         * return the distance to the specified point\n         * @name distanceToPoint\n         * @memberOf me.Entity\n         * @function\n         * @param {me.Vector2d} vector vector\n         * @return {Number} distance\n         */\n        distanceToPoint: function (v) {\n            var a = this.getBounds();\n            // the me.Vector2d object also implements the same function, but\n            // we have to use here the center of both entities\n            var dx = (a.pos.x + (a.width / 2))  - (v.x);\n            var dy = (a.pos.y + (a.height / 2)) - (v.y);\n            return Math.sqrt(dx * dx + dy * dy);\n        },\n\n        /**\n         * return the angle to the specified entity\n         * @name angleTo\n         * @memberOf me.Entity\n         * @function\n         * @param {me.Entity} entity Entity\n         * @return {Number} angle in radians\n         */\n        angleTo: function (e) {\n            var a = this.getBounds();\n            var b = e.getBounds();\n            // the me.Vector2d object also implements the same function, but\n            // we have to use here the center of both entities\n            var ax = (b.pos.x + (b.width / 2)) - (a.pos.x + (a.width / 2));\n            var ay = (b.pos.y + (b.height / 2)) - (a.pos.y + (a.height / 2));\n            return Math.atan2(ay, ax);\n        },\n\n        /**\n         * return the angle to the specified point\n         * @name angleToPoint\n         * @memberOf me.Entity\n         * @function\n         * @param {me.Vector2d} vector vector\n         * @return {Number} angle in radians\n         */\n        angleToPoint: function (v) {\n            var a = this.getBounds();\n            // the me.Vector2d object also implements the same function, but\n            // we have to use here the center of both entities\n            var ax = (v.x) - (a.pos.x + (a.width / 2));\n            var ay = (v.y) - (a.pos.y + (a.height / 2));\n            return Math.atan2(ay, ax);\n        },\n\n        /**\n         * update the bounding rect dimensions\n         * @private\n         * @name resizeBounds\n         * @memberOf me.Entity\n         * @function\n         */\n        resizeBounds : function (width, height) {\n            this._bounds.resize(width, height);\n        },\n\n        /** @ignore */\n        update : function (dt) {\n            if (this.renderable) {\n                return this.renderable.update(dt);\n            }\n            return me.Renderable.prototype.update.apply(this, [dt]);\n        },\n\n        /**\n         * update the bounds position when the position is modified\n         * @private\n         * @name updateBoundsPos\n         * @memberOf me.Entity\n         * @function\n         */\n        updateBoundsPos : function (x, y) {\n            var _pos = this.body.pos;\n            me.Renderable.prototype.updateBoundsPos.apply(this, [\n                x + _pos.x,\n                y + _pos.y\n            ]);\n            return this._bounds;\n        },\n\n        /**\n         * update the bounds position when the body is modified\n         * @private\n         * @name onBodyUpdate\n         * @memberOf me.Entity\n         * @function\n         */\n        onBodyUpdate : function (pos, w, h) {\n            this._bounds.pos.setV(this.pos).add(pos);\n            // XXX: This is called from the constructor, before it gets an ancestor\n            if (this.ancestor) {\n                this._bounds.pos.add(this.ancestor._absPos);\n            }\n            this._bounds.resize(w, h);\n        },\n\n        /**\n         * object draw<br>\n         * not to be called by the end user<br>\n         * called by the game manager on each game loop\n         * @name draw\n         * @memberOf me.Entity\n         * @function\n         * @protected\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer a renderer object\n         **/\n        draw : function (renderer) {\n            // draw the sprite if defined\n            if (this.renderable) {\n\n                // draw the renderable's anchorPoint at the entity's anchor point\n                // the entity's anchor point is a scale from body position to body width/height\n                var x = ~~( 0.5 + this.pos.x + this.body.pos.x +\n                    (this.anchorPoint.x * this.body.width));\n                var y = ~~( 0.5 + this.pos.y + this.body.pos.y +\n                    (this.anchorPoint.y * this.body.height));\n\n                renderer.translate(x, y);\n                this.renderable.draw(renderer);\n                renderer.translate(-x, -y);\n            }\n        },\n\n        /**\n         * Destroy function<br>\n         * @ignore\n         */\n        destroy : function () {\n            // free some property objects\n            if (this.renderable) {\n                this.renderable.destroy.apply(this.renderable, arguments);\n                this.renderable = null;\n            }\n            this.body.destroy.apply(this.body, arguments);\n            this.body = null;\n        },\n\n        /**\n         * onDeactivateEvent Notification function<br>\n         * Called by engine before deleting the object\n         * @name onDeactivateEvent\n         * @memberOf me.Entity\n         * @function\n         */\n        onDeactivateEvent : function () {\n          if (this.renderable && this.renderable.onDeactivateEvent) {\n              this.renderable.onDeactivateEvent();\n          }\n        },\n\n        /**\n         * onCollision callback<br>\n         * triggered in case of collision, when this entity body is being \"touched\" by another one<br>\n         * @name onCollision\n         * @memberOf me.Entity\n         * @function\n         * @param {me.collision.ResponseObject} response the collision response object\n         * @param {me.Entity} other the other entity touching this one (a reference to response.a or response.b)\n         * @return {Boolean} true if the object should respond to the collision (its position and velocity will be corrected)\n         */\n        onCollision : function () {\n            return false;\n        }\n    });\n\n    /**\n     * Base class for Entity exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Entity\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Entity.Error = me.Renderable.Error.extend({\n        init : function (msg) {\n            me.Renderable.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Entity.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Screens objects & State machine\n *\n */\n\n(function () {\n    /**\n     * A class skeleton for \"Screen\" Object <br>\n     * every \"screen\" object (title screen, credits, ingame, etc...) to be managed <br>\n     * through the state manager must inherit from this base class.\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @see me.state\n     */\n    me.ScreenObject = me.Object.extend(\n    /** @scope me.ScreenObject.prototype */\n    {\n        /** @ignore */\n        init: function () {},\n\n        /**\n         * Object reset function\n         * @ignore\n         */\n        reset : function () {\n            // reset the game manager\n            me.game.reset();\n            // call the onReset Function\n            this.onResetEvent.apply(this, arguments);\n        },\n\n        /**\n         * destroy function\n         * @ignore\n         */\n        destroy : function () {\n            // notify the object\n            this.onDestroyEvent.apply(this, arguments);\n        },\n\n        /**\n         * onResetEvent function<br>\n         * called by the state manager when reseting the object<br>\n         * this is typically where you will load a level, etc...\n         * to be extended\n         * @name onResetEvent\n         * @memberOf me.ScreenObject\n         * @function\n         * @param {} [arguments...] optional arguments passed when switching state\n         * @see me.state#change\n         */\n        onResetEvent : function () {\n            // to be extended\n        },\n\n        /**\n         * onDestroyEvent function<br>\n         * called by the state manager before switching to another state<br>\n         * @name onDestroyEvent\n         * @memberOf me.ScreenObject\n         * @function\n         */\n        onDestroyEvent : function () {\n            // to be extended\n        }\n    });\n\n    // based on the requestAnimationFrame polyfill by Erik Möller\n    (function () {\n        var lastTime = 0;\n        var frameDuration = 1000 / 60;\n        // get unprefixed rAF and cAF, if present\n        var requestAnimationFrame = me.agent.prefixed(\"requestAnimationFrame\");\n        var cancelAnimationFrame = me.agent.prefixed(\"cancelAnimationFrame\") ||\n                                   me.agent.prefixed(\"cancelRequestAnimationFrame\");\n\n        if (!requestAnimationFrame || !cancelAnimationFrame) {\n            requestAnimationFrame = function (callback) {\n                var currTime = window.performance.now();\n                var timeToCall = Math.max(0, frameDuration - (currTime - lastTime));\n                var id = window.setTimeout(function () {\n                    callback(currTime + timeToCall);\n                }, timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n\n            cancelAnimationFrame = function (id) {\n                window.clearTimeout(id);\n            };\n        }\n\n         // put back in global namespace\n        window.requestAnimationFrame = requestAnimationFrame;\n        window.cancelAnimationFrame = cancelAnimationFrame;\n    }());\n\n\n    /**\n     * a State Manager (state machine)<p>\n     * There is no constructor function for me.state.\n     * @namespace me.state\n     * @memberOf me\n     */\n\n    me.state = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        /*-------------------------------------------\n            PRIVATE STUFF\n         --------------------------------------------*/\n\n        // current state\n        var _state = -1;\n\n        // requestAnimeFrame Id\n        var _animFrameId = -1;\n\n        // whether the game state is \"paused\"\n        var _isPaused = false;\n\n        // list of screenObject\n        var _screenObject = {};\n\n        // fading transition parameters between screen\n        var _fade = {\n            color : \"\",\n            duration : 0\n        };\n\n        // callback when state switch is done\n        /** @ignore */\n        var _onSwitchComplete = null;\n\n        // just to keep track of possible extra arguments\n        var _extraArgs = null;\n\n        // store the elapsed time during pause/stop period\n        var _pauseTime = 0;\n\n        /**\n         * @ignore\n         */\n        function _startRunLoop() {\n            // ensure nothing is running first and in valid state\n            if ((_animFrameId === -1) && (_state !== -1)) {\n                // reset the timer\n                me.timer.reset();\n\n                // start the main loop\n                _animFrameId = window.requestAnimationFrame(_renderFrame);\n            }\n        }\n\n        /**\n         * Resume the game loop after a pause.\n         * @ignore\n         */\n        function _resumeRunLoop() {\n            // ensure game is actually paused and in valid state\n            if (_isPaused && (_state !== -1)) {\n                // reset the timer\n                me.timer.reset();\n\n                _isPaused = false;\n            }\n        }\n\n        /**\n         * Pause the loop for most screen objects.\n         * @ignore\n         */\n        function _pauseRunLoop() {\n            // Set the paused boolean to stop updates on (most) entities\n            _isPaused = true;\n        }\n\n        /**\n         * this is only called when using requestAnimFrame stuff\n         * @param {Number} time current timestamp in milliseconds\n         * @ignore\n         */\n        function _renderFrame(time) {\n            // update all game objects\n            me.game.update(time);\n            // render all game objects\n            me.game.draw();\n            // schedule the next frame update\n            if (_animFrameId !== -1) {\n                _animFrameId = window.requestAnimationFrame(_renderFrame);\n            }\n        }\n\n        /**\n         * stop the SO main loop\n         * @ignore\n         */\n        function _stopRunLoop() {\n            // cancel any previous animationRequestFrame\n            window.cancelAnimationFrame(_animFrameId);\n            _animFrameId = -1;\n        }\n\n        /**\n         * start the SO main loop\n         * @ignore\n         */\n        function _switchState(state) {\n            // clear previous interval if any\n            _stopRunLoop();\n\n            // call the screen object destroy method\n            if (_screenObject[_state]) {\n                // just notify the object\n                _screenObject[_state].screen.destroy();\n            }\n\n            if (_screenObject[state]) {\n                // set the global variable\n                _state = state;\n\n                // call the reset function with _extraArgs as arguments\n                _screenObject[_state].screen.reset.apply(_screenObject[_state].screen, _extraArgs);\n\n                // and start the main loop of the\n                // new requested state\n                _startRunLoop();\n\n                // execute callback if defined\n                if (_onSwitchComplete) {\n                    _onSwitchComplete();\n                }\n\n                // force repaint\n                me.game.repaint();\n            }\n        }\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * default state ID for Loading Screen\n         * @constant\n         * @name LOADING\n         * @memberOf me.state\n         */\n        api.LOADING = 0;\n\n        /**\n         * default state ID for Menu Screen\n         * @constant\n         * @name MENU\n         * @memberOf me.state\n         */\n\n        api.MENU = 1;\n        /**\n         * default state ID for \"Ready\" Screen\n         * @constant\n         * @name READY\n         * @memberOf me.state\n         */\n\n        api.READY = 2;\n        /**\n         * default state ID for Play Screen\n         * @constant\n         * @name PLAY\n         * @memberOf me.state\n         */\n\n        api.PLAY = 3;\n        /**\n         * default state ID for Game Over Screen\n         * @constant\n         * @name GAMEOVER\n         * @memberOf me.state\n         */\n\n        api.GAMEOVER = 4;\n        /**\n         * default state ID for Game End Screen\n         * @constant\n         * @name GAME_END\n         * @memberOf me.state\n         */\n\n        api.GAME_END = 5;\n        /**\n         * default state ID for High Score Screen\n         * @constant\n         * @name SCORE\n         * @memberOf me.state\n         */\n\n        api.SCORE = 6;\n        /**\n         * default state ID for Credits Screen\n         * @constant\n         * @name CREDITS\n         * @memberOf me.state\n         */\n\n        api.CREDITS = 7;\n        /**\n         * default state ID for Settings Screen\n         * @constant\n         * @name SETTINGS\n         * @memberOf me.state\n         */\n        api.SETTINGS = 8;\n\n        /**\n         * default state ID for user defined constants<br>\n         * @constant\n         * @name USER\n         * @memberOf me.state\n         * @example\n         * var STATE_INFO = me.state.USER + 0;\n         * var STATE_WARN = me.state.USER + 1;\n         * var STATE_ERROR = me.state.USER + 2;\n         * var STATE_CUTSCENE = me.state.USER + 3;\n         */\n        api.USER = 100;\n\n        /**\n         * onPause callback\n         * @callback\n         * @name onPause\n         * @memberOf me.state\n         */\n        api.onPause = null;\n\n        /**\n         * onResume callback\n         * @callback\n         * @name onResume\n         * @memberOf me.state\n         */\n        api.onResume = null;\n\n        /**\n         * onStop callback\n         * @callback\n         * @name onStop\n         * @memberOf me.state\n         */\n        api.onStop = null;\n\n        /**\n         * onRestart callback\n         * @callback\n         * @name onRestart\n         * @memberOf me.state\n         */\n        api.onRestart = null;\n\n        /**\n         * @ignore\n         */\n        api.init = function () {\n            // set the embedded loading screen\n            api.set(api.LOADING, new me.DefaultLoadingScreen());\n        };\n\n        /**\n         * Stop the current screen object.\n         * @name stop\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Boolean} pauseTrack pause current track on screen stop.\n         */\n        api.stop = function (music) {\n            // only stop when we are not loading stuff\n            if ((_state !== api.LOADING) && api.isRunning()) {\n                // stop the main loop\n                _stopRunLoop();\n                // current music stop\n                if (music === true) {\n                    me.audio.pauseTrack();\n                }\n\n                // store time when stopped\n                _pauseTime = window.performance.now();\n\n                // publish the stop notification\n                me.event.publish(me.event.STATE_STOP);\n                // any callback defined ?\n                if (typeof(api.onStop) === \"function\") {\n                    api.onStop();\n                }\n            }\n        };\n\n        /**\n         * pause the current screen object\n         * @name pause\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Boolean} pauseTrack pause current track on screen pause\n         */\n        api.pause = function (music) {\n            // only pause when we are not loading stuff\n            if ((_state !== api.LOADING) && !api.isPaused()) {\n                // stop the main loop\n                _pauseRunLoop();\n                // current music stop\n                if (music === true) {\n                    me.audio.pauseTrack();\n                }\n\n                // store time when paused\n                _pauseTime = window.performance.now();\n\n                // publish the pause event\n                me.event.publish(me.event.STATE_PAUSE);\n                // any callback defined ?\n                if (typeof(api.onPause) === \"function\") {\n                    api.onPause();\n                }\n            }\n        };\n\n        /**\n         * Restart the screen object from a full stop.\n         * @name restart\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Boolean} resumeTrack resume current track on screen resume\n         */\n        api.restart = function (music) {\n            if (!api.isRunning()) {\n                // restart the main loop\n                _startRunLoop();\n                // current music stop\n                if (music === true) {\n                    me.audio.resumeTrack();\n                }\n\n                // calculate the elpased time\n                _pauseTime = window.performance.now() - _pauseTime;\n\n                // force repaint\n                me.game.repaint();\n\n                // publish the restart notification\n                me.event.publish(me.event.STATE_RESTART, [ _pauseTime ]);\n                // any callback defined ?\n                if (typeof(api.onRestart) === \"function\") {\n                    api.onRestart();\n                }\n            }\n        };\n\n        /**\n         * resume the screen object\n         * @name resume\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Boolean} resumeTrack resume current track on screen resume\n         */\n        api.resume = function (music) {\n            if (api.isPaused()) {\n                // resume the main loop\n                _resumeRunLoop();\n                // current music stop\n                if (music === true) {\n                    me.audio.resumeTrack();\n                }\n\n                // calculate the elpased time\n                _pauseTime = window.performance.now() - _pauseTime;\n\n                // publish the resume event\n                me.event.publish(me.event.STATE_RESUME, [ _pauseTime ]);\n                // any callback defined ?\n                if (typeof(api.onResume) === \"function\") {\n                    api.onResume();\n                }\n            }\n        };\n\n        /**\n         * return the running state of the state manager\n         * @name isRunning\n         * @memberOf me.state\n         * @public\n         * @function\n         * @return {Boolean} true if a \"process is running\"\n         */\n        api.isRunning = function () {\n            return _animFrameId !== -1;\n        };\n\n        /**\n         * Return the pause state of the state manager\n         * @name isPaused\n         * @memberOf me.state\n         * @public\n         * @function\n         * @return {Boolean} true if the game is paused\n         */\n        api.isPaused = function () {\n            return _isPaused;\n        };\n\n        /**\n         * associate the specified state with a screen object\n         * @name set\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Number} state State ID (see constants)\n         * @param {me.ScreenObject} so Instantiated ScreenObject to associate\n         * with state ID\n         * @example\n         * var MenuButton = me.GUI_Object.extend({\n         *     \"onClick\" : function () {\n         *         // Change to the PLAY state when the button is clicked\n         *         me.state.change(me.state.PLAY);\n         *         return true;\n         *     }\n         * });\n         *\n         * var MenuScreen = me.ScreenObject.extend({\n         *     onResetEvent: function() {\n         *         // Load background image\n         *         me.game.world.addChild(\n         *             new me.ImageLayer(0, 0, {\n         *                 image : \"bg\",\n         *                 z: 0 // z-index\n         *             }\n         *         );\n         *\n         *         // Add a button\n         *         me.game.world.addChild(\n         *             new MenuButton(350, 200, { \"image\" : \"start\" }),\n         *             1 // z-index\n         *         );\n         *\n         *         // Play music\n         *         me.audio.playTrack(\"menu\");\n         *     },\n         *\n         *     \"onDestroyEvent\" : function () {\n         *         // Stop music\n         *         me.audio.stopTrack();\n         *     }\n         * });\n         *\n         * me.state.set(me.state.MENU, new MenuScreen());\n         */\n        api.set = function (state, so) {\n            _screenObject[state] = {};\n            _screenObject[state].screen = so;\n            _screenObject[state].transition = true;\n        };\n\n        /**\n         * return a reference to the current screen object<br>\n         * useful to call a object specific method\n         * @name current\n         * @memberOf me.state\n         * @public\n         * @function\n         * @return {me.ScreenObject}\n         */\n        api.current = function () {\n            return _screenObject[_state].screen;\n        };\n\n        /**\n         * specify a global transition effect\n         * @name transition\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {String} effect (only \"fade\" is supported for now)\n         * @param {me.Color|String} color a CSS color value\n         * @param {Number} [duration=1000] expressed in milliseconds\n         */\n        api.transition = function (effect, color, duration) {\n            if (effect === \"fade\") {\n                _fade.color = color;\n                _fade.duration = duration;\n            }\n        };\n\n        /**\n         * enable/disable transition for a specific state (by default enabled for all)\n         * @name setTransition\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Number} state State ID (see constants)\n         * @param {Boolean} enable\n         */\n        api.setTransition = function (state, enable) {\n            _screenObject[state].transition = enable;\n        };\n\n        /**\n         * change the game/app state\n         * @name change\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Number} state State ID (see constants)\n         * @param {} [arguments...] extra arguments to be passed to the reset functions\n         * @example\n         * // The onResetEvent method on the play screen will receive two args:\n         * // \"level_1\" and the number 3\n         * me.state.change(me.state.PLAY, \"level_1\", 3);\n         */\n        api.change = function (state) {\n            // Protect against undefined ScreenObject\n            if (typeof(_screenObject[state]) === \"undefined\") {\n                throw new me.Error(\"Undefined ScreenObject for state '\" + state + \"'\");\n            }\n\n            _extraArgs = null;\n            if (arguments.length > 1) {\n                // store extra arguments if any\n                _extraArgs = Array.prototype.slice.call(arguments, 1);\n            }\n            // if fading effect\n            if (_fade.duration && _screenObject[state].transition) {\n                /** @ignore */\n                _onSwitchComplete = function () {\n                    me.game.viewport.fadeOut(_fade.color, _fade.duration);\n                };\n                me.game.viewport.fadeIn(\n                    _fade.color,\n                    _fade.duration,\n                    function () {\n                        _switchState.defer(this, state);\n                    }\n                );\n\n            }\n            // else just switch without any effects\n            else {\n                // wait for the last frame to be\n                // \"finished\" before switching\n                _switchState.defer(this, state);\n            }\n        };\n\n        /**\n         * return true if the specified state is the current one\n         * @name isCurrent\n         * @memberOf me.state\n         * @public\n         * @function\n         * @param {Number} state State ID (see constants)\n         */\n        api.isCurrent = function (state) {\n            return _state === state;\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n(function () {\n    // a basic progress bar object\n    var ProgressBar = me.Renderable.extend({\n\n        init: function (v, w, h) {\n            me.Renderable.prototype.init.apply(this, [v.x, v.y, w, h]);\n            // flag to know if we need to refresh the display\n            this.invalidate = false;\n\n            // default progress bar height\n            this.barHeight = 4;\n\n            // current progress\n            this.progress = 0;\n        },\n\n        // make sure the screen is refreshed every frame\n        onProgressUpdate : function (progress) {\n            this.progress = ~~(progress * this.width);\n            this.invalidate = true;\n        },\n\n        // make sure the screen is refreshed every frame\n        update : function () {\n            if (this.invalidate === true) {\n                // clear the flag\n                this.invalidate = false;\n                // and return true\n                return true;\n            }\n            // else return false\n            return false;\n        },\n\n         // draw function\n        draw : function (renderer) {\n            // draw the progress bar\n            renderer.setColor(\"black\");\n            renderer.fillRect(0, (this.height / 2) - (this.barHeight / 2), this.width, this.barHeight);\n\n            renderer.setColor(\"#55aa00\");\n            renderer.fillRect(2, (this.height / 2) - (this.barHeight / 2), this.progress, this.barHeight);\n\n            renderer.setColor(\"white\");\n        }\n    });\n\n    // the melonJS Logo\n    var IconLogo = me.Renderable.extend({\n        init : function (iconCanvas, x, y) {\n            me.Renderable.prototype.init.apply(this, [x, y, 100, 85]);\n\n            this.iconCanvas = iconCanvas;\n\n            var context = me.video.renderer.getContext2d(this.iconCanvas);\n\n            context.translate(this.pos.x, this.pos.y);\n            context.beginPath();\n            context.moveTo(0.7, 48.9);\n            context.bezierCurveTo(10.8, 68.9, 38.4, 75.8, 62.2, 64.5);\n            context.bezierCurveTo(86.1, 53.1, 97.2, 27.7, 87.0, 7.7);\n            context.lineTo(87.0, 7.7);\n            context.bezierCurveTo(89.9, 15.4, 73.9, 30.2, 50.5, 41.4);\n            context.bezierCurveTo(27.1, 52.5, 5.2, 55.8, 0.7, 48.9);\n            context.lineTo(0.7, 48.9);\n            context.lineTo(0.7, 48.9);\n            context.closePath();\n            context.fillStyle = \"rgb(255, 255, 255)\";\n            context.fill();\n\n            context.beginPath();\n            context.moveTo(84.0, 7.0);\n            context.bezierCurveTo(87.6, 14.7, 72.5, 30.2, 50.2, 41.6);\n            context.bezierCurveTo(27.9, 53.0, 6.9, 55.9, 3.2, 48.2);\n            context.bezierCurveTo(-0.5, 40.4, 14.6, 24.9, 36.9, 13.5);\n            context.bezierCurveTo(59.2, 2.2, 80.3, -0.8, 84.0, 7.0);\n            context.lineTo(84.0, 7.0);\n            context.closePath();\n            context.lineWidth = 5.3;\n            context.strokeStyle = \"rgb(255, 255, 255)\";\n            context.lineJoin = \"miter\";\n            context.miterLimit = 4.0;\n            context.stroke();\n        },\n\n        draw : function (renderer) {\n            renderer.drawImage(this.iconCanvas, 0, 0);\n        }\n    });\n\n    // the melonJS Text Logo\n    var TextLogo = me.Renderable.extend({\n        // constructor\n        init : function (w, h) {\n            me.Renderable.prototype.init.apply(this, [0, 0, w, h]);\n            this.logo1 = new me.Font(\"century gothic\", 32, \"white\", \"middle\");\n            this.logo2 = new me.Font(\"century gothic\", 32, \"#55aa00\", \"middle\");\n            this.logo2.bold();\n            this.logo1.textBaseline = this.logo2.textBaseline = \"alphabetic\";\n        },\n\n        draw : function (renderer) {\n            // measure the logo size\n            var logo1_width = this.logo1.measureText(renderer, \"melon\").width;\n            var xpos = (this.width - logo1_width - this.logo2.measureText(renderer, \"JS\").width) / 2;\n            var ypos = (this.height / 2) + (this.logo2.measureText(renderer, \"melon\").height);\n\n            // draw the melonJS string\n            this.logo1.draw(renderer, \"melon\", xpos, ypos);\n            xpos += logo1_width;\n            this.logo2.draw(renderer, \"JS\", xpos, ypos);\n        }\n\n    });\n\n    /**\n     * a default loading screen\n     * @memberOf me\n     * @ignore\n     * @constructor\n     */\n    me.DefaultLoadingScreen = me.ScreenObject.extend({\n        // call when the loader is resetted\n        onResetEvent : function () {\n            // background color\n            me.game.world.addChild(new me.ColorLayer(\"background\", \"#202020\", 0), 0);\n\n            // progress bar\n            var progressBar = new ProgressBar(\n                new me.Vector2d(),\n                me.video.renderer.getWidth(),\n                me.video.renderer.getHeight()\n            );\n\n            this.loaderHdlr = me.event.subscribe(\n                me.event.LOADER_PROGRESS,\n                progressBar.onProgressUpdate.bind(progressBar)\n            );\n\n            this.resizeHdlr = me.event.subscribe(\n                me.event.VIEWPORT_ONRESIZE,\n                progressBar.resize.bind(progressBar)\n            );\n\n            me.game.world.addChild(progressBar, 1);\n            this.iconCanvas = me.video.createCanvas(me.game.viewport.width, me.game.viewport.height, false);\n            // melonJS text & logo\n            var icon = new IconLogo(\n                this.iconCanvas,\n                (me.video.renderer.getWidth() - 100) / 2,\n                (me.video.renderer.getHeight() / 2) - (progressBar.barHeight / 2) - 90\n            );\n            me.game.world.addChild(icon, 1);\n            me.game.world.addChild(new TextLogo(me.video.renderer.getWidth(), me.video.renderer.getHeight()), 1);\n        },\n\n        // destroy object at end of loading\n        onDestroyEvent : function () {\n            // cancel the callback\n            me.event.unsubscribe(this.loaderHdlr);\n            me.event.unsubscribe(this.resizeHdlr);\n            this.loaderHdlr = this.resizeHdlr = null;\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a small class to manage loading of stuff and manage resources\n     * There is no constructor function for me.input.\n     * @namespace me.loader\n     * @memberOf me\n     */\n    me.loader = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        // contains all the images loaded\n        var imgList = {};\n        // contains all the TMX loaded\n        var tmxList = {};\n        // contains all the binary files loaded\n        var binList = {};\n        // contains all the JSON files\n        var jsonList = {};\n        // flag to check loading status\n        var resourceCount = 0;\n        var loadCount = 0;\n        var timerId = 0;\n\n        /**\n         * check the loading status\n         * @ignore\n         */\n        function checkLoadStatus() {\n            if (loadCount === resourceCount) {\n                // wait 1/2s and execute callback (cheap workaround to ensure everything is loaded)\n                if (api.onload) {\n                    // make sure we clear the timer\n                    clearTimeout(timerId);\n                    // trigger the onload callback\n                    setTimeout(function () {\n                        api.onload();\n                        me.event.publish(me.event.LOADER_COMPLETE);\n                    }, 300);\n                }\n                else {\n                    console.error(\"no load callback defined\");\n                }\n            }\n            else {\n                timerId = setTimeout(checkLoadStatus, 100);\n            }\n        }\n\n        /**\n         * load Images\n         * @example\n         * preloadImages([\n         *     { name : 'image1', src : 'images/image1.png'},\n         *     { name : 'image2', src : 'images/image2.png'},\n         *     { name : 'image3', src : 'images/image3.png'},\n         *     { name : 'image4', src : 'images/image4.png'}\n         * ]);\n         * @ignore\n         */\n        function preloadImage(img, onload, onerror) {\n            // create new Image object and add to list\n            imgList[img.name] = new Image();\n            imgList[img.name].onload = onload;\n            imgList[img.name].onerror = onerror;\n            imgList[img.name].src = img.src + api.nocache;\n        }\n\n        /**\n         * preload TMX files\n         * @ignore\n         */\n        function preloadTMX(tmxData, onload, onerror) {\n            function addToTMXList(data) {\n                // set the TMX content\n                tmxList[tmxData.name] = data;\n\n                // add the tmx to the levelDirector\n                if (tmxData.type === \"tmx\") {\n                    me.levelDirector.addTMXLevel(tmxData.name);\n                }\n            }\n\n\n            //if the data is in the tmxData object, don't get it via a XMLHTTPRequest\n            if (tmxData.data) {\n                addToTMXList(tmxData.data);\n                onload();\n                return;\n            }\n\n            var xmlhttp = new XMLHttpRequest();\n            // check the data format ('tmx', 'json')\n            var format = me.utils.getFileExtension(tmxData.src);\n\n            if (xmlhttp.overrideMimeType) {\n                if (format === \"json\") {\n                    xmlhttp.overrideMimeType(\"application/json\");\n                }\n                else {\n                    xmlhttp.overrideMimeType(\"text/xml\");\n                }\n            }\n\n            xmlhttp.open(\"GET\", tmxData.src + api.nocache, true);\n\n\n            // set the callbacks\n            xmlhttp.ontimeout = onerror;\n            xmlhttp.onreadystatechange = function () {\n                if (xmlhttp.readyState === 4) {\n                    // status = 0 when file protocol is used, or cross-domain origin,\n                    // (With Chrome use \"--allow-file-access-from-files --disable-web-security\")\n                    if ((xmlhttp.status === 200) || ((xmlhttp.status === 0) && xmlhttp.responseText)) {\n                        var result = null;\n\n                        // parse response\n                        switch (format) {\n                            case \"xml\":\n                            case \"tmx\":\n                            case \"tsx\":\n                                // ie9 does not fully implement the responseXML\n                                if (me.device.ua.match(/msie/i) || !xmlhttp.responseXML) {\n                                    if (window.DOMParser) {\n                                        // manually create the XML DOM\n                                        result = (new DOMParser()).parseFromString(xmlhttp.responseText, \"text/xml\");\n                                    } else {\n                                        throw new api.Error(\"XML file format loading not supported, use the JSON file format instead\");\n                                    }\n                                }\n                                else {\n                                    result = xmlhttp.responseXML;\n                                }\n                                // converts to a JS object\n                                var data = me.TMXUtils.parse(result);\n                                switch (format) {\n                                    case \"tmx\":\n                                        result = data.map;\n                                        break;\n\n                                    case \"tsx\":\n                                        result = data.tilesets[0];\n                                        break;\n                                }\n\n                                break;\n\n                            case \"json\":\n                                result = JSON.parse(xmlhttp.responseText);\n                                break;\n\n                            default:\n                                throw new api.Error(\"TMX file format \" + format + \"not supported !\");\n                        }\n\n                        //set the TMX content\n                        addToTMXList(result);\n\n                        // fire the callback\n                        onload();\n                    }\n                    else {\n                        onerror();\n                    }\n                }\n            };\n            // send the request\n            xmlhttp.send(null);\n        }\n\n        /**\n         * preload TMX files\n         * @ignore\n         */\n        function preloadJSON(data, onload, onerror) {\n            var xmlhttp = new XMLHttpRequest();\n\n            if (xmlhttp.overrideMimeType) {\n                xmlhttp.overrideMimeType(\"application/json\");\n            }\n\n            xmlhttp.open(\"GET\", data.src + api.nocache, true);\n\n            // set the callbacks\n            xmlhttp.ontimeout = onerror;\n            xmlhttp.onreadystatechange = function () {\n                if (xmlhttp.readyState === 4) {\n                    // status = 0 when file protocol is used, or cross-domain origin,\n                    // (With Chrome use \"--allow-file-access-from-files --disable-web-security\")\n                    if ((xmlhttp.status === 200) || ((xmlhttp.status === 0) && xmlhttp.responseText)) {\n                        // get the Texture Packer Atlas content\n                        jsonList[data.name] = JSON.parse(xmlhttp.responseText);\n                        // fire the callback\n                        onload();\n                    }\n                    else {\n                        onerror();\n                    }\n                }\n            };\n            // send the request\n            xmlhttp.send(null);\n        }\n\n        /**\n         * preload Binary files\n         * @ignore\n         */\n        function preloadBinary(data, onload, onerror) {\n            var httpReq = new XMLHttpRequest();\n\n            // load our file\n            httpReq.open(\"GET\", data.src + api.nocache, true);\n            httpReq.responseType = \"arraybuffer\";\n            httpReq.onerror = onerror;\n            httpReq.onload = function () {\n                var arrayBuffer = httpReq.response;\n                if (arrayBuffer) {\n                    var byteArray = new Uint8Array(arrayBuffer);\n                    var buffer = [];\n                    for (var i = 0; i < byteArray.byteLength; i++) {\n                        buffer[i] = String.fromCharCode(byteArray[i]);\n                    }\n                    binList[data.name] = buffer.join(\"\");\n                    // callback\n                    onload();\n                }\n            };\n            httpReq.send();\n        }\n\n        /**\n         * to enable/disable caching\n         * @ignore\n         */\n        api.nocache = \"\";\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * onload callback\n         * @public\n         * @callback\n         * @name onload\n         * @memberOf me.loader\n         * @example\n         * // set a callback when everything is loaded\n         * me.loader.onload = this.loaded.bind(this);\n         */\n        api.onload = undefined;\n\n        /**\n         * onProgress callback<br>\n         * each time a resource is loaded, the loader will fire the specified function,\n         * giving the actual progress [0 ... 1], as argument, and an object describing the resource loaded\n         * @public\n         * @callback\n         * @name onProgress\n         * @memberOf me.loader\n         * @example\n         * // set a callback for progress notification\n         * me.loader.onProgress = this.updateProgress.bind(this);\n         */\n        api.onProgress = undefined;\n\n        /**\n         * Base class for Loader exception handling.\n         * @name Error\n         * @class\n         * @memberOf me.loader\n         * @constructor\n         * @param {String} msg Error message.\n         */\n        api.Error = me.Error.extend({\n            init : function (msg) {\n                me.Error.prototype.init.apply(this, [ msg ]);\n                this.name = \"me.loader.Error\";\n            }\n        });\n\n        /**\n         * just increment the number of already loaded resources\n         * @ignore\n         */\n        api.onResourceLoaded = function (res) {\n            // increment the loading counter\n            loadCount++;\n\n            // callback ?\n            var progress = api.getLoadProgress();\n            if (api.onProgress) {\n                // pass the load progress in percent, as parameter\n                api.onProgress(progress, res);\n            }\n            me.event.publish(me.event.LOADER_PROGRESS, [progress, res]);\n        };\n\n        /**\n         * on error callback for image loading\n         * @ignore\n         */\n        api.onLoadingError = function (res) {\n            throw new api.Error(\"Failed loading resource \" + res.src);\n        };\n\n        /**\n         * enable the nocache mechanism\n         * @ignore\n         */\n        api.setNocache = function (enable) {\n            api.nocache = enable ? \"?\" + ~~(Math.random() * 10000000) : \"\";\n        };\n\n\n        /**\n         * set all the specified game resources to be preloaded.<br>\n         * each resource item must contain the following fields :<br>\n         * - name    : internal name of the resource<br>\n         * - type    : \"binary\", \"image\", \"tmx\", \"tsx\", \"audio\"<br>\n         * each resource except type \"tmx\" must contain the following field :<br>\n         * - src     : path and file name of the resource<br>\n         * (!) for tmx :<br>\n         * - src     : path and file name of the resource<br>\n         * or<br>\n         * - data    : the json or xml object representation of the tmx file<br>\n         * - format  : \"xml\" or \"json\"<br>\n         * (!) for audio :<br>\n         * - src     : path (only) where resources are located<br>\n         * <br>\n         * @name preload\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {Object[]} resources\n         * @example\n         * var g_resources = [\n         *   // PNG tileset\n         *   {name: \"tileset-platformer\", type: \"image\",  src: \"data/map/tileset.png\"},\n         *   // PNG packed texture\n         *   {name: \"texture\", type:\"image\", src: \"data/gfx/texture.png\"}\n         *   // TSX file\n         *   {name: \"meta_tiles\", type: \"tsx\", src: \"data/map/meta_tiles.tsx\"},\n         *   // TMX level (XML & JSON)\n         *   {name: \"map1\", type: \"tmx\", src: \"data/map/map1.json\"},\n         *   {name: \"map2\", type: \"tmx\", src: \"data/map/map2.tmx\"},\n         *   {name: \"map3\", type: \"tmx\", format: \"json\", data: {\"height\":15,\"layers\":[...],\"tilewidth\":32,\"version\":1,\"width\":20}},\n         *   {name: \"map4\", type: \"tmx\", format: \"xml\", data: {xml representation of tmx}},\n         *   // audio resources\n         *   {name: \"bgmusic\", type: \"audio\",  src: \"data/audio/\"},\n         *   {name: \"cling\",   type: \"audio\",  src: \"data/audio/\"},\n         *   // binary file\n         *   {name: \"ymTrack\", type: \"binary\", src: \"data/audio/main.ym\"},\n         *   // JSON file (used for texturePacker)\n         *   {name: \"texture\", type: \"json\", src: \"data/gfx/texture.json\"}\n         * ];\n         *\n         * // set all resources to be loaded\n         * me.loader.preload(g_resources);\n         */\n        api.preload = function (res) {\n            // parse the resources\n            for (var i = 0; i < res.length; i++) {\n                resourceCount += api.load(\n                    res[i],\n                    api.onResourceLoaded.bind(api, res[i]),\n                    api.onLoadingError.bind(api, res[i])\n                );\n            }\n            // check load status\n            checkLoadStatus();\n        };\n\n        /**\n         * Load a single resource (to be used if you need to load additional resource during the game)<br>\n         * Given parameter must contain the following fields :<br>\n         * - name    : internal name of the resource<br>\n         * - type    : \"audio\", binary\", \"image\", \"json\", \"tmx\", \"tsx\"<br>\n         * each resource except type \"tmx\" must contain the following field :<br>\n         * - src     : path and file name of the resource<br>\n         * (!) for tmx :<br>\n         * - src     : path and file name of the resource<br>\n         * or<br>\n         * - data    : the json or xml object representation of the tmx file<br>\n         * - format  : \"xml\" or \"json\"<br>\n         * (!) for audio :<br>\n         * - src     : path (only) where resources are located<br>\n         * @name load\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {Object} resource\n         * @param {Function} onload function to be called when the resource is loaded\n         * @param {Function} onerror function to be called in case of error\n         * @example\n         * // load an image asset\n         * me.loader.load({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"}, this.onload.bind(this), this.onerror.bind(this));\n         *\n         * // start loading music\n         * me.loader.load({\n         *     name   : \"bgmusic\",\n         *     type   : \"audio\",\n         *     src    : \"data/audio/\"\n         * }, function () {\n         *     me.audio.play(\"bgmusic\");\n         * });\n         */\n        api.load = function (res, onload, onerror) {\n            // check ressource type\n            switch (res.type) {\n                case \"binary\":\n                    // reuse the preloadImage fn\n                    preloadBinary.call(this, res, onload, onerror);\n                    return 1;\n\n                case \"image\":\n                    // reuse the preloadImage fn\n                    preloadImage.call(this, res, onload, onerror);\n                    return 1;\n\n                case \"json\":\n                    preloadJSON.call(this, res, onload, onerror);\n                    return 1;\n\n                case \"tmx\":\n                case \"tsx\":\n                    preloadTMX.call(this, res, onload, onerror);\n                    return 1;\n\n                case \"audio\":\n                    me.audio.load(res, onload, onerror);\n                    return 1;\n\n                default:\n                    throw new api.Error(\"load : unknown or invalid resource type : \" + res.type);\n            }\n        };\n\n        /**\n         * unload specified resource to free memory\n         * @name unload\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {Object} resource\n         * @return {Boolean} true if unloaded\n         * @example me.loader.unload({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"});\n         */\n        api.unload = function (res) {\n            switch (res.type) {\n                case \"binary\":\n                    if (!(res.name in binList)) {\n                        return false;\n                    }\n\n                    delete binList[res.name];\n                    return true;\n\n                case \"image\":\n                    if (!(res.name in imgList)) {\n                        return false;\n                    }\n                    if (typeof(imgList[res.name].dispose) === \"function\") {\n                        // cocoonJS implements a dispose function to free\n                        // corresponding allocated texture in memory\n                        imgList[res.name].dispose();\n                    }\n                    delete imgList[res.name];\n                    return true;\n\n                case \"json\":\n                    if (!(res.name in jsonList)) {\n                        return false;\n                    }\n\n                    delete jsonList[res.name];\n                    return true;\n\n                case \"tmx\":\n                case \"tsx\":\n                    if (!(res.name in tmxList)) {\n                        return false;\n                    }\n\n                    delete tmxList[res.name];\n                    return true;\n\n                case \"audio\":\n                    return me.audio.unload(res.name);\n\n                default:\n                    throw new api.Error(\"unload : unknown or invalid resource type : \" + res.type);\n            }\n        };\n\n        /**\n         * unload all resources to free memory\n         * @name unloadAll\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @example me.loader.unloadAll();\n         */\n        api.unloadAll = function () {\n            var name;\n\n            // unload all binary resources\n            for (name in binList) {\n                if (binList.hasOwnProperty(name)) {\n                    api.unload({\n                        \"name\" : name,\n                        \"type\" : \"binary\"\n                    });\n                }\n            }\n\n            // unload all image resources\n            for (name in imgList) {\n                if (imgList.hasOwnProperty(name)) {\n                    api.unload({\n                        \"name\" : name,\n                        \"type\" : \"image\"\n                    });\n                }\n            }\n\n            // unload all tmx resources\n            for (name in tmxList) {\n                if (tmxList.hasOwnProperty(name)) {\n                    api.unload({\n                        \"name\" : name,\n                        \"type\" : \"tmx\"\n                    });\n                }\n            }\n\n            // unload all in json resources\n            for (name in jsonList) {\n                if (jsonList.hasOwnProperty(name)) {\n                    api.unload({\n                        \"name\" : name,\n                        \"type\" : \"json\"\n                    });\n                }\n            }\n\n            // unload all audio resources\n            me.audio.unloadAll();\n        };\n\n        /**\n         * return the specified TMX/TSX object\n         * @name getTMX\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {String} tmx name of the tmx/tsx element (\"map1\");\n         * @return {XML|Object}\n         */\n        api.getTMX = function (elt) {\n            // force as string\n            elt = \"\" + elt;\n            if (elt in tmxList) {\n                return tmxList[elt];\n            }\n            else {\n                //console.log (\"warning %s resource not yet loaded!\",name);\n                return null;\n            }\n        };\n\n        /**\n         * return the specified Binary object\n         * @name getBinary\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {String} name of the binary object (\"ymTrack\");\n         * @return {Object}\n         */\n        api.getBinary = function (elt) {\n            // force as string\n            elt = \"\" + elt;\n            if (elt in binList) {\n                return binList[elt];\n            }\n            else {\n                //console.log (\"warning %s resource not yet loaded!\",name);\n                return null;\n            }\n\n        };\n\n        /**\n         * return the specified Image Object\n         * @name getImage\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {String} Image name of the Image element (\"tileset-platformer\");\n         * @return {Image}\n         */\n        api.getImage = function (elt) {\n            // force as string\n            elt = \"\" + elt;\n            if (elt in imgList) {\n                // return the corresponding Image object\n                return imgList[elt];\n            }\n            else {\n                //console.log (\"warning %s resource not yet loaded!\",name);\n                return null;\n            }\n\n        };\n\n        /**\n         * return the specified JSON Object\n         * @name getJSON\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @param {String} Name for the json file to load\n         * @return {Object}\n         */\n        api.getJSON = function (elt) {\n            // force as string\n            elt = \"\" + elt;\n            if (elt in jsonList) {\n                return jsonList[elt];\n            }\n            else {\n                return null;\n            }\n        };\n\n        /**\n         * Return the loading progress in percent\n         * @name getLoadProgress\n         * @memberOf me.loader\n         * @public\n         * @function\n         * @deprecated use callback instead\n         * @return {Number}\n         */\n        api.getLoadProgress = function () {\n            return loadCount / resourceCount;\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Font / Bitmap font\n *\n * ASCII Table\n * http://www.asciitable.com/\n * [ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz]\n *\n * -> first char \" \" 32d (0x20);\n */\n(function () {\n\n    var runits = [\"ex\", \"em\", \"pt\", \"px\"];\n    var toPX = [12, 24, 0.75, 1];\n\n    /**\n     * a generic system font object.\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {String} font a CSS font name\n     * @param {Number|String} size size, or size + suffix (px, em, pt)\n     * @param {me.Color|String} fillStyle a CSS color value\n     * @param {String} [textAlign=\"left\"] horizontal alignment\n     */\n    me.Font = me.Renderable.extend(\n    /** @scope me.Font.prototype */ {\n\n        /** @ignore */\n        init : function (font, size, fillStyle, textAlign) {\n            // private font properties\n            /** @ignore */\n            this.fontSize = new me.Vector2d();\n\n            /**\n             * defines the color used to draw the font.<br>\n             * @public\n             * @type me.Color\n             * @default black\n             * @name me.Font#fillStyle\n             */\n            this.fillStyle = new me.Color().copy(fillStyle);\n\n            /**\n             * defines the color used to draw the font stroke.<br>\n             * @public\n             * @type me.Color\n             * @default black\n             * @name me.Font#strokeStyle\n             */\n            this.strokeStyle = new me.Color(0, 0, 0);\n\n            /**\n             * sets the current line width, in pixels, when drawing stroke\n             * @public\n             * @type Number\n             * @default 1\n             * @name me.Font#lineWidth\n             */\n            this.lineWidth = 1;\n\n            /**\n             * Set the default text alignment (or justification),<br>\n             * possible values are \"left\", \"right\", and \"center\".<br>\n             * @public\n             * @type String\n             * @default \"left\"\n             * @name me.Font#textAlign\n             */\n            this.textAlign = textAlign || \"left\";\n\n            /**\n             * Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\n             * possible values are \"top\", \"hanging, \"middle, \"alphabetic, \"ideographic, \"bottom\"<br>\n             * @public\n             * @type String\n             * @default \"top\"\n             * @name me.Font#textBaseline\n             */\n            this.textBaseline = \"top\";\n\n            /**\n             * Set the line spacing height (when displaying multi-line strings). <br>\n             * Current font height will be multiplied with this value to set the line height.\n             * @public\n             * @type Number\n             * @default 1.0\n             * @name me.Font#lineHeight\n             */\n            this.lineHeight = 1.0;\n\n            // super constructor\n            me.Renderable.prototype.init.apply(this, [0, 0, 0, 0]);\n\n            // font name and type\n            this.setFont(font, size, fillStyle, textAlign);\n\n            if (!this.gid) {\n                this.gid = me.utils.createGUID();\n            }\n        },\n\n        /**\n         * make the font bold\n         * @name bold\n         * @memberOf me.Font\n         * @function\n         */\n        bold : function () {\n            this.font = \"bold \" + this.font;\n        },\n\n        /**\n         * make the font italic\n         * @name italic\n         * @memberOf me.Font\n         * @function\n         */\n        italic : function () {\n            this.font = \"italic \" + this.font;\n        },\n\n        /**\n         * Change the font settings\n         * @name setFont\n         * @memberOf me.Font\n         * @function\n         * @param {String} font a CSS font name\n         * @param {Number|String} size size, or size + suffix (px, em, pt)\n         * @param {me.Color|String} [fillStyle] a CSS color value\n         * @param {String} [textAlign=\"left\"] horizontal alignment\n         * @example\n         * font.setFont(\"Arial\", 20, \"white\");\n         * font.setFont(\"Arial\", \"1.5em\", \"white\");\n         */\n        setFont : function (font, size, fillStyle, textAlign) {\n            // font name and type\n            var font_names = font.split(\",\").map(function (value) {\n                value = value.trim();\n                return (\n                    !/(^\".*\"$)|(^'.*'$)/.test(value)\n                ) ? \"\\\"\" + value + \"\\\"\" : value;\n            });\n           \n            if (typeof size === \"number\") {\n                this.fontSize.y = size;\n                size += \"px\";\n            } else /* string */ {\n                // extract the units and convert if necessary\n                var CSSval =  size.match(/([-+]?[\\d.]*)(.*)/);\n                this.fontSize.y = parseFloat(CSSval[1]);\n                if (CSSval[2]) {\n                    this.fontSize.y *= toPX[runits.indexOf(CSSval[2])];                    \n                } else {\n                    // no unit define, assume px\n                    size += \"px\";\n                }\n            }\n            this.height = this.fontSize.y;\n\n            this.font = size + \" \" + font_names.join(\",\");\n            if (typeof(fillStyle) !== \"undefined\") {\n                this.fillStyle.copy(fillStyle);\n            }\n            if (textAlign) {\n                this.textAlign = textAlign;\n            }\n        },\n\n        /**\n         * measure the given text size in pixels\n         * @name measureText\n         * @memberOf me.Font\n         * @function\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer Reference to the destination renderer instance\n         * @param {String} text\n         * @return {Object} returns an object, with two attributes: width (the width of the text) and height (the height of the text).\n         */\n        measureText : function (renderer, text) {\n            var context = renderer.fontContext2D;\n\n            // draw the text\n            context.font = this.font;\n            context.fillStyle = this.fillStyle.toRGBA();\n            context.textAlign = this.textAlign;\n            context.textBaseline = this.textBaseline;\n\n            this.height = this.width = 0;\n\n            var strings = (\"\" + text).split(\"\\n\");\n            for (var i = 0; i < strings.length; i++) {\n                this.width = Math.max(context.measureText(strings[i].trimRight()).width, this.width);\n                this.height += this.fontSize.y * this.lineHeight;\n            }\n            return {\n                width : this.width,\n                height : this.height\n            };\n        },\n\n        /**\n         * draw a text at the specified coord\n         * @name draw\n         * @memberOf me.Font\n         * @function\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer Reference to the destination renderer instance\n         * @param {String} text\n         * @param {Number} x\n         * @param {Number} y\n         */\n\n        draw : function (renderer, text, x, y) {\n            // save the previous global alpha value\n            var _alpha = renderer.globalAlpha();\n\n            renderer.setGlobalAlpha(_alpha * this.getOpacity());\n\n            // draw the text\n            renderer.drawFont(this._drawFont(renderer.fontContext2D, text, ~~x, ~~y, false));\n\n            // restore the previous global alpha value\n            renderer.setGlobalAlpha(_alpha);\n        },\n\n        /**\n         * draw a stroke text at the specified coord, as defined <br>\n         * by the `lineWidth` and `fillStroke` properties. <br>\n         * Note : using drawStroke is not recommended for performance reasons\n         * @name drawStroke\n         * @memberOf me.Font\n         * @function\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer Reference to the destination renderer instance\n         * @param {String} text\n         * @param {Number} x\n         * @param {Number} y\n         */\n        drawStroke : function (renderer, text, x, y) {\n            // save the previous global alpha value\n            var _alpha = renderer.globalAlpha();\n            \n            renderer.setGlobalAlpha(_alpha * this.getOpacity());\n\n            // draw the text\n            renderer.drawFont(this._drawFont(renderer.fontContext2D, text, ~~x, ~~y, true));\n\n            // restore the previous global alpha value\n            renderer.setGlobalAlpha(_alpha);\n        },\n\n        /**\n         * @ignore\n         */\n        _drawFont : function (context, text, x, y, stroke) {\n            context.font = this.font;\n            context.fillStyle = this.fillStyle.toRGBA();\n            if (stroke) {\n                context.strokeStyle = this.strokeStyle.toRGBA();\n                context.lineWidth = this.lineWidth;\n            }\n            context.textAlign = this.textAlign;\n            context.textBaseline = this.textBaseline;\n\n            var strings = (\"\" + text).split(\"\\n\"), string = \"\";\n            var dw = 0;\n            var dy = y;\n            var lineHeight = this.fontSize.y * this.lineHeight;\n            for (var i = 0; i < strings.length; i++) {\n                string = strings[i].trimRight();\n                // measure the string\n                dw = Math.max(dw, context.measureText(string).width);\n                // draw the string\n                context[stroke ? \"strokeText\" : \"fillText\"](string, x, y);\n                // add leading space\n                y += lineHeight;\n            }\n\n            // compute bounds\n            // TODO : memoize me !\n            var dx = (this.textAlign === \"right\" ? x - dw : (\n                this.textAlign === \"center\" ? x - ~~(dw / 2) : x\n            ));\n            dy = (this.textBaseline.search(/^(top|hanging)$/) === 0) ? dy : (\n                this.textBaseline === \"middle\" ? dy - ~~(lineHeight / 2) : dy - lineHeight\n            );\n\n            // update the renderable bounds\n            return this._bounds.setShape(\n                ~~dx,\n                ~~dy,\n                ~~(dw + 0.5),\n                ~~(strings.length * lineHeight + 0.5)\n            );\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Font / Bitmap font\n *\n * ASCII Table\n * http://www.asciitable.com/\n * [ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz]\n *\n * -> first char \" \" 32d (0x20);\n */\n(function () {\n    /**\n     * a bitpmap font object\n     * @class\n     * @extends me.Font\n     * @memberOf me\n     * @constructor\n     * @param {String} font font name\n     * @param {Number|Object} size either a number value, or an object like { x : 16, y : 16 }\n     * @param {Number} [scale=1.0]\n     * @param {Number} [firstChar=0x20] charcode for the first character in the font sheet. Default is the space character.\n     */\n    me.BitmapFont = me.Font.extend(\n    /** @scope me.BitmapFont.prototype */ {\n        /** @ignore */\n        init : function (font, size, scale, firstChar) {\n            /** @ignore */\n            // scaled font size;\n            this.sSize = new me.Vector2d();\n\n            // #char per row\n            this.charCount = 0;\n            // font name and type\n            me.Font.prototype.init.apply(this, [font, size.x || size, \"#000000\"]);\n            // first char in the ascii table\n            this.firstChar = firstChar || 0x20;\n\n            // load the font metrics\n            this.loadFontMetrics(font, size);\n\n            // set a default alignement\n            this.textAlign = \"left\";\n            this.textBaseline = \"top\";\n            // resize if necessary\n            if (scale) {\n                this.resize(scale);\n            }\n        },\n\n        /**\n         * Load the font metrics\n         * @ignore\n         */\n        loadFontMetrics : function (font, size) {\n            this.font = me.loader.getImage(font);\n\n            // some cheap metrics\n            this.fontSize.x = size.x || size;\n            this.fontSize.y = size.y || this.font.height;\n            this.sSize.copy(this.fontSize);\n            this.height = this.sSize.y;\n\n            // #char per row\n            this.charCount = ~~(this.font.width / this.fontSize.x);\n        },\n\n        /**\n         * change the font settings\n         * @name set\n         * @memberOf me.BitmapFont\n         * @function\n         * @param {String} textAlign (\"left\", \"center\", \"right\")\n         * @param {Number} [scale]\n         */\n        set : function (textAlign, scale) {\n            this.textAlign = textAlign;\n            // updated scaled Size\n            if (scale) {\n                this.resize(scale);\n            }\n        },\n\n        /**\n         * change the font display size\n         * @name resize\n         * @memberOf me.BitmapFont\n         * @function\n         * @param {Number} scale ratio\n         */\n        resize : function (scale) {\n            // updated scaled Size\n            this.sSize.setV(this.fontSize);\n            this.sSize.x *= scale;\n            this.sSize.y *= scale;\n            this.height = this.sSize.y;\n        },\n\n        /**\n         * measure the given text size in pixels\n         * @name measureText\n         * @memberOf me.BitmapFont\n         * @function\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer Reference to the destination renderer instance\n         * @param {String} text\n         * @return {Object} an object with two properties: `width` and `height`, defining the output dimensions\n         */\n        measureText : function (renderer, text) {\n            var strings = (\"\" + text).split(\"\\n\");\n\n            this.height = this.width = 0;\n\n            for (var i = 0; i < strings.length; i++) {\n                this.width = Math.max((strings[i].trimRight().length * this.sSize.x), this.width);\n                this.height += this.sSize.y * this.lineHeight;\n            }\n            return {width: this.width, height: this.height};\n        },\n\n        /**\n         * draw a text at the specified coord\n         * @name draw\n         * @memberOf me.BitmapFont\n         * @function\n         * @param {me.CanvasRenderer|me.WebGLRenderer} renderer Reference to the destination renderer instance\n         * @param {String} text\n         * @param {Number} x\n         * @param {Number} y\n         */\n        draw : function (renderer, text, x, y) {\n            var strings = (\"\" + text).split(\"\\n\");\n            var lX = x;\n            var height = this.sSize.y * this.lineHeight;\n\n            // save the previous global alpha value\n            var _alpha = renderer.globalAlpha();\n            renderer.setGlobalAlpha(_alpha * this.getOpacity());\n\n            // update initial position\n            this.pos.set(x, y, this.pos.z); // TODO : z ?\n            for (var i = 0; i < strings.length; i++) {\n                x = lX;\n                var string = strings[i].trimRight();\n                // adjust x pos based on alignment value\n                var width = string.length * this.sSize.x;\n                switch (this.textAlign) {\n                    case \"right\":\n                        x -= width;\n                        break;\n\n                    case \"center\":\n                        x -= width * 0.5;\n                        break;\n\n                    default :\n                        break;\n                }\n\n                // adjust y pos based on alignment value\n                switch (this.textBaseline) {\n                    case \"middle\":\n                        y -= height * 0.5;\n                        break;\n\n                    case \"ideographic\":\n                    case \"alphabetic\":\n                    case \"bottom\":\n                        y -= height;\n                        break;\n\n                    default :\n                        break;\n                }\n\n                // draw the string\n                for (var c = 0, len = string.length; c < len; c++) {\n                    // calculate the char index\n                    var idx = string.charCodeAt(c) - this.firstChar;\n                    if (idx >= 0) {\n                        // draw it\n                        renderer.drawImage(this.font,\n                            this.fontSize.x * (idx % this.charCount),\n                            this.fontSize.y * ~~(idx / this.charCount),\n                            this.fontSize.x, this.fontSize.y,\n                            ~~x, ~~y,\n                            this.sSize.x, this.sSize.y);\n                    }\n                    x += this.sSize.x;\n                }\n                // increment line\n                y += height;\n            }\n            // restore the previous global alpha value\n            renderer.setGlobalAlpha(_alpha);\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Audio Mngt Objects\n *\n *\n */\n(function () {\n    /**\n     * There is no constructor function for me.audio.\n     * @namespace me.audio\n     * @memberOf me\n     */\n    me.audio = (function () {\n        /*\n         * PRIVATE STUFF\n         */\n\n        // hold public stuff in our singleton\n        var api = {};\n\n        // audio channel list\n        var audioTracks = {};\n\n        // current music\n        var current_track_id = null;\n\n        // a retry counter\n        var retry_counter = 0;\n\n        /**\n         * event listener callback on load error\n         * @ignore\n         */\n        function soundLoadError(sound_name, onerror_cb) {\n            // check the retry counter\n            if (retry_counter++ > 3) {\n                // something went wrong\n                var errmsg = \"melonJS: failed loading \" + sound_name;\n                if (me.sys.stopOnAudioError === false) {\n                    // disable audio\n                    me.audio.disable();\n                    // call error callback if defined\n                    if (onerror_cb) {\n                        onerror_cb();\n                    }\n                    // warning\n                    console.log(errmsg + \", disabling audio\");\n                }\n                else {\n                    // throw an exception and stop everything !\n                    throw new api.Error(errmsg);\n                }\n            // else try loading again !\n            }\n            else {\n                audioTracks[sound_name].load();\n            }\n        }\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Base class for Audio exception handling.\n         * @name Error\n         * @class\n         * @memberOf me.audio\n         * @constructor\n         * @param {String} msg Error message.\n         */\n        api.Error = me.Error.extend({\n            init : function (msg) {\n                me.Error.prototype.init.apply(this, [ msg ]);\n                this.name = \"me.audio.Error\";\n            }\n        });\n\n        /**\n         * configure and initialize the audio engine<br>\n         * melonJS will try to load audio files corresponding to the browser supported audio format(s)<br>\n         * below is the list of supported file extentions : <br>\n         * <i>\"mp3\", \"mpeg\", opus\", \"ogg\", \"oga\", \"wav\", \"aac\", \"caf\", \"m4a\", \"mp4\", \"weba\", \"webm\", \"dolby\" </i> <br>\n         * keep in mind that not all browsers can play all audio formats, and if no compatible codecs are detected, audio will be disabled.\n         * @name init\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String}\n         *          [audioFormat=\"mp3\"] audio format provided\n         * @return {Boolean} Indicates whether audio initialization was successful\n         * @example\n         * // initialize the \"sound engine\", giving \"mp3\" and \"ogg\" as desired audio format\n         * // i.e. on Safari, the loader will load all audio.mp3 files,\n         * // on Opera the loader will however load audio.ogg files\n         * if (!me.audio.init(\"mp3,ogg\")) {\n         *     alert(\"Sorry but your browser does not support html 5 audio !\");\n         *     return;\n         * }\n         */\n        api.init = function (audioFormat) {\n            if (!me.initialized) {\n                throw new api.Error(\"me.audio.init() called before engine initialization.\");\n            }\n            // if no param is given to init we use mp3 by default\n            audioFormat = typeof audioFormat === \"string\" ? audioFormat : \"mp3\";\n            // convert it into an array\n            this.audioFormats = audioFormat.split(\",\");\n\n            return !Howler.noAudio;\n        };\n\n        /**\n         * enable audio output <br>\n         * only useful if audio supported and previously disabled through\n         *\n         * @see me.audio#disable\n         * @name enable\n         * @memberOf me.audio\n         * @public\n         * @function\n         */\n        api.enable = function () {\n            this.unmuteAll();\n        };\n\n        /**\n         * disable audio output\n         *\n         * @name disable\n         * @memberOf me.audio\n         * @public\n         * @function\n         */\n        api.disable = function () {\n            this.muteAll();\n        };\n\n        /**\n         * Load an audio file.<br>\n         * <br>\n         * sound item must contain the following fields :<br>\n         * - name    : name of the sound<br>\n         * - src     : source path<br>\n         * @ignore\n         */\n        api.load = function (sound, onload_cb, onerror_cb) {\n            var urls = [];\n            if (typeof(this.audioFormats) === \"undefined\" || this.audioFormats.length === 0) {\n                throw new api.Error(\"target audio extension(s) should be set through me.audio.init() before calling the preloader.\");\n            }\n            for (var i = 0; i < this.audioFormats.length; i++) {\n                urls.push(sound.src + sound.name + \".\" + this.audioFormats[i] + me.loader.nocache);\n            }\n            audioTracks[sound.name] = new Howl({\n                src : urls,\n                volume : Howler.volume(),\n                onloaderror : function () {\n                    soundLoadError.call(me.audio, sound.name, onerror_cb);\n                },\n                onload : function () {\n                    retry_counter = 0;\n                    if (onload_cb) {\n                        onload_cb();\n                    }\n                }\n            });\n\n            return 1;\n        };\n\n        /**\n         * play the specified sound\n         * @name play\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Boolean} [loop=false] loop audio\n         * @param {Function} [onend] Function to call when sound instance ends playing.\n         * @param {Number} [volume=default] Float specifying volume (0.0 - 1.0 values accepted).\n         * @return {Number} the sound instance ID.\n         * @example\n         * // play the \"cling\" audio clip\n         * me.audio.play(\"cling\");\n         * // play & repeat the \"engine\" audio clip\n         * me.audio.play(\"engine\", true);\n         * // play the \"gameover_sfx\" audio clip and call myFunc when finished\n         * me.audio.play(\"gameover_sfx\", false, myFunc);\n         * // play the \"gameover_sfx\" audio clip with a lower volume level\n         * me.audio.play(\"gameover_sfx\", false, null, 0.5);\n         */\n        api.play = function (sound_name, loop, onend, volume) {\n            var sound = audioTracks[sound_name];\n            if (sound && typeof sound !== \"undefined\") {\n                var instance_id = sound.play();\n                if (typeof loop === \"boolean\") {\n                    // arg[0] can take different types in howler 2.0\n                    sound.loop(loop, instance_id);\n                }\n                sound.volume(typeof(volume) === \"number\" ? volume.clamp(0.0, 1.0) : Howler.volume(), instance_id);\n                if (typeof(onend) === \"function\") {\n                    if (loop === true) {\n                        sound.on(\"end\", onend, instance_id);\n                    }\n                    else {\n                        sound.once(\"end\", onend, instance_id);\n                    }\n                }\n                return instance_id;\n            }\n        };\n\n        /**\n         * Fade a currently playing sound between two volumee.\n         * @name fade\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Number} from Volume to fade from (0.0 to 1.0).\n         * @param {Number} to Volume to fade to (0.0 to 1.0).\n         * @param {Number} duration Time in milliseconds to fade.\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will fade.\n         */\n        api.fade = function (sound_name, from, to, duration, instance_id) {\n            var sound = audioTracks[sound_name];\n            if (sound && typeof sound !== \"undefined\") {\n                sound.fade(from, to, duration, instance_id);\n            }\n        };\n\n        /**\n         * stop the specified sound on all channels\n         * @name stop\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will stop.\n         * @example\n         * me.audio.stop(\"cling\");\n         */\n        api.stop = function (sound_name, instance_id) {\n            var sound = audioTracks[sound_name];\n            if (sound && typeof sound !== \"undefined\") {\n                sound.stop(instance_id);\n                // remove the defined onend callback (if any defined)\n                sound.off(\"end\", instance_id);\n            }\n        };\n\n        /**\n         * pause the specified sound on all channels<br>\n         * this function does not reset the currentTime property\n         * @name pause\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will pause.\n         * @example\n         * me.audio.pause(\"cling\");\n         */\n        api.pause = function (sound_name, instance_id) {\n            var sound = audioTracks[sound_name];\n            if (sound && typeof sound !== \"undefined\") {\n                sound.pause(instance_id);\n            }\n        };\n\n        /**\n         * resume the specified sound on all channels<br>\n         * @name resume\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will resume.\n         * @example\n         * // play a audio clip\n         * var id = me.audio.play(\"myClip\");\n         * ...\n         * // pause it\n         * me.audio.pause(\"myClip\", id);\n         * ...\n         * // resume\n         * me.audio.resume(\"myClip\", id);\n         */\n        api.resume = function (sound_name, instance_id) {\n            var sound = audioTracks[sound_name];\n            if (sound && typeof sound !== \"undefined\") {\n                sound.play(instance_id);\n            }\n        };\n\n        /**\n         * play the specified audio track<br>\n         * this function automatically set the loop property to true<br>\n         * and keep track of the current sound being played.\n         * @name playTrack\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio track name - case sensitive\n         * @param {Number} [volume=default] Float specifying volume (0.0 - 1.0 values accepted).\n         * @return {Number} the sound instance ID.\n         * @example\n         * me.audio.playTrack(\"awesome_music\");\n         */\n        api.playTrack = function (sound_name, volume) {\n            current_track_id = sound_name;\n            return me.audio.play(\n                current_track_id,\n                true,\n                null,\n                volume\n            );\n        };\n\n        /**\n         * stop the current audio track\n         *\n         * @see me.audio#playTrack\n         * @name stopTrack\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @example\n         * // play a awesome music\n         * me.audio.playTrack(\"awesome_music\");\n         * // stop the current music\n         * me.audio.stopTrack();\n         */\n        api.stopTrack = function () {\n            if (current_track_id !== null) {\n                audioTracks[current_track_id].stop();\n                current_track_id = null;\n            }\n        };\n\n        /**\n         * pause the current audio track\n         *\n         * @name pauseTrack\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @example\n         * me.audio.pauseTrack();\n         */\n        api.pauseTrack = function () {\n            if (current_track_id !== null) {\n                audioTracks[current_track_id].pause();\n            }\n        };\n\n        /**\n         * resume the previously paused audio track\n         *\n         * @name resumeTrack\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @example\n         * // play an awesome music\n         * me.audio.playTrack(\"awesome_music\");\n         * // pause the audio track\n         * me.audio.pauseTrack();\n         * // resume the music\n         * me.audio.resumeTrack();\n         */\n        api.resumeTrack = function () {\n            if (current_track_id !== null) {\n                audioTracks[current_track_id].play();\n            }\n        };\n\n        /**\n         * returns the current track Id\n         * @name getCurrentTrack\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @return {String} audio track name\n         */\n        api.getCurrentTrack = function () {\n            return current_track_id;\n        };\n\n        /**\n         * set the default global volume\n         * @name setVolume\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {Number} volume Float specifying volume (0.0 - 1.0 values accepted).\n         */\n        api.setVolume = function (volume) {\n            Howler.volume(volume);\n        };\n\n        /**\n         * get the default global volume\n         * @name getVolume\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @returns {Number} current volume value in Float [0.0 - 1.0] .\n         */\n        api.getVolume = function () {\n            return Howler.volume();\n        };\n\n        /**\n         * mute the specified sound\n         * @name mute\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name - case sensitive\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will mute.\n         */\n        api.mute = function (sound_name, instance_id, mute) {\n            // if not defined : true\n            mute = (typeof(mute) === \"undefined\" ? true : !!mute);\n            var sound = audioTracks[sound_name];\n            if (sound && typeof(sound) !== \"undefined\") {\n                sound.mute(mute, instance_id);\n            }\n        };\n\n        /**\n         * unmute the specified sound\n         * @name unmute\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio clip name\n         * @param {Number} [id] the sound instance ID. If none is passed, all sounds in group will unmute.\n         */\n        api.unmute = function (sound_name, instance_id) {\n            api.mute(sound_name, instance_id, false);\n        };\n\n        /**\n         * mute all audio\n         * @name muteAll\n         * @memberOf me.audio\n         * @public\n         * @function\n         */\n        api.muteAll = function () {\n            Howler.mute(true);\n        };\n\n        /**\n         * unmute all audio\n         * @name unmuteAll\n         * @memberOf me.audio\n         * @public\n         * @function\n         */\n        api.unmuteAll = function () {\n            Howler.mute(false);\n        };\n\n        /**\n         * unload specified audio track to free memory\n         *\n         * @name unload\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @param {String} sound_name audio track name - case sensitive\n         * @return {Boolean} true if unloaded\n         * @example\n         * me.audio.unload(\"awesome_music\");\n         */\n        api.unload = function (sound_name) {\n            sound_name = sound_name;\n            if (!(sound_name in audioTracks)) {\n                return false;\n            }\n\n            // destroy the Howl object\n            audioTracks[sound_name].unload();\n            if (typeof(audioTracks[sound_name].dispose) === \"function\") {\n                // cocoonJS implements a dispose function to free\n                // corresponding allocated audio in memory\n                audioTracks[sound_name].dispose();\n            }\n            delete audioTracks[sound_name];\n            return true;\n        };\n\n        /**\n         * unload all audio to free memory\n         *\n         * @name unloadAll\n         * @memberOf me.audio\n         * @public\n         * @function\n         * @example\n         * me.audio.unloadAll();\n         */\n        api.unloadAll = function () {\n            for (var sound_name in audioTracks) {\n                if (audioTracks.hasOwnProperty(sound_name)) {\n                    api.unload(sound_name);\n                }\n            }\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * video functions\n     * There is no constructor function for me.video\n     * @namespace me.video\n     * @memberOf me\n     */\n    me.video = (function () {\n        // hold public stuff in our apig\n        var api = {};\n\n        // internal variables\n        var canvas = null;\n\n        var deferResizeId = 0;\n\n        var designRatio = 1;\n        var designWidth = 0;\n        var designHeight = 0;\n\n        // max display size\n        var maxWidth = Infinity;\n        var maxHeight = Infinity;\n\n        // default video settings\n        var settings = {\n            wrapper : undefined,\n            renderer : 0, // canvas\n            doubleBuffering : false,\n            autoScale : false,\n            scale : 1.0,\n            scaleMethod : \"fit\",\n            transparent : false,\n            antiAlias : false,\n        };\n\n\n        /**\n         * Auto-detect the best renderer to use\n         * @ignore\n         */\n        function autoDetectRenderer(c, width, height, options) {\n            try {\n                return new me.WebGLRenderer(c, width, height, options);\n            }\n            catch (e) {\n                return new me.CanvasRenderer(c, width, height, options);\n            }\n        }\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Base class for Video exception handling.\n         * @name Error\n         * @class\n         * @constructor\n         * @memberOf me.video\n         * @param {String} msg Error message.\n         */\n        api.Error = me.Error.extend({\n            init : function (msg) {\n                me.Error.prototype.init.apply(this, [ msg ]);\n                this.name = \"me.video.Error\";\n            }\n        });\n\n        /**\n         * Select the HTML5 Canvas renderer\n         * @public\n         * @name CANVAS\n         * @memberOf me.video\n         * @enum {Number}\n         */\n        api.CANVAS = 0;\n\n        /**\n         * Select the WebGL renderer\n         * @public\n         * @name WEBGL\n         * @memberOf me.video\n         * @enum {Number}\n         */\n        api.WEBGL = 1;\n\n        /**\n         * Auto-select the renderer (Attempt WebGL first, with fallback to Canvas)\n         * @public\n         * @name AUTO\n         * @memberOf me.video\n         * @enum {Number}\n         */\n        api.AUTO = 2;\n\n        /**\n         * Initialize the \"video\" system (create a canvas based on the given arguments, and the related renderer). <br>\n         * melonJS support various scaling mode : <br>\n         *  - <i>`fit`</i> : Letterboxed; content is scaled to design aspect ratio <br>\n         *  - <i>`fill-max`</i> : Canvas is resized to fit maximum design resolution; content is scaled to design aspect ratio <br>\n         *  - <i>`flex-height`</i> : Canvas height is resized to fit; content is scaled to design aspect ratio <br>\n         *  - <i>`flex-width`</i> : Canvas width is resized to fit; content is scaled to design aspect ratio <br>\n         *  - <i>`stretch`</i> : Canvas is resized to fit; content is scaled to screen aspect ratio\n         * @name init\n         * @memberOf me.video\n         * @function\n         * @param {Number} width the width of the canvas viewport\n         * @param {Number} height the height of the canvas viewport\n         * @param {Object} [options] The optional video/renderer parameters\n         * @param {String} [options.wrapper=document.body] the \"div\" element name to hold the canvas in the HTML file\n         * @param {Number} [options.renderer=me.video.CANVAS] renderer to use.\n         * @param {Boolean} [options.doubleBuffering=false] enable/disable double buffering\n         * @param {Number|String} [options.scale=1.0] enable scaling of the canvas ('auto' for automatic scaling)\n         * @param {String} [options.scaleMethod=\"fit\"] ('fit','fill-min','fill-max','flex','flex-width','flex-height','stretch') screen scaling modes\n         * @param {Boolean} [options.transparent=false] whether to allow transparent pixels in the front buffer (screen)\n         * @param {Boolean} [options.antiAlias=false] whether to enable or not video scaling interpolation\n         * @return {Boolean} false if initialization failed (canvas not supported)\n         * @example\n         * // init the video with a 640x480 canvas\n         * me.video.init(640, 480, {\n         *     wrapper : \"screen\",\n         *     renderer : me.video.CANVAS,\n         *     scale : \"auto\",\n         *     scaleMethod : \"fit\",\n         *     doubleBuffering : true\n         * });\n         */\n        api.init = function (game_width, game_height, options) {\n            // ensure melonjs has been properly initialized\n            if (!me.initialized) {\n                throw new api.Error(\"me.video.init() called before engine initialization.\");\n            }\n\n            // revert to default options if not defined\n            settings = Object.assign(settings, options || {});\n\n            // sanitize potential given parameters\n            settings.doubleBuffering = !!(settings.doubleBuffering);\n            settings.autoScale = (settings.scale === \"auto\") || false;\n            if (settings.scaleMethod.search(/^(fill-(min|max)|fit|flex(-(width|height))?|stretch)$/) !== 0) {\n                settings.scaleMethod = \"fit\";\n            }\n            settings.transparent = !!(settings.transparent);\n\n            // override renderer settings if &webgl is defined in the URL\n            if (me.game.HASH.webgl === true) {\n                settings.renderer = api.WEBGL;\n            }\n\n            // normalize scale\n            settings.scale = (settings.autoScale) ? 1.0 : (+settings.scale || 1.0);\n            me.sys.scale = new me.Vector2d(settings.scale, settings.scale);\n\n            // force double buffering if scaling is required\n            if (settings.autoScale || (settings.scale !== 1.0)) {\n                settings.doubleBuffering = true;\n            }\n\n            // hold the requested video size ratio\n            designRatio = game_width / game_height;\n            designWidth = game_width;\n            designHeight = game_height;\n\n            // default scaled size value\n            var game_width_zoom = game_width * me.sys.scale.x;\n            var game_height_zoom = game_height * me.sys.scale.y;\n            settings.zoomX = game_width_zoom;\n            settings.zoomY = game_height_zoom;\n\n            //add a channel for the onresize/onorientationchange event\n            window.addEventListener(\n                \"resize\",\n                throttle(\n                    100,\n                    false,\n                    function (event) {\n                        me.event.publish(me.event.WINDOW_ONRESIZE, [ event ]);\n                    }\n                ),\n                false\n            );\n            window.addEventListener(\n                \"orientationchange\",\n                function (event) {\n                    me.event.publish(me.event.WINDOW_ONORIENTATION_CHANGE, [ event ]);\n                },\n                false\n            );\n\n            // register to the channel\n            me.event.subscribe(\n                me.event.WINDOW_ONRESIZE,\n                me.video.onresize.bind(me.video)\n            );\n            me.event.subscribe(\n                me.event.WINDOW_ONORIENTATION_CHANGE,\n                me.video.onresize.bind(me.video)\n            );\n\n            // create the main screen canvas\n            if (me.device.ejecta === true) {\n                // a main canvas is already automatically created by Ejecta\n                canvas = document.getElementById(\"canvas\");\n            } else {\n                canvas = api.createCanvas(game_width_zoom, game_height_zoom, true);\n            }\n\n            // add our canvas\n            if (options.wrapper) {\n                settings.wrapper = document.getElementById(options.wrapper);\n            }\n            // if wrapperid is not defined (null)\n            if (!settings.wrapper) {\n                // add the canvas to document.body\n                settings.wrapper = document.body;\n            }\n            settings.wrapper.appendChild(canvas);\n\n            // stop here if not supported\n            if (!canvas.getContext) {\n                return false;\n            }\n\n            /**\n             * A reference to the current video renderer\n             * @public\n             * @memberOf me.video\n             * @name renderer\n             * @type {me.Renderer|me.CanvasRenderer|me.WebGLRenderer}\n             */\n            switch (settings.renderer) {\n                case api.WEBGL:\n                    this.renderer = new me.WebGLRenderer(canvas, game_width, game_height, settings);\n                    break;\n                case api.AUTO:\n                    this.renderer = autoDetectRenderer(canvas, game_width, game_height, settings);\n                    break;\n                default:\n                    this.renderer = new me.CanvasRenderer(canvas, game_width, game_height, settings);\n                    break;\n            }\n\n            // adjust CSS style for High-DPI devices\n            var ratio = me.device.getPixelRatio();\n            if (ratio > 1) {\n                canvas.style.width = (canvas.width / ratio) + \"px\";\n                canvas.style.height = (canvas.height / ratio) + \"px\";\n            }\n\n\n            // set max the canvas max size if CSS values are defined\n            if (window.getComputedStyle) {\n                var style = window.getComputedStyle(canvas, null);\n                me.video.setMaxSize(parseInt(style.maxWidth, 10), parseInt(style.maxHeight, 10));\n            }\n\n            me.game.init();\n\n            // trigger an initial resize();\n            me.video.onresize();\n\n            return true;\n        };\n\n        /**\n         * return the relative (to the page) position of the specified Canvas\n         * @name getPos\n         * @memberOf me.video\n         * @function\n         * @param {Canvas} [canvas] system one if none specified\n         * @return {me.Vector2d}\n         */\n        api.getPos = function (c) {\n            c = c || this.renderer.getScreenCanvas();\n            return (\n                c.getBoundingClientRect ?\n                c.getBoundingClientRect() : { left : 0, top : 0 }\n            );\n        };\n\n        /**\n         * set the max canvas display size (when scaling)\n         * @name setMaxSize\n         * @memberOf me.video\n         * @function\n         * @param {Number} width width\n         * @param {Number} height height\n         */\n        api.setMaxSize = function (w, h) {\n            // max display size\n            maxWidth = w || Infinity;\n            maxHeight = h || Infinity;\n            // trigger a resize\n            // defer it to ensure everything is properly intialized\n            this.onresize.defer(this);\n\n        };\n\n        /**\n         * Create and return a new Canvas\n         * @name createCanvas\n         * @memberOf me.video\n         * @function\n         * @param {Number} width width\n         * @param {Number} height height\n         * @param {Boolean} [screencanvas=false] set to true if this canvas renders directly to the screen\n         * @return {Canvas}\n         */\n        api.createCanvas = function (width, height, screencanvas) {\n            if (width === 0 || height === 0)  {\n                throw new api.Error(\"width or height was zero, Canvas could not be initialized !\");\n            }\n\n            var _canvas = document.createElement(\"canvas\");\n\n            if ((screencanvas === true) && (navigator.isCocoonJS) && (me.device.android2 !== true)) {\n                // enable ScreenCanvas on cocoonJS\n                _canvas.screencanvas = true;\n            }\n\n            _canvas.width = width || canvas.width;\n            _canvas.height = height || canvas.height;\n\n            return _canvas;\n        };\n\n        /**\n         * return a reference to the wrapper\n         * @name getWrapper\n         * @memberOf me.video\n         * @function\n         * @return {Document}\n         */\n        api.getWrapper = function () {\n            return settings.wrapper;\n        };\n\n        /**\n         * callback for window resize event\n         * @ignore\n         */\n        api.onresize = function () {\n            // default (no scaling)\n            var scaleX = 1, scaleY = 1;\n\n            // check for orientation information\n            if (typeof window.orientation !== \"undefined\") {\n                me.device.orientation = window.orientation;\n            }\n            else {\n                // is this actually not the best option since default \"portrait\"\n                // orientation might vary between for example an ipad and and android tab\n                me.device.orientation = (\n                    window.outerWidth > window.outerHeight ?\n                    90 : 0\n                );\n            }\n\n            if (settings.autoScale) {\n                var parentNodeWidth;\n                var parentNodeHeight;\n                var parentNode = me.video.renderer.getScreenCanvas().parentNode;\n                if (typeof (parentNode) !== \"undefined\") {\n                    // for cased where DOM is not implemented and so parentNode (e.g. Ejecta)\n                    parentNodeWidth = parentNode.width;\n                    parentNodeHeight = parentNode.height;\n                }\n                var _max_width = Math.min(maxWidth, parentNodeWidth || window.innerWidth);\n                var _max_height = Math.min(maxHeight, parentNodeHeight || window.innerHeight);\n                var screenRatio = _max_width / _max_height;\n                var sWidth = Infinity;\n                var sHeight = Infinity;\n\n                if (\n                    (settings.scaleMethod === \"fill-min\" && screenRatio > designRatio) ||\n                    (settings.scaleMethod === \"fill-max\" && screenRatio < designRatio) ||\n                    (settings.scaleMethod === \"flex-width\")\n                ) {\n                    // resize the display canvas to fill the parent container\n                    sWidth = Math.min(maxWidth, designHeight * screenRatio);\n                    scaleX = scaleY = _max_width / sWidth;\n                    sWidth = ~~(sWidth + 0.5);\n                    this.renderer.resize(sWidth, designHeight);\n                    me.game.viewport.resize(sWidth, designHeight);\n                    /*\n                     * XXX: Workaround for not updating container child-bounds\n                     * automatically (it's expensive!)\n                     */\n                    me.game.world.updateChildBounds();\n                }\n                else if (\n                    (settings.scaleMethod === \"fill-min\" && screenRatio < designRatio) ||\n                    (settings.scaleMethod === \"fill-max\" && screenRatio > designRatio) ||\n                    (settings.scaleMethod === \"flex-height\")\n                ) {\n                    // resize the display canvas to fill the parent container\n                    sHeight = Math.min(maxHeight, designWidth * (_max_height / _max_width));\n                    scaleX = scaleY = _max_height / sHeight;\n                    sHeight = ~~(sHeight + 0.5);\n                    this.renderer.resize(designWidth, sHeight);\n                    me.game.viewport.resize(designWidth, sHeight);\n                    /*\n                     * XXX: Workaround for not updating container child-bounds\n                     * automatically (it's expensive!)\n                     */\n                    me.game.world.updateChildBounds();\n                }\n                else if (settings.scaleMethod === \"flex\") {\n                    // resize the display canvas to fill the parent container\n                    this.renderer.resize(_max_width, _max_height);\n                    me.game.viewport.resize(_max_width, _max_height);\n                    /*\n                     * XXX: Workaround for not updating container child-bounds\n                     * automatically (it's expensive!)\n                     */\n                    me.game.world.updateChildBounds();\n                }\n                else if (settings.scaleMethod === \"stretch\") {\n                    // scale the display canvas to fit with the parent container\n                    scaleX = _max_width / designWidth;\n                    scaleY = _max_height / designHeight;\n                }\n                else {\n                    // scale the display canvas to fit the parent container\n                    // make sure we maintain the original aspect ratio\n                    if (screenRatio < designRatio) {\n                        scaleX = scaleY = _max_width / designWidth;\n                    }\n                    else {\n                        scaleX = scaleY = _max_height / designHeight;\n                    }\n                }\n\n                // adjust scaling ratio based on the device pixel ratio\n                scaleX *= me.device.getPixelRatio();\n                scaleY *= me.device.getPixelRatio();\n\n                if (deferResizeId) {\n                    // cancel any previous pending resize\n                    clearTimeout(deferResizeId);\n                }\n                deferResizeId = me.video.updateDisplaySize.defer(this, scaleX, scaleY);\n            }\n        };\n\n        /**\n         * Modify the \"displayed\" canvas size\n         * @name updateDisplaySize\n         * @memberOf me.video\n         * @function\n         * @param {Number} scaleX X scaling multiplier\n         * @param {Number} scaleY Y scaling multiplier\n         */\n        api.updateDisplaySize = function (scaleX, scaleY) {\n            // update the global scale variable\n            me.sys.scale.set(scaleX, scaleY);\n\n            // renderer resize logic\n            this.renderer.scaleCanvas(scaleX, scaleY);\n            me.game.repaint();\n\n            // make sure we have the correct relative canvas position cached\n            me.input._offset = me.video.getPos();\n\n            // clear the timeout id\n            deferResizeId = 0;\n        };\n\n        // return our api\n        return api;\n    })();\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n(function () {\n\n    /**\n     * a base renderer object\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Canvas} canvas The html canvas tag to draw to on screen.\n     * @param {Number} width The width of the canvas without scaling\n     * @param {Number} height The height of the canvas without scaling\n     * @param {Object} [options] The renderer parameters\n     * @param {Boolean} [options.doubleBuffering=false] Whether to enable double buffering\n     * @param {Boolean} [options.antiAlias=false] Whether to enable anti-aliasing\n     * @param {Boolean} [options.transparent=false] Whether to enable transparency on the canvas (performance hit when enabled)\n     * @param {Number} [options.zoomX=width] The actual width of the canvas with scaling applied\n     * @param {Number} [options.zoomY=height] The actual height of the canvas with scaling applied\n     */\n    me.Renderer = me.Object.extend(\n    /** @scope me.Renderer.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (c, width, height, options) {\n            options = options || {};\n\n            // rendering options\n            this.transparent = !!(options.transparent);\n            this.doubleBuffering = !!(options.doubleBuffering);\n            this.antiAlias = !!(options.antiAlias);\n\n            this.gameWidthZoom = options.zoomX || width;\n            this.gameHeightZoom = options.zoomY || height;\n\n            // canvas object and context\n            this.canvas = this.backBufferCanvas = c;\n            this.context = null;\n\n            // global color\n            this.globalColor = new me.Color(255, 255, 255, 1.0);\n\n            return this;\n        },\n\n        /**\n         * @ignore\n         */\n        applyRGBFilter : function (object, effect, option) {\n            //create a output canvas using the given canvas or image size\n            var _context = this.getContext2d(me.video.createCanvas(object.width, object.height, false));\n            // get the pixels array of the give parameter\n            var imgpix = me.utils.getPixels(object);\n            // pointer to the pixels data\n            var pix = imgpix.data;\n\n            // apply selected effect\n            var i, n;\n            switch (effect) {\n                case \"b&w\":\n                    for (i = 0, n = pix.length; i < n; i += 4) {\n                        var grayscale = (3 * pix[i] + 4 * pix[i + 1] + pix[i + 2]) >>> 3;\n                        pix[i] = grayscale; // red\n                        pix[i + 1] = grayscale; // green\n                        pix[i + 2] = grayscale; // blue\n                    }\n                    break;\n\n                case \"brightness\":\n                    // make sure it's between 0.0 and 1.0\n                    var brightness = Math.abs(option).clamp(0.0, 1.0);\n                    for (i = 0, n = pix.length; i < n; i += 4) {\n\n                        pix[i] *= brightness; // red\n                        pix[i + 1] *= brightness; // green\n                        pix[i + 2] *= brightness; // blue\n                    }\n                    break;\n\n                case \"transparent\":\n                    var refColor = me.pool.pull(\"me.Color\").parseCSS(option);\n                    var pixel = me.pool.pull(\"me.Color\");\n                    for (i = 0, n = pix.length; i < n; i += 4) {\n                        pixel.setColor(pix[i], pix[i + 1], pix[i + 2]);\n                        if (pixel.equals(refColor)) {\n                            pix[i + 3] = 0;\n                        }\n                    }\n                    me.pool.push(refColor);\n                    me.pool.push(pixel);\n\n                    break;\n\n\n                default:\n                    return null;\n            }\n\n            // put our modified image back in the new filtered canvas\n            _context.putImageData(imgpix, 0, 0);\n\n            // return it\n            return _context;\n        },\n\n        /**\n         * @ignore\n         */\n        prepareSurface : function () {},\n\n        /**\n         * @ignore\n         */\n        reset : function () {\n            this.resetTransform();\n            this.cache.reset();\n        },\n\n        /**\n         * return a reference to the system canvas\n         * @name getCanvas\n         * @memberOf me.Renderer\n         * @function\n         * @return {Canvas}\n         */\n        getCanvas : function () {\n            return this.backBufferCanvas;\n        },\n\n        /**\n         * return a reference to the screen canvas\n         * @name getScreenCanvas\n         * @memberOf me.Renderer\n         * @function\n         * @return {Canvas}\n         */\n        getScreenCanvas : function () {\n            return this.canvas;\n        },\n\n        /**\n         * return a reference to the screen canvas corresponding 2d Context<br>\n         * (will return buffered context if double buffering is enabled, or a reference to the Screen Context)\n         * @name getScreenContext\n         * @memberOf me.Renderer\n         * @function\n         * @return {Context2d}\n         */\n        getScreenContext : function () {\n            return this.context;\n        },\n\n        /**\n         * Returns the 2D Context object of the given Canvas<br>\n         * Also configures anti-aliasing based on constructor options.\n         * @name getContext2d\n         * @memberOf me.Renderer\n         * @function\n         * @param {Canvas} canvas\n         * @param {Boolean} [opaque=false] True to disable transparency\n         * @return {Context2d}\n         */\n        getContext2d : function (c, opaque) {\n            if (typeof c === \"undefined\" || c === null) {\n                throw new me.video.Error(\n                    \"You must pass a canvas element in order to create \" +\n                    \"a 2d context\"\n                );\n            }\n\n            if (typeof c.getContext === \"undefined\") {\n                throw new me.video.Error(\n                    \"Your browser does not support HTML5 canvas.\"\n                );\n            }\n\n            var _context;\n            if (navigator.isCocoonJS) {\n                // cocoonJS specific extension\n                _context = c.getContext(\"2d\", {\n                    \"antialias\" : this.antiAlias,\n                    \"alpha\" : !opaque\n                });\n            }\n            else {\n                _context = c.getContext(\"2d\", {\n                    \"alpha\" : !opaque\n                });\n            }\n            if (!_context.canvas) {\n                _context.canvas = c;\n            }\n            this.setAntiAlias(_context, this.antiAlias);\n            return _context;\n        },\n\n        /**\n         * return the width of the system Canvas\n         * @name getWidth\n         * @memberOf me.Renderer\n         * @function\n         * @return {Number}\n         */\n        getWidth : function () {\n            return this.backBufferCanvas.width;\n        },\n\n        /**\n         * return the height of the system Canvas\n         * @name getHeight\n         * @memberOf me.Renderer\n         * @function\n         * @return {Number}\n         */\n        getHeight : function () {\n            return this.backBufferCanvas.height;\n        },\n\n        /**\n         * return the current global alpha\n         * @name globalAlpha\n         * @memberOf me.Renderer\n         * @function\n         * @return {Number}\n         */\n        globalAlpha : function () {\n            return this.globalColor.glArray[3];\n        },\n\n        /**\n         * resizes the canvas\n         * @name resize\n         * @memberOf me.Renderer\n         * @function\n         */\n        resize : function (width, height)\n        {\n            this.backBufferCanvas.width = width;\n            this.backBufferCanvas.height = height;\n        },\n\n        /**\n         * enable/disable image smoothing (scaling interpolation) for the specified 2d Context<br>\n         * (!) this might not be supported by all browsers <br>\n         * @name setImageSmoothing\n         * @memberOf me.Renderer\n         * @function\n         * @param {Context2d} context\n         * @param {Boolean} [enable=false]\n         */\n        setAntiAlias : function (context, enable) {\n            if (typeof(context) !== \"undefined\") {\n                // enable/disable antialis on the given context\n                me.agent.setPrefixed(\"imageSmoothingEnabled\", enable === true, context);\n            }\n\n            // disable antialias CSS scaling on the main canvas\n            var cssStyle = context.canvas.style[\"image-rendering\"];\n            if (enable === false && (cssStyle === \"\" || cssStyle === \"auto\")) {\n                // if a specific value is set through CSS or equal to the standard \"auto\" one\n                context.canvas.style[\"image-rendering\"] = \"pixelated\";\n            } else if (enable === true && cssStyle === \"pixelated\") {\n                // if set to the standard \"pixelated\"\n                context.canvas.style[\"image-rendering\"] = \"auto\";\n            }\n        },\n\n        /**\n         * @ignore\n         */\n        drawFont : function (/*bounds*/) {},\n\n    });\n\n})();\n\n/*\n* MelonJS Game Engine\n* Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n* http://www.melonjs.org\n*\n*/\n(function () {\n\n    /**\n     * a basic texture cache object\n     * @ignore\n     */\n    me.Renderer.TextureCache = me.Object.extend({\n        /**\n         * @ignore\n         */\n        init : function (max_size) {\n            this.max_size = max_size || Infinity;\n            this.reset();\n        },\n\n        /**\n         * @ignore\n         */\n        reset : function () {\n            this.cache = new Map();\n            this.units = new Map();\n            this.length = 0;\n        },\n\n        /**\n         * @ignore\n         */\n        validate : function () {\n            if (this.length >= this.max_size) {\n                // TODO: Merge textures instead of throwing an exception\n                throw new me.video.Error(\n                    \"Texture cache overflow: \" + this.max_size +\n                    \" texture units available.\"\n                );\n            }\n        },\n\n        /**\n         * @ignore\n         */\n        get : function (image, atlas) {\n            if (!this.cache.has(image)) {\n                this.validate();\n\n                if (!atlas) {\n                    var w = image.width;\n                    var h = image.height;\n                    atlas = {\n                        // FIXME: Create a texture atlas helper function\n                        \"meta\" : {\n                            \"app\" : \"melonJS\",\n                            \"size\" : { \"w\" : w, \"h\" : h }\n                        },\n                        \"frames\" : [{\n                            \"filename\" : \"default\",\n                            \"frame\" : { \"x\" : 0, \"y\" : 0, \"w\" : w, \"h\" : h }\n                        }]\n                    };\n                }\n\n                var texture = new me.video.renderer.Texture(atlas, image, true);\n                this.cache.set(image, texture);\n                this.units.set(texture, this.length++);\n            }\n            return this.cache.get(image);\n        },\n\n        /**\n         * @ignore\n         */\n        put : function (image, texture) {\n            this.validate();\n            this.cache.set(image, texture);\n            this.units.set(texture, this.length++);\n        },\n\n        /**\n         * @ignore\n         */\n        getUnit : function (texture) {\n            return this.units.get(texture);\n        }\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016 Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n(function () {\n\n    /**\n     * a canvas renderer object\n     * @class\n     * @extends me.Renderer\n     * @memberOf me\n     * @constructor\n     * @param {Canvas} canvas The html canvas tag to draw to on screen.\n     * @param {Number} width The width of the canvas without scaling\n     * @param {Number} height The height of the canvas without scaling\n     * @param {Object} [options] The renderer parameters\n     * @param {Boolean} [options.doubleBuffering=false] Whether to enable double buffering\n     * @param {Boolean} [options.antiAlias=false] Whether to enable anti-aliasing\n     * @param {Boolean} [options.transparent=false] Whether to enable transparency on the canvas (performance hit when enabled)\n     * @param {Number} [options.zoomX=width] The actual width of the canvas with scaling applied\n     * @param {Number} [options.zoomY=height] The actual height of the canvas with scaling applied\n     */\n    me.CanvasRenderer = me.Renderer.extend(\n    /** @scope me.CanvasRenderer.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (c, width, height, options) {\n            // parent constructor\n            me.Renderer.prototype.init.apply(this, [c, width, height, options]);\n\n            // defined the 2d context\n            this.context = this.getContext2d(this.canvas, !this.transparent);\n\n            // create the back buffer if we use double buffering\n            if (this.doubleBuffering) {\n                this.backBufferCanvas = me.video.createCanvas(width, height, false);\n                this.backBufferContext2D = this.getContext2d(this.backBufferCanvas);\n\n                if (this.transparent) {\n                    // Clears the front buffer for each frame blit\n                    this.context.globalCompositeOperation = \"copy\";\n                }\n            }\n            else {\n                this.backBufferCanvas = this.canvas;\n                this.backBufferContext2D = this.context;\n            }\n\n            this.fontContext2D = this.backBufferContext2D;\n\n            // apply the default color to the 2d context\n            this.setColor(this.globalColor);\n\n            // create a texture cache\n            this.cache = new me.Renderer.TextureCache();\n\n            return this;\n        },\n\n        /**\n         * prepare the framebuffer for drawing a new frame\n         * @name prepareSurface\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        prepareSurface : function () {\n            if (this.transparent) {\n                this.clearSurface(null, \"rgba(0,0,0,0)\", true);\n            }\n        },\n\n        /**\n         * render the main framebuffer on screen\n         * @name blitSurface\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        blitSurface : function () {\n            if (this.doubleBuffering) {\n                this.context.drawImage(\n                    this.backBufferCanvas, 0, 0,\n                    this.backBufferCanvas.width, this.backBufferCanvas.height,\n                    0, 0,\n                    this.gameWidthZoom, this.gameHeightZoom\n                );\n            }\n        },\n\n        /**\n         * Clear the specified context with the given color\n         * @name clearSurface\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Context2d} [ctx=null] Canvas context, defaults to system context if falsy.\n         * @param {me.Color|String} color CSS color.\n         * @param {Boolean} [opaque=false] Allow transparency [default] or clear the surface completely [true]\n         */\n        clearSurface : function (ctx, col, opaque) {\n            if (!ctx) {\n                ctx = this.backBufferContext2D;\n            }\n            var _canvas = ctx.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.globalCompositeOperation = opaque ? \"copy\" : \"source-over\";\n            ctx.fillStyle = (col instanceof me.Color) ? col.toRGBA() : col;\n            ctx.fillRect(0, 0, _canvas.width, _canvas.height);\n            ctx.restore();\n        },\n\n        /**\n         * Create a pattern with the specified repition\n         * @name createPattern\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {image} image Source image\n         * @param {String} repeat Define how the pattern should be repeated\n         * @return {CanvasPattern}\n         * @see me.ImageLayer#repeat\n         * @example\n         * var tileable   = renderer.createPattern(image, \"repeat\");\n         * var horizontal = renderer.createPattern(image, \"repeat-x\");\n         * var vertical   = renderer.createPattern(image, \"repeat-y\");\n         * var basic      = renderer.createPattern(image, \"no-repeat\");\n         */\n        createPattern : function (image, repeat) {\n            return this.backBufferContext2D.createPattern(image, repeat);\n        },\n\n        /**\n         * Draw an image using the canvas api\n         * @name drawImage\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {image} image Source image\n         * @param {Number} sx Source x-coordinate\n         * @param {Number} sy Source y-coordinate\n         * @param {Number} sw Source width\n         * @param {Number} sh Source height\n         * @param {Number} dx Destination x-coordinate\n         * @param {Number} dy Destination y-coordinate\n         * @param {Number} dw Destination width\n         * @param {Number} dh Destination height\n         * @example\n         * // Can be used in three ways:\n         * renderer.drawImage(image, dx, dy);\n         * renderer.drawImage(image, dx, dy, dw, dh);\n         * renderer.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n         * // dx, dy, dw, dh being the destination target & dimensions. sx, sy, sw, sh being the position & dimensions to take from the image\n         */\n        drawImage : function () {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.backBufferContext2D.drawImage.apply(this.backBufferContext2D, arguments);\n        },\n\n        /**\n         * Draw a pattern within the given rectangle.\n         * @name drawPattern\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {CanvasPattern} pattern Pattern object\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         * @see me.CanvasRenderer#createPattern\n         */\n        drawPattern : function (pattern, x, y, width, height) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            var fillStyle = this.backBufferContext2D.fillStyle;\n            this.backBufferContext2D.fillStyle = pattern;\n            this.backBufferContext2D.fillRect(x, y, width, height);\n            this.backBufferContext2D.fillStyle = fillStyle;\n        },\n\n        /**\n         * Fill an arc at the specified coordinates with given radius, start and end points\n         * @name fillArc\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x arc center point x-axis\n         * @param {Number} y arc center point y-axis\n         * @param {Number} radius\n         * @param {Number} start start angle in radians\n         * @param {Number} end end angle in radians\n         * @param {Boolean} [antiClockwise=false] draw arc anti-clockwise\n         */\n        fillArc : function (x, y, radius, start, end, antiClockwise) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.backBufferContext2D.save();\n            this.backBufferContext2D.beginPath();\n            this.backBufferContext2D.translate(x + radius, y + radius);\n            this.backBufferContext2D.arc(0, 0, radius, start, end, antiClockwise || false);\n            this.backBufferContext2D.fill();\n            this.backBufferContext2D.closePath();\n            this.backBufferContext2D.restore();\n        },\n\n        /**\n         * Draw a filled rectangle at the specified coordinates\n         * @name fillRect\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        fillRect : function (x, y, width, height) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.backBufferContext2D.fillRect(x, y, width, height);\n        },\n\n        /**\n         * return a reference to the system 2d Context\n         * @name getContext\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @return {Context2d}\n         */\n        getContext : function () {\n            return this.backBufferContext2D;\n        },\n\n        /**\n         * resets the canvas transform to identity\n         * @name resetTransform\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        resetTransform : function () {\n            this.backBufferContext2D.setTransform(1, 0, 0, 1, 0, 0);\n        },\n\n        /**\n         * scales the canvas & 2d Context\n         * @name scaleCanvas\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        scaleCanvas : function (scaleX, scaleY) {\n            this.canvas.width = this.gameWidthZoom = this.backBufferCanvas.width * scaleX;\n            this.canvas.height = this.gameHeightZoom = this.backBufferCanvas.height * scaleY;\n\n            // adjust CSS style for High-DPI devices\n            if (me.device.getPixelRatio() > 1) {\n                this.canvas.style.width = (this.canvas.width / me.device.getPixelRatio()) + \"px\";\n                this.canvas.style.height = (this.canvas.height / me.device.getPixelRatio()) + \"px\";\n            }\n\n            if (this.doubleBuffering && this.transparent) {\n                // Clears the front buffer for each frame blit\n                this.context.globalCompositeOperation = \"copy\";\n            }\n            this.setAntiAlias(this.context, this.antiAlias);\n            this.blitSurface();\n        },\n\n        /**\n         * save the canvas context\n         * @name save\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        save : function () {\n            this.backBufferContext2D.save();\n        },\n\n        /**\n         * restores the canvas context\n         * @name restore\n         * @memberOf me.CanvasRenderer\n         * @function\n         */\n        restore : function () {\n            this.backBufferContext2D.restore();\n            this.globalColor.glArray[3] = this.backBufferContext2D.globalAlpha;\n        },\n\n        /**\n         * rotates the canvas context\n         * @name rotate\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} angle in radians\n         */\n        rotate : function (angle) {\n            this.backBufferContext2D.rotate(angle);\n        },\n\n        /**\n         * scales the canvas context\n         * @name scale\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         */\n        scale : function (x, y) {\n            this.backBufferContext2D.scale(x, y);\n        },\n\n        /**\n         * Sets the fill & stroke style colors for the context.\n         * @name setColor\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {me.Color|String} color css color value\n         */\n        setColor : function (color) {\n            this.backBufferContext2D.strokeStyle =\n            this.backBufferContext2D.fillStyle = (\n                color instanceof me.Color ?\n                color.toRGBA() :\n                color\n            );\n        },\n\n        /**\n         * Sets the global alpha on the canvas context\n         * @name setGlobalAlpha\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} alpha 0.0 to 1.0 values accepted.\n         */\n        setGlobalAlpha : function (a) {\n            this.backBufferContext2D.globalAlpha = this.globalColor.glArray[3] = a;\n        },\n\n        /**\n         * sets the line width on the context\n         * @name setLineWidth\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} width Line width\n         */\n        setLineWidth : function (width) {\n            this.backBufferContext2D.lineWidth = width;\n        },\n\n        /**\n         * Stroke an arc at the specified coordinates with given radius, start and end points\n         * @name strokeArc\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x arc center point x-axis\n         * @param {Number} y arc center point y-axis\n         * @param {Number} radius\n         * @param {Number} start start angle in radians\n         * @param {Number} end end angle in radians\n         * @param {Boolean} [antiClockwise=false] draw arc anti-clockwise\n         */\n        strokeArc : function (x, y, radius, start, end, antiClockwise) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.save();\n            this.backBufferContext2D.beginPath();\n            this.backBufferContext2D.translate(x + radius, y + radius);\n            this.backBufferContext2D.arc(0, 0, radius, start, end, antiClockwise || false);\n            this.backBufferContext2D.stroke();\n            this.backBufferContext2D.closePath();\n            this.restore();\n        },\n\n        /**\n         * Stroke an ellipse at the specified coordinates with given radius, start and end points\n         * @name strokeEllipse\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x arc center point x-axis\n         * @param {Number} y arc center point y-axis\n         * @param {Number} w horizontal radius of the ellipse\n         * @param {Number} h vertical radius of the ellipse\n         */\n        strokeEllipse : function (x, y, w, h) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.save();\n            this.context.beginPath();\n            var hw = w,\n                hh = h,\n                lx = x - hw,\n                rx = x + hw,\n                ty = y - hh,\n                by = y + hh;\n\n            var xmagic = hw * 0.551784,\n                ymagic = hh * 0.551784,\n                xmin = x - xmagic,\n                xmax = x + xmagic,\n                ymin = y - ymagic,\n                ymax = y + ymagic;\n\n            this.backBufferContext2D.moveTo(x, ty);\n            this.backBufferContext2D.bezierCurveTo(xmax, ty, rx, ymin, rx, y);\n            this.backBufferContext2D.bezierCurveTo(rx, ymax, xmax, by, x, by);\n            this.backBufferContext2D.bezierCurveTo(xmin, by, lx, ymax, lx, y);\n            this.backBufferContext2D.bezierCurveTo(lx, ymin, xmin, ty, x, ty);\n            this.backBufferContext2D.stroke();\n            this.restore();\n        },\n\n        /**\n         * Stroke a line of the given two points\n         * @name strokeLine\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} startX the start x coordinate\n         * @param {Number} startY the start y coordinate\n         * @param {Number} endX the end x coordinate\n         * @param {Number} endY the end y coordinate\n         */\n        strokeLine : function (startX, startY, endX, endY) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.save();\n            this.backBufferContext2D.beginPath();\n            this.backBufferContext2D.moveTo(startX, startY);\n            this.backBufferContext2D.lineTo(endX, endY);\n            this.backBufferContext2D.stroke();\n            this.restore();\n        },\n\n        /**\n         * Strokes a me.Polygon on the screen with a specified color\n         * @name strokePolygon\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {me.Polygon} poly the shape to draw\n         */\n        strokePolygon : function (poly) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.save();\n            this.backBufferContext2D.translate(poly.pos.x, poly.pos.y);\n            this.backBufferContext2D.beginPath();\n            this.backBufferContext2D.moveTo(poly.points[0].x, poly.points[0].y);\n            var point;\n            for (var i = 1; i < poly.points.length; i++) {\n                point = poly.points[i];\n                this.backBufferContext2D.lineTo(point.x, point.y);\n            }\n            this.backBufferContext2D.lineTo(poly.points[0].x, poly.points[0].y);\n            this.backBufferContext2D.stroke();\n            this.backBufferContext2D.closePath();\n            this.backBufferContext2D.translate(-poly.pos.x, -poly.pos.y);\n            this.restore();\n        },\n\n        /**\n         * Stroke a rectangle at the specified coordinates with a given color\n         * @name strokeRect\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        strokeRect : function (x, y, width, height) {\n            if (this.backBufferContext2D.globalAlpha < 1 / 255) {\n                // Fast path: don't draw fully transparent\n                return;\n            }\n            this.backBufferContext2D.strokeRect(x, y, width, height);\n        },\n\n        /**\n         * draw the given shape\n         * @name drawShape\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {me.Rect|me.Polygon|me.Line|me.Ellipse} shape a shape object\n         */\n        drawShape : function (shape) {\n            if (shape instanceof me.Rect) {\n                this.strokeRect(shape.left, shape.top, shape.width, shape.height);\n            } else if (shape instanceof me.Line || shape instanceof me.Polygon) {\n                this.strokePolygon(shape);\n            } else if (shape instanceof me.Ellipse) {\n                if (shape.radiusV.x === shape.radiusV.y) {\n                    // it's a circle\n                    this.strokeArc(\n                        shape.pos.x - shape.radius,\n                        shape.pos.y - shape.radius,\n                        shape.radius,\n                        0,\n                        2 * Math.PI\n                    );\n                } else {\n                    // it's an ellipse\n                    this.strokeEllipse(\n                        shape.pos.x,\n                        shape.pos.y,\n                        shape.radiusV.x,\n                        shape.radiusV.y\n                    );\n                }\n            }\n        },\n\n        /**\n         * Multiply given matrix into the renderer tranformation matrix\n         * @name multiplyMatrix\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {me.Matrix2d} mat2d Matrix to transform by\n         */\n        transform : function (mat2d) {\n            var a = mat2d.val;\n            this.backBufferContext2D.transform(\n                a[0],\n                a[1],\n                a[3],\n                a[4],\n                a[6],\n                a[7]\n            );\n        },\n\n        /**\n         * Translates the context to the given position\n         * @name translate\n         * @memberOf me.CanvasRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         */\n        translate : function (x, y) {\n            this.backBufferContext2D.translate(x, y);\n        }\n\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a local constant for the -(Math.PI / 2) value\n     * @ignore\n     */\n    var nhPI = -(Math.PI / 2);\n\n    /**\n     * A Texture atlas object <br>\n     * For portability, a global reference to this class is available through the default renderer: {@link me.video.renderer}.Texture <br>\n     * <br>\n     * Currently supports : <br>\n     * - [TexturePacker]{@link http://www.codeandweb.com/texturepacker/} : through JSON export <br>\n     * - [ShoeBox]{@link http://renderhjs.net/shoebox/} : through JSON export using the\n     * melonJS setting [file]{@link https://github.com/melonjs/melonJS/raw/master/media/shoebox_JSON_export.sbx} <br>\n     * - Standard (fixed cell size) spritesheet : through a {framewidth:xx, frameheight:xx, anchorPoint:me.Vector2d} object\n     * @class\n     * @extends Object\n     * @memberOf me.CanvasRenderer\n     * @name Texture\n     * @constructor\n     * @param {Object} atlas atlas information. See {@link me.loader.getJSON}\n     * @param {Image} [texture=atlas.meta.image] texture name\n     * @param {Boolean} [cached=false] Use true to skip caching this Texture\n     * @example\n     * // create a texture atlas from a JSON Object\n     * texture = new me.video.renderer.Texture(\n     *     me.loader.getJSON(\"texture\"),\n     *     me.loader.getImage(\"texture\")\n     * );\n     *\n     * // create a texture atlas for a spritesheet, with (optional) an anchorPoint in the center of each frame\n     * texture = new me.video.renderer.Texture(\n     *     { framewidth : 32, frameheight : 32, anchorPoint : new me.Vector2d(0.5, 0.5) },\n     *     me.loader.getImage(\"spritesheet\")\n     * );\n     */\n    me.CanvasRenderer.prototype.Texture = me.Object.extend(\n    /** @scope me.video.renderer.Texture.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (atlas, texture, cached) {\n            /**\n             * to identify the atlas format (e.g. texture packer)\n             * @ignore\n             */\n            this.format = null;\n\n            /**\n             * the image texture itself (FIXME: This should be named `image`)\n             * @ignore\n             */\n            this.texture = texture || null;\n\n            /**\n             * the atlas dictionnary\n             * @ignore\n             */\n            this.atlas = null;\n\n            if (typeof (atlas) !== \"undefined\") {\n\n                if (typeof(atlas.meta) !== \"undefined\") {\n                    // Texture Packer\n                    if (atlas.meta.app.includes(\"texturepacker\")) {\n                        this.format = \"texturepacker\";\n                        // set the texture\n                        if (typeof(texture) === \"undefined\") {\n                            var image = atlas.meta.image;\n                            this.texture = me.utils.getImage(image);\n                            if (!this.texture) {\n                                throw new me.video.renderer.Texture.Error(\n                                    \"Atlas texture '\" + image + \"' not found\"\n                                );\n                            }\n                        }\n                        this.repeat = \"no-repeat\";\n                    }\n                    // ShoeBox\n                    else if (atlas.meta.app.includes(\"ShoeBox\")) {\n                        if (!atlas.meta.exporter || !atlas.meta.exporter.includes(\"melonJS\")) {\n                            throw new me.video.renderer.Texture.Error(\n                                \"ShoeBox requires the JSON exporter : \" +\n                                \"https://github.com/melonjs/melonJS/tree/master/media/shoebox_JSON_export.sbx\"\n                            );\n                        }\n                        this.format = \"ShoeBox\";\n                        this.repeat = \"no-repeat\";\n                    }\n                    // Internal texture atlas\n                    else if (atlas.meta.app.includes(\"melonJS\")) {\n                        this.format = \"melonJS\";\n                        this.repeat = atlas.meta.repeat || \"no-repeat\";\n                    }\n                    // initialize the atlas\n                    this.atlas = this.build(atlas);\n\n                } else {\n                    // a regular spritesheet ?\n                    if (typeof(atlas.framewidth) !== \"undefined\" &&\n                        typeof(atlas.frameheight) !== \"undefined\") {\n                        this.format = \"Spritesheet (fixed cell size)\";\n                        if (typeof(texture) !== undefined) {\n                            // overwrite if specified\n                            atlas.image = texture;\n                        }\n                        // initialize the atlas\n                        this.atlas = this.buildFromSpriteSheet(atlas);\n                        this.repeat = \"no-repeat\";\n                    }\n                }\n            }\n            // if format not recognized\n            if (!this.atlas) {\n                throw new me.video.renderer.Texture.Error(\"texture atlas format not supported\");\n            }\n\n            // Add self to TextureCache\n            if (!cached) {\n                me.video.renderer.cache.put(this.texture, this);\n            }\n        },\n\n        /**\n         * @ignore\n         */\n        build : function (data) {\n            var atlas = {};\n            data.frames.forEach(function (frame) {\n                // fix wrongly formatted JSON (e.g. last dummy object in ShoeBox)\n                if (frame.hasOwnProperty(\"filename\")) {\n                    // Source coordinates\n                    var s = frame.frame;\n\n                    var originX, originY;\n                    // Pixel-based offset origin from the top-left of the source frame\n                    var hasTextureAnchorPoint = (frame.spriteSourceSize && frame.sourceSize && frame.pivot);\n                    if (hasTextureAnchorPoint) {\n                        originX = (frame.sourceSize.w * frame.pivot.x) - ((frame.trimmed) ? frame.spriteSourceSize.x : 0);\n                        originY = (frame.sourceSize.h * frame.pivot.y) - ((frame.trimmed) ? frame.spriteSourceSize.y : 0);\n                    }\n\n                    atlas[frame.filename] = {\n                        name         : frame.filename, // frame name\n                        offset       : new me.Vector2d(s.x, s.y),\n                        anchorPoint  : (hasTextureAnchorPoint) ? new me.Vector2d(originX / s.w, originY / s.h) : null,\n                        width        : s.w,\n                        height       : s.h,\n                        angle        : (frame.rotated === true) ? nhPI : 0\n                    };\n                }\n            });\n            return atlas;\n        },\n\n        /**\n         * build an atlas from the given spritesheet\n         * @ignore\n         */\n        buildFromSpriteSheet : function (data) {\n            var atlas = {};\n            var image = data.image;\n            var spacing = data.spacing || 0;\n            var margin = data.margin || 0;\n\n            var width = image.width;\n            var height = image.height;\n\n            // calculate the sprite count (line, col)\n            var spritecount = new me.Vector2d(\n                ~~((width - margin + spacing) / (data.framewidth + spacing)),\n                ~~((height - margin + spacing) / (data.frameheight + spacing))\n            );\n\n            // verifying the texture size\n            if ((width % (data.framewidth + spacing)) !== 0 ||\n                (height % (data.frameheight + spacing)) !== 0) {\n                // \"truncate size\"\n                width = spritecount.x * (data.framewidth + spacing);\n                height = spritecount.y * (data.frameheight + spacing);\n                // warning message\n                console.warn(\n                    \"Spritesheet Texture for image: \" + image.src +\n                    \" is not divisible by \" + (data.framewidth + spacing) +\n                    \"x\" + (data.frameheight + spacing) +\n                    \", truncating effective size to \" + width + \"x\" + height\n                );\n            }\n\n            // build the local atlas\n            for (var frame = 0, count = spritecount.x * spritecount.y; frame < count ; frame++) {\n                atlas[\"\" + frame] = {\n                    name: \"\" + frame,\n                    offset: new me.Vector2d(\n                        margin + (spacing + data.framewidth) * (frame % spritecount.x),\n                        margin + (spacing + data.frameheight) * ~~(frame / spritecount.x)\n                    ),\n                    anchorPoint: (data.anchorPoint || null),\n                    width: data.framewidth,\n                    height: data.frameheight,\n                    angle: 0\n                };\n            }\n\n            return atlas;\n        },\n\n        /**\n         * return the Atlas dictionnary\n         * @name getAtlas\n         * @memberOf me.CanvasRenderer.Texture\n         * @function\n         * @return {Object}\n         */\n        getAtlas : function () {\n            return this.atlas;\n        },\n\n        /**\n         * return the Atlas texture\n         * @name getTexture\n         * @memberOf me.CanvasRenderer.Texture\n         * @function\n         * @return {Image}\n         */\n        getTexture : function () {\n            return this.texture;\n        },\n\n        /**\n         * return a normalized region/frame information for the specified sprite name\n         * @name getRegion\n         * @memberOf me.CanvasRenderer.Texture\n         * @function\n         * @param {String} name name of the sprite\n         * @return {Object}\n         */\n        getRegion : function (name) {\n            return this.atlas[name];\n        },\n\n        /**\n         * Create a sprite object using the first region found using the specified name\n         * @name createSpriteFromName\n         * @memberOf me.CanvasRenderer.Texture\n         * @function\n         * @param {String} name name of the sprite\n         * @param {Object} [settings] Additional settings passed to the {@link me.Sprite} contructor\n         * @return {me.Sprite}\n         * @example\n         * // create a new texture atlas object under the `game` namespace\n         * game.texture = new me.video.renderer.Texture(\n         *    me.loader.getJSON(\"texture\"),\n         *    me.loader.getImage(\"texture\")\n         * );\n         * ...\n         * ...\n         * // add the coin sprite as renderable for the entity\n         * this.renderable = game.texture.createSpriteFromName(\"coin.png\");\n         * // set the renderable position to bottom center\n         * this.anchorPoint.set(0.5, 1.0);\n         */\n        createSpriteFromName : function (name, settings) {\n            // instantiate a new sprite object\n            return me.pool.pull(\n                \"me.Sprite\",\n                0, 0,\n                Object.assign({\n                    image: this,\n                    region : name\n                }, settings || {})\n            );\n        },\n\n        /**\n         * Create an animation object using the first region found using all specified names\n         * @name createAnimationFromName\n         * @memberOf me.CanvasRenderer.Texture\n         * @function\n         * @param {String[]|Number[]} names list of names for each sprite\n         * (when manually creating a Texture out of a spritesheet, only numeric values are authorized)\n         * @param {Object} [settings] Additional settings passed to the {@link me.AnimationSheet} contructor\n         * @return {me.AnimationSheet}\n         * @example\n         * // create a new texture atlas object under the `game` namespace\n         * game.texture = new me.video.renderer.Texture(\n         *     me.loader.getJSON(\"texture\"),\n         *     me.loader.getImage(\"texture\")\n         * );\n         *\n         * // create a new animationSheet as renderable for the entity\n         * this.renderable = game.texture.createAnimationFromName([\n         *     \"walk0001.png\", \"walk0002.png\", \"walk0003.png\",\n         *     \"walk0004.png\", \"walk0005.png\", \"walk0006.png\",\n         *     \"walk0007.png\", \"walk0008.png\", \"walk0009.png\",\n         *     \"walk0010.png\", \"walk0011.png\"\n         * ]);\n         *\n         * // define an additional basic walking animation\n         * this.renderable.addAnimation (\"simple_walk\", [0,2,1]);\n         * // you can also use frame name to define your animation\n         * this.renderable.addAnimation (\"speed_walk\", [\"walk0007.png\", \"walk0008.png\", \"walk0009.png\", \"walk0010.png\"]);\n         * // set the default animation\n         * this.renderable.setCurrentAnimation(\"simple_walk\");\n         * // set the renderable position to bottom center\n         * this.anchorPoint.set(0.5, 1.0);\n         */\n        createAnimationFromName : function (names, settings) {\n            var tpAtlas = [], indices = {};\n            // iterate through the given names\n            // and create a \"normalized\" atlas\n            for (var i = 0; i < names.length;++i) {\n                tpAtlas[i] = this.getRegion(names[i]);\n                indices[names[i]] = i;\n                if (tpAtlas[i] == null) {\n                    // throw an error\n                    throw new me.video.renderer.Texture.Error(\"Texture - region for \" + names[i] + \" not found\");\n                }\n            }\n            // instantiate a new animation sheet object\n            return new me.AnimationSheet(0, 0, Object.assign({\n                image: this.texture,\n                framewidth: 0,\n                frameheight: 0,\n                margin: 0,\n                spacing: 0,\n                atlas: tpAtlas,\n                atlasIndices: indices\n            }, settings || {}));\n        }\n    });\n\n    /**\n     * Base class for Texture exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.CanvasRenderer.Texture\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.CanvasRenderer.prototype.Texture.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.CanvasRenderer.Texture.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016 Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * The WebGL Shader singleton <br>\n     * There is no constructor function for me.video.shader\n     * @namespace me.video.shader\n     * @memberOf me.video\n     */\n    me.video.shader = (function () {\n        /**\n         * Public API\n         * @ignore\n         */\n        var api = {};\n\n        /**\n         * Compile GLSL into a shader object\n         * @private\n         */\n        function getShader(gl, type, source) {\n            var shader = gl.createShader(type);\n            gl.shaderSource(shader, source);\n            gl.compileShader(shader);\n\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                throw new me.video.Error(gl.getShaderInfoLog(shader));\n            }\n\n            return shader;\n        }\n\n        /**\n         * Hash map of GLSL data types to WebGL Uniform methods\n         * @private\n         */\n        var fnHash = {\n            \"bool\"      : \"1i\",\n            \"int\"       : \"1i\",\n            \"float\"     : \"1f\",\n            \"vec2\"      : \"2fv\",\n            \"vec3\"      : \"3fv\",\n            \"vec4\"      : \"4fv\",\n            \"bvec2\"     : \"2iv\",\n            \"bvec3\"     : \"3iv\",\n            \"bvec4\"     : \"4iv\",\n            \"ivec2\"     : \"2iv\",\n            \"ivec3\"     : \"3iv\",\n            \"ivec4\"     : \"4iv\",\n            \"mat2\"      : \"Matrix2fv\",\n            \"mat3\"      : \"Matrix3fv\",\n            \"mat4\"      : \"Matrix4fv\",\n            \"sampler2D\" : \"1i\",\n        };\n\n        /**\n         * Create a shader program (with bindings) using the given GLSL sources\n         * @name createShader\n         * @memberOf me.video.shader\n         * @function\n         * @param {WebGLContext} gl WebGL Context\n         * @param {String} vertex Vertex shader source\n         * @param {String} fragment Fragment shader source\n         * @return {Object} A reference to the WebGL Shader Program\n         */\n        api.createShader = function (gl, vertex, fragment) {\n            var program = {\n                    \"attributes\"    : {},\n                    \"uniforms\"      : {},\n                    \"handle\"        : null,\n                },\n                handle = program.handle = gl.createProgram(),\n                attrRx = /attribute\\s+\\w+\\s+(\\w+)/g,\n                uniRx = /uniform\\s+(\\w+)\\s+(\\w+)/g,\n                attributes = [],\n                uniforms = {},\n                match,\n                descriptor = {},\n                locations = {};\n\n            gl.attachShader(handle, getShader(gl, gl.VERTEX_SHADER, vertex));\n            gl.attachShader(handle, getShader(gl, gl.FRAGMENT_SHADER, fragment));\n            gl.linkProgram(handle);\n\n            if (!gl.getProgramParameter(handle, gl.LINK_STATUS)) {\n                throw new me.video.Error(gl.getProgramInfoLog(handle));\n            }\n\n            gl.useProgram(handle);\n\n            // Detect all attribute names\n            while ((match = attrRx.exec(vertex))) {\n                attributes.push(match[1]);\n            }\n\n            // Detect all uniform names and types\n            [ vertex, fragment ].forEach(function (shader) {\n                while ((match = uniRx.exec(shader))) {\n                    uniforms[match[2]] = match[1];\n                }\n            });\n\n            // Get attribute references\n            attributes.forEach(function (attr) {\n                program.attributes[attr] = gl.getAttribLocation(handle, attr);\n                gl.enableVertexAttribArray(program.attributes[attr]);\n            });\n\n            // Get uniform references\n            Object.keys(uniforms).forEach(function (name) {\n                var type = uniforms[name];\n                locations[name] = gl.getUniformLocation(handle, name);\n\n                descriptor[name] = {\n                    \"get\" : (function (name) {\n                        /**\n                         * A getter for the uniform location\n                         * @ignore\n                         */\n                        return function () {\n                            return locations[name];\n                        };\n                    })(name),\n                    \"set\" : (function (name, type, fn) {\n                        if (type.indexOf(\"mat\") === 0) {\n                            /**\n                             * A generic setter for uniform matrices\n                             * @ignore\n                             */\n                            return function (val) {\n                                gl[fn](locations[name], false, val);\n                            };\n                        }\n                        else {\n                            /**\n                            * A generic setter for uniform vectors\n                            * @ignore\n                            */\n                            return function (val) {\n                                var fnv = fn;\n                                if (val.length && fn.substr(-1) !== \"v\") {\n                                    fnv += \"v\";\n                                }\n                                gl[fnv](locations[name], val);\n                            };\n                        }\n                    })(name, type, \"uniform\" + fnHash[type]),\n                };\n            });\n            Object.defineProperties(program.uniforms, descriptor);\n\n            return program;\n        };\n\n        /**\n         * Create a texture from an image\n         * @name createTexture\n         * @memberOf me.video.shader\n         * @function\n         * @param {WebGLContext} gl WebGL Context\n         * @param {Number} unit Destination texture unit\n         * @param {Image|Canvas|ImageData|UInt8Array[]|Float32Array[]} image Source image\n         * @param {String} [repeat=\"no-repeat\"] Image repeat behavior (see {@link me.ImageLayer#repeat})\n         * @param {Number} [w] Source image width (Only use with UInt8Array[] or Float32Array[] source image)\n         * @param {Number} [h] Source image height (Only use with UInt8Array[] or Float32Array[] source image)\n         * @param {Number} [b] Source image border (Only use with UInt8Array[] or Float32Array[] source image)\n         * @return {WebGLTexture} A texture object\n         */\n        api.createTexture = function (gl, unit, image, repeat, w, h, b) {\n            repeat = repeat || \"no-repeat\";\n\n            var texture = gl.createTexture(),\n                filter = me.video.renderer.antiAlias ? gl.LINEAR : gl.NEAREST,\n                rs = (repeat.search(/^repeat(-x)?$/) === 0) ? gl.REPEAT : gl.CLAMP_TO_EDGE,\n                rt = (repeat.search(/^repeat(-y)?$/) === 0) ? gl.REPEAT : gl.CLAMP_TO_EDGE;\n\n            gl.activeTexture(gl.TEXTURE0 + unit);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, rs);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, rt);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n            if (w || h || b) {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, b, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            }\n            else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            }\n\n            return texture;\n        };\n\n        return api;\n    })();\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016 Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * a WebGL renderer object\n     * @extends me.Renderer\n     * @namespace me.WebGLRenderer\n     * @memberOf me\n     * @constructor\n     * @param {Canvas} canvas The html canvas tag to draw to on screen.\n     * @param {Number} width The width of the canvas without scaling\n     * @param {Number} height The height of the canvas without scaling\n     * @param {Object} [options] The renderer parameters\n     * @param {Boolean} [options.doubleBuffering=false] Whether to enable double buffering\n     * @param {Boolean} [options.antiAlias=false] Whether to enable anti-aliasing\n     * @param {Boolean} [options.transparent=false] Whether to enable transparency on the canvas (performance hit when enabled)\n     * @param {Number} [options.zoomX=width] The actual width of the canvas with scaling applied\n     * @param {Number} [options.zoomY=height] The actual height of the canvas with scaling applied\n     * @param {me.WebGLRenderer.Compositor} [options.compositor] A class that implements the compositor API\n     */\n    me.WebGLRenderer = me.Renderer.extend(\n    /** @scope me.WebGLRenderer.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (c, width, height, options) {\n            me.Renderer.prototype.init.apply(this, [c, width, height, options]);\n\n            /**\n             * The WebGL context\n             * @name gl\n             * @memberOf me.WebGLRenderer\n             */\n            this.gl = this.getContextGL(c, !this.transparent);\n            var gl = this.gl;\n\n            /**\n             * @ignore\n             */\n            this.colorStack = [];\n\n            /**\n             * @ignore\n             */\n            this._matrixStack = [];\n\n            /**\n             * @ignore\n             */\n            this._linePoints = [\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d()\n            ];\n\n            /**\n             * The global matrix. Used for transformations on the overall scene\n             * @name globalMatrix\n             * @type me.Matrix3d\n             * @memberOf me.WebGLRenderer\n             */\n            this.globalMatrix = new me.Matrix2d();\n\n            // Create a compositor\n            var Compositor = options.compositor || me.WebGLRenderer.Compositor;\n            this.compositor = new Compositor(\n                gl,\n                this.globalMatrix,\n                this.globalColor\n            );\n\n            // Create a texture cache\n            this.cache = new me.Renderer.TextureCache(\n                this.compositor.maxTextures\n            );\n\n            // FIXME: Cannot reference me.video.renderer yet\n            me.video.renderer = this;\n\n            this.createFillTexture();\n            this.createFontTexture();\n\n            // Configure the WebGL viewport\n            this.scaleCanvas(1, 1);\n\n            return this;\n        },\n\n        /**\n         * @ignore\n         */\n        createFillTexture : function () {\n            // Create a 1x1 white texture for fill operations\n            var img = new Uint8Array([255, 255, 255, 255]);\n\n            /**\n             * @ignore\n             */\n            this.fillTexture = new this.Texture({\n                // FIXME: Create a texture atlas helper function\n                \"meta\" : {\n                    \"app\" : \"melonJS\",\n                    \"size\" : { \"w\" : 1, \"h\" : 1 }\n                },\n                \"frames\" : [{\n                    \"filename\" : \"default\",\n                    \"frame\" : { \"x\" : 0, \"y\" : 0, \"w\" : 1, \"h\" : 1 }\n                }]\n            }, img);\n\n            this.compositor.uploadTexture(\n                this.fillTexture,\n                1,\n                1,\n                0\n            );\n        },\n\n        /**\n         * @ignore\n         */\n        createFontTexture : function () {\n            var img = me.video.createCanvas(\n                this.backBufferCanvas.width,\n                this.backBufferCanvas.height\n            );\n\n            /**\n             * @ignore\n             */\n            this.fontContext2D = this.getContext2d(img);\n\n            /**\n             * @ignore\n             */\n            this.fontTexture = new this.Texture({\n                // FIXME: Create a texture atlas helper function\n                \"meta\" : {\n                    \"app\" : \"melonJS\",\n                    \"size\" : {\n                        \"w\" : this.backBufferCanvas.width,\n                        \"h\" : this.backBufferCanvas.height\n                    }\n                },\n                \"frames\" : [{\n                    \"filename\" : \"default\",\n                    \"frame\" : {\n                        \"x\" : 0,\n                        \"y\" : 0,\n                        \"w\" : this.backBufferCanvas.width,\n                        \"h\" : this.backBufferCanvas.height\n                    }\n                }]\n            }, img);\n\n            this.compositor.uploadTexture(this.fontTexture);\n        },\n\n        /**\n         * Create a pattern with the specified repition\n         * @name createPattern\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {image} image Source image\n         * @param {String} repeat Define how the pattern should be repeated\n         * @return {me.video.renderer.Texture}\n         * @see me.ImageLayer#repeat\n         * @example\n         * var tileable   = renderer.createPattern(image, \"repeat\");\n         * var horizontal = renderer.createPattern(image, \"repeat-x\");\n         * var vertical   = renderer.createPattern(image, \"repeat-y\");\n         * var basic      = renderer.createPattern(image, \"no-repeat\");\n         */\n        createPattern : function (image, repeat) {\n            var texture = new this.Texture({\n                // FIXME: Create a texture atlas helper function\n                \"meta\" : {\n                    \"app\" : \"melonJS\",\n                    \"size\" : { \"w\" : image.width, \"h\" : image.height },\n                    \"repeat\" : repeat\n                },\n                \"frames\" : [{\n                    \"filename\" : \"default\",\n                    \"frame\" : { \"x\" : 0, \"y\" : 0, \"w\" : image.width, \"h\" : image.height }\n                }]\n            }, image);\n\n            // FIXME: Remove old cache entry and texture when changing the repeat mode\n            this.compositor.uploadTexture(texture);\n\n            return texture;\n        },\n\n        /**\n         * Flush the compositor to the frame buffer\n         * @name blitSurface\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        blitSurface : function () {\n            this.compositor.flush();\n        },\n\n        /**\n         * Clears the gl context. Accepts a gl context or defaults to stored gl renderer.\n         * @name clearSurface\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {WebGLContext} [ctx=null] For compatibility only.\n         * @param {me.Color|String} color CSS color.\n         * @param {Boolean} [opaque=false] Allow transparency [default] or clear the surface completely [true]\n         */\n        clearSurface : function (ctx, col, opaque) {\n            var color = this.globalColor.clone();\n            var matrix = this.globalMatrix.clone();\n            this.globalColor.copy(col);\n            this.globalMatrix.identity();\n\n            if (opaque) {\n                this.compositor.clear();\n            }\n            else {\n                this.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            }\n\n            this.globalMatrix.copy(matrix);\n            this.globalColor.copy(color);\n            me.pool.push(color);\n        },\n\n        /**\n         * @ignore\n         */\n        drawFont : function (bounds) {\n            // Flush the compositor so we can upload a new texture\n            this.compositor.flush();\n\n            // Force-upload the new texture\n            this.compositor.uploadTexture(this.fontTexture, 0, 0, 0, true);\n\n            // Add the new quad\n            var key = bounds.pos.x + \",\" + bounds.pos.y + \",\" + bounds.width + \",\" + bounds.height;\n            this.compositor.addQuad(\n                this.fontTexture,\n                key,\n                bounds.pos.x,\n                bounds.pos.y,\n                bounds.width,\n                bounds.height\n            );\n\n            // Clear font context2D\n            this.fontContext2D.clearRect(0, 0, this.backBufferCanvas.width, this.backBufferCanvas.height);\n        },\n\n        /**\n         * Draw an image to the gl context\n         * @name drawImage\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Image} image Source image\n         * @param {Number} sx Source x-coordinate\n         * @param {Number} sy Source y-coordinate\n         * @param {Number} sw Source width\n         * @param {Number} sh Source height\n         * @param {Number} dx Destination x-coordinate\n         * @param {Number} dy Destination y-coordinate\n         * @param {Number} dw Destination width\n         * @param {Number} dh Destination height\n         * @example\n         * // Can be used in three ways:\n         * renderer.drawImage(image, dx, dy);\n         * renderer.drawImage(image, dx, dy, dw, dh);\n         * renderer.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n         * // dx, dy, dw, dh being the destination target & dimensions. sx, sy, sw, sh being the position & dimensions to take from the image\n         */\n        drawImage : function (image, sx, sy, sw, sh, dx, dy, dw, dh) {\n            // TODO: Replace the function signature with:\n            // drawImage(Image|Object, sx, sy, sw, sh, dx, dy, dw, dh)\n            if (typeof sw === \"undefined\") {\n                sw = dw = image.width;\n                sh = dh = image.height;\n                dx = sx;\n                dy = sy;\n                sx = 0;\n                sy = 0;\n            }\n            else if (typeof dx === \"undefined\") {\n                dx = sx;\n                dy = sy;\n                dw = sw;\n                dh = sh;\n                sw = image.width;\n                sh = image.height;\n                sx = 0;\n                sy = 0;\n            }\n\n            var key = sx + \",\" + sy + \",\" + sw + \",\" + sh;\n            this.compositor.addQuad(this.cache.get(image), key, dx, dy, dw, dh);\n        },\n\n        /**\n         * Draw a pattern within the given rectangle.\n         * @name drawPattern\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {me.video.renderer.Texture} pattern Pattern object\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         * @see me.WebGLRenderer#createPattern\n         */\n        drawPattern : function (pattern, x, y, width, height) {\n            var key = \"0,0,\" + width + \",\" + height;\n            this.compositor.addQuad(pattern, key, x, y, width, height);\n        },\n\n        /**\n         * Draw a filled rectangle at the specified coordinates\n         * @name fillRect\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        fillRect : function (x, y, width, height) {\n            this.compositor.addQuad(this.fillTexture, \"default\", x, y, width, height);\n        },\n\n        /**\n         * return a reference to the screen canvas corresponding WebGL Context<br>\n         * @name getScreenContext\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @return {WebGLContext}\n         */\n        getScreenContext : function () {\n            return this.gl;\n        },\n\n        /**\n         * Returns the WebGL Context object of the given Canvas\n         * @name getContextGL\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Canvas} canvas\n         * @param {Boolean} [opaque=false] Use true to disable transparency\n         * @return {WebGLContext}\n         */\n        getContextGL : function (c, opaque) {\n            if (typeof c === \"undefined\" || c === null) {\n                throw new me.video.Error(\n                    \"You must pass a canvas element in order to create \" +\n                    \"a GL context\"\n                );\n            }\n\n            if (typeof c.getContext === \"undefined\") {\n                throw new me.video.Error(\n                    \"Your browser does not support WebGL.\"\n                );\n            }\n\n            var attr = {\n                antialias : this.antiAlias,\n                alpha : !opaque,\n            };\n            return (\n                c.getContext(\"webgl\", attr) ||\n                c.getContext(\"experimental-webgl\", attr)\n            );\n        },\n\n        /**\n         * Returns the WebGLContext instance for the renderer\n         * return a reference to the system 2d Context\n         * @name getContext\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @return {WebGLContext}\n         */\n        getContext : function () {\n            return this.gl;\n        },\n\n        /**\n         * resets the gl transform to identity\n         * @name resetTransform\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        resetTransform : function () {\n            this.globalMatrix.identity();\n        },\n\n        /**\n         * Reset context state\n         * @name reset\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        reset : function () {\n            this.globalMatrix.identity();\n            this.cache.reset();\n            this.compositor.reset();\n            this.createFillTexture();\n            this.createFontTexture();\n        },\n\n        /**\n         * scales the canvas & GL Context\n         * @name scaleCanvas\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        scaleCanvas : function (scaleX, scaleY) {\n            var w = this.canvas.width * scaleX;\n            var h = this.canvas.height * scaleY;\n\n            // adjust CSS style for High-DPI devices\n            if (me.device.getPixelRatio() > 1) {\n                this.canvas.style.width = (w / me.device.getPixelRatio()) + \"px\";\n                this.canvas.style.height = (h / me.device.getPixelRatio()) + \"px\";\n            }\n            else {\n                this.canvas.style.width = w + \"px\";\n                this.canvas.style.height = h + \"px\";\n            }\n\n            this.compositor.setProjection(this.canvas.width, this.canvas.height);\n        },\n\n        /**\n         * restores the canvas context\n         * @name restore\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        restore : function () {\n            var color = this.colorStack.pop();\n            me.pool.push(color);\n            this.globalColor.copy(color);\n            this.globalMatrix.copy(this._matrixStack.pop());\n        },\n\n        /**\n         * rotates the uniform matrix\n         * @name rotate\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} angle in radians\n         */\n        rotate : function (angle) {\n            this.globalMatrix.rotate(angle);\n        },\n\n        /**\n         * save the canvas context\n         * @name save\n         * @memberOf me.WebGLRenderer\n         * @function\n         */\n        save : function () {\n            this.colorStack.push(this.globalColor.clone());\n            this._matrixStack.push(this.globalMatrix.clone());\n        },\n\n        /**\n         * scales the uniform matrix\n         * @name scale\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         */\n        scale : function (x, y) {\n            this.globalMatrix.scale(x, y);\n        },\n\n        /**\n         * not used by this renderer?\n         * @ignore\n         */\n        setAntiAlias : function (context, enable) {\n            me.Renderer.prototype.setAntiAlias.apply(this, [context, enable]);\n            // TODO: perhaps handle GLNEAREST or other options with texture binding\n        },\n\n        /**\n         * return the current global alpha\n         * @name globalAlpha\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @return {Number}\n         */\n        setGlobalAlpha : function (a) {\n            this.globalColor.glArray[3] = a;\n        },\n\n        /**\n         * Sets the color for further draw calls\n         * @name setColor\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {me.Color|String} color css color string.\n         */\n        setColor : function (color) {\n            this.globalColor.copy(color);\n        },\n\n        /**\n         * Set the line width\n         * @name setLineWidth\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} width Line width\n         */\n        setLineWidth : function (width) {\n            this.compositor.lineWidth(width);\n        },\n\n        /**\n         * Stroke an arc at the specified coordinates with given radius, start and end points\n         * @name strokeArc\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x arc center point x-axis\n         * @param {Number} y arc center point y-axis\n         * @param {Number} radius\n         * @param {Number} start start angle in radians\n         * @param {Number} end end angle in radians\n         * @param {Boolean} [antiClockwise=false] draw arc anti-clockwise\n         */\n        strokeArc : function (/*x, y, radius, start, end, antiClockwise*/) {\n            // TODO\n        },\n\n        /**\n         * Stroke an ellipse at the specified coordinates with given radius, start and end points\n         * @name strokeEllipse\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x arc center point x-axis\n         * @param {Number} y arc center point y-axis\n         * @param {Number} w horizontal radius of the ellipse\n         * @param {Number} h vertical radius of the ellipse\n         */\n        strokeEllipse : function (/*x, y, w, h*/) {\n            // TODO\n        },\n\n        /**\n         * Stroke a line of the given two points\n         * @name strokeLine\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} startX the start x coordinate\n         * @param {Number} startY the start y coordinate\n         * @param {Number} endX the end x coordinate\n         * @param {Number} endY the end y coordinate\n         */\n        strokeLine : function (startX, startY, endX, endY) {\n            var points = this._linePoints.slice(0, 2);\n            points[0].x = startX;\n            points[0].y = startY;\n            points[1].x = endX;\n            points[1].y = endY;\n            this.compositor.drawLine(points, true);\n        },\n\n        /**\n         * Strokes a me.Polygon on the screen with a specified color\n         * @name strokePolygon\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {me.Polygon} poly the shape to draw\n         */\n        strokePolygon : function (poly) {\n            var len = poly.points.length,\n                points,\n                i;\n\n            // Grow internal points buffer if necessary\n            for (i = this._linePoints.length; i < len; i++) {\n                this._linePoints.push(new me.Vector2d());\n            }\n\n            points = this._linePoints.slice(0, len);\n            for (i = 0; i < len; i++) {\n                points[i].x = poly.pos.x + poly.points[i].x;\n                points[i].y = poly.pos.y + poly.points[i].y;\n            }\n            this.compositor.drawLine(points);\n        },\n\n        /**\n         * Draw a stroke rectangle at the specified coordinates\n         * @name strokeRect\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */\n        strokeRect : function (x, y, width, height) {\n            var points = this._linePoints.slice(0, 4);\n            points[0].x = x;\n            points[0].y = y;\n            points[1].x = x + width;\n            points[1].y = y;\n            points[2].x = x + width;\n            points[2].y = y + height;\n            points[3].x = x;\n            points[3].y = y + height;\n            this.compositor.drawLine(points);\n        },\n\n        /**\n         * draw the given shape\n         * @name drawShape\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {me.Rect|me.Polygon|me.Line|me.Ellipse} shape a shape object\n         */\n        drawShape : function (shape) {\n            if (shape instanceof me.Rect) {\n                this.strokeRect(shape.left, shape.top, shape.width, shape.height);\n            } else if (shape instanceof me.Line || shape instanceof me.Polygon) {\n                this.save();\n                this.strokePolygon(shape);\n                this.restore();\n            } else if (shape instanceof me.Ellipse) {\n                this.save();\n                if (shape.radiusV.x === shape.radiusV.y) {\n                    // it's a circle\n                    this.strokeArc(\n                        shape.pos.x - shape.radius,\n                        shape.pos.y - shape.radius,\n                        shape.radius,\n                        0,\n                        2 * Math.PI\n                    );\n                } else {\n                    // it's an ellipse\n                    this.strokeEllipse(\n                        shape.pos.x,\n                        shape.pos.y,\n                        shape.radiusV.x,\n                        shape.radiusV.y\n                    );\n                }\n                this.restore();\n            }\n        },\n\n        /**\n         * Multiply given matrix into the renderer tranformation matrix\n         * @name multiplyMatrix\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {me.Matrix2d} mat2d Matrix to transform by\n         */\n        transform : function (mat2d) {\n            this.globalMatrix.multiply(mat2d);\n        },\n\n        /**\n         * Translates the uniform matrix by the given coordinates\n         * @name translate\n         * @memberOf me.WebGLRenderer\n         * @function\n         * @param {Number} x\n         * @param {Number} y\n         */\n        translate : function (x, y) {\n            this.globalMatrix.translate(x, y);\n        }\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A Texture atlas object for WebGL <br>\n     * For portability, a global reference to this class is available through the default renderer: {@link me.video.renderer}.Texture <br>\n     * <br>\n     * Currently supports : <br>\n     * - [TexturePacker]{@link http://www.codeandweb.com/texturepacker/} : through JSON export <br>\n     * - [ShoeBox]{@link http://renderhjs.net/shoebox/} : through JSON export using the\n     * melonJS setting [file]{@link https://github.com/melonjs/melonJS/raw/master/media/shoebox_JSON_export.sbx} <br>\n     * - Standard (fixed cell size) spritesheet : through a {framewidth:xx, frameheight:xx} object\n     * @class\n     * @extends me.CanvasRenderer\n     * @memberOf me.WebGLRenderer\n     * @name Texture\n     * @constructor\n     * @param {Object} atlas atlas information. See {@link me.loader.getJSON}\n     * @param {Image} [texture=atlas.meta.image] texture name\n     * @param {Boolean} [cached=false] Use true to skip caching this Texture\n     * @example\n     * // create a texture atlas from a JSON Object\n     * texture = new me.video.renderer.Texture(\n     *     me.loader.getJSON(\"texture\"),\n     *     me.loader.getImage(\"texture\")\n     * );\n     *\n     * // create a texture atlas for a spritesheet\n     * texture = new me.video.renderer.Texture(\n     *     { framewidth : 32, frameheight : 32 },\n     *     me.loader.getImage(\"spritesheet\")\n     * );\n     */\n    me.WebGLRenderer.prototype.Texture = me.CanvasRenderer.prototype.Texture.extend(\n    /** @scope me.video.renderer.Texture.prototype */\n    {\n        /**\n         * @ignore\n         */\n        build : function (data) {\n            var w = data.meta.size.w;\n            var h = data.meta.size.h;\n            var atlas = me.CanvasRenderer.prototype.Texture.prototype.build.apply(this, [ data ]);\n\n            return this._addStMap(atlas, w, h);\n        },\n\n        /**\n         * @ignore\n         */\n        buildFromSpriteSheet : function (data) {\n            var w = data.image.width;\n            var h = data.image.height;\n            var atlas = me.CanvasRenderer.prototype.Texture.prototype.buildFromSpriteSheet.apply(this, [ data ]);\n\n            return this._addStMap(atlas, w, h);\n        },\n\n        /**\n         * @ignore\n         */\n        _addStMap : function (atlas, w, h) {\n            Object.keys(atlas).forEach(function (frame) {\n                // Source coordinates\n                var s = atlas[frame].offset;\n                var sw = atlas[frame].width;\n                var sh = atlas[frame].height;\n\n                // ST texture coordinates\n                atlas[frame].stMap = new Float32Array([\n                    s.x / w,        // Left\n                    s.y / h,        // Top\n                    (s.x + sw) / w, // Right\n                    (s.y + sh) / h  // Bottom\n                ]);\n\n                // Cache source coordinates\n                // TODO: Remove this when the Batcher only accepts a region name\n                var key = s.x + \",\" + s.y + \",\" + w + \",\" + h;\n                atlas[key] = atlas[frame];\n            });\n            return atlas;\n        },\n\n        /**\n         * @ignore\n         */\n        _insertRegion : function (name, x, y, w, h) {\n            var dw = this.texture.width;\n            var dh = this.texture.height;\n            this.atlas[name] = {\n                name    : name,\n                offset  : new me.Vector2d(x, y),\n                width   : w,\n                height  : h,\n                angle   : 0,\n                stMap   : new Float32Array([\n                    x / dw,         // Left\n                    y / dh,         // Top\n                    (x + w) / dw,   // Right\n                    (y + h) / dh    // Bottom\n                ])\n            };\n\n            return this.atlas[name];\n        }\n    });\n\n    /**\n    * Base class for Texture exception handling.\n    * @ignore\n    */\n    me.WebGLRenderer.prototype.Texture.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.WebGLRenderer.Texture.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016 Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n(function () {\n\n    // Handy constants\n    var VERTEX_SIZE = 2;\n    var COLOR_SIZE = 4;\n    var TEXTURE_SIZE = 1;\n    var REGION_SIZE = 2;\n\n    var ELEMENT_SIZE = VERTEX_SIZE + COLOR_SIZE + TEXTURE_SIZE + REGION_SIZE;\n    var ELEMENT_OFFSET = ELEMENT_SIZE * Float32Array.BYTES_PER_ELEMENT;\n\n    var VERTEX_ELEMENT = 0;\n    var COLOR_ELEMENT = VERTEX_ELEMENT + VERTEX_SIZE;\n    var TEXTURE_ELEMENT = COLOR_ELEMENT + COLOR_SIZE;\n    var REGION_ELEMENT = TEXTURE_ELEMENT + TEXTURE_SIZE;\n\n    var VERTEX_OFFSET = VERTEX_ELEMENT * Float32Array.BYTES_PER_ELEMENT;\n    var COLOR_OFFSET = COLOR_ELEMENT * Float32Array.BYTES_PER_ELEMENT;\n    var TEXTURE_OFFSET = TEXTURE_ELEMENT * Float32Array.BYTES_PER_ELEMENT;\n    var REGION_OFFSET = REGION_ELEMENT * Float32Array.BYTES_PER_ELEMENT;\n\n    var ELEMENTS_PER_QUAD = 4;\n    var INDICES_PER_QUAD = 6;\n\n    var MAX_LENGTH = 16000;\n\n    /**\n     * A WebGL texture Compositor object. This class handles all of the WebGL state<br>\n     * Pushes texture regions into WebGL buffers, automatically flushes to GPU\n     * @extends Object\n     * @namespace me.WebGLRenderer.Compositor\n     * @memberOf me\n     * @constructor\n     * @param {WebGLContext} gl Destination WebGL Context\n     * @param {me.Matrix2d} matrix Global transformation matrix\n     * @param {me.Color} color Global color\n     */\n    me.WebGLRenderer.Compositor = me.Object.extend(\n    /** @scope me.WebGLRenderer.Compositor.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (gl, matrix, color) {\n            /**\n             * The number of quads held in the batch\n             * @name length\n             * @memberOf me.WebGLRenderer.Compositor\n             * @type Number\n             * @readonly\n             */\n            this.length = 0;\n\n            // Hash map of texture units\n            this.units = [];\n            /*\n             * XXX: The GLSL compiler pukes with \"memory exhausted\" when it is\n             * given long if-then-else chains.\n             *\n             * See: http://stackoverflow.com/questions/15828966/glsl-compile-error-memory-exhausted\n             *\n             * Workaround the problem by limiting the max texture support to 24.\n             * The magic number was determined by testing under different UAs.\n             * All Desktop UAs were capable of compiling with 27 fragment shader\n             * samplers. Using 24 seems like a reasonable compromise;\n             *\n             * 24 = 2^4 + 2^3\n             *\n             * As of October 2015, approximately 4.2% of all WebGL-enabled UAs\n             * support more than 24 max textures, according to\n             * http://webglstats.com/\n             */\n            this.maxTextures = Math.min(24, gl.getParameter(\n                gl.MAX_TEXTURE_IMAGE_UNITS\n            ));\n\n            // Vector pool\n            this.v = [\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d()\n            ];\n\n            // WebGL context\n            this.gl = gl;\n\n            // Global transformation matrix\n            this.matrix = matrix;\n\n            // Global color\n            this.color = color;\n\n            // Uniform projection matrix\n            this.uMatrix = new me.Matrix2d();\n\n            // Detect GPU capabilities\n            var precision = (gl.getShaderPrecisionFormat(\n                gl.FRAGMENT_SHADER,\n                gl.HIGH_FLOAT\n            ).precision < 16) ? \"mediump\" : \"highp\";\n\n            // Load and create shader programs\n            this.lineShader = me.video.shader.createShader(\n                this.gl,\n                (function anonymous(ctx){var out='precision highp float;attribute vec2 aVertex;uniform mat3 uMatrix;void main(void){gl_Position=vec4((uMatrix*vec3(aVertex,1)).xy,0,1);}';return out;})(),\n                (function anonymous(ctx){var out='precision '+(ctx.precision)+' float;uniform vec4 uColor;void main(void){gl_FragColor=uColor;}';return out;})({\n                    \"precision\"     : precision\n                })\n            );\n            this.quadShader = me.video.shader.createShader(\n                this.gl,\n                (function anonymous(ctx){var out='precision highp float;attribute vec2 aVertex;attribute vec4 aColor;attribute float aTexture;attribute vec2 aRegion;uniform mat3 uMatrix;varying vec4 vColor;varying float vTexture;varying vec2 vRegion;void main(void){gl_Position=vec4((uMatrix*vec3(aVertex,1)).xy,0,1);vColor=vec4(aColor.rgb*aColor.a,aColor.a);vTexture=aTexture;vRegion=aRegion;}';return out;})(),\n                (function anonymous(ctx){var out='precision '+(ctx.precision)+' float;uniform sampler2D uSampler['+(ctx.maxTextures)+'];varying vec4 vColor;varying float vTexture;varying vec2 vRegion;void main(void){int texture=int(vTexture);if(texture==0){gl_FragColor=texture2D(uSampler[0],vRegion)*vColor;}';for(var i=1;i<ctx.maxTextures-1;i++){out+='else if(texture=='+(i)+'){gl_FragColor=texture2D(uSampler['+(i)+'],vRegion)*vColor;}';}out+='else{gl_FragColor=texture2D(uSampler['+(ctx.maxTextures-1)+'],vRegion)*vColor;}}';return out;})({\n                    \"precision\"     : precision,\n                    \"maxTextures\"   : this.maxTextures\n                })\n            );\n\n            this.shader = this.quadShader.handle;\n\n            // Stream buffer\n            this.sb = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.sb);\n            gl.bufferData(\n                gl.ARRAY_BUFFER,\n                MAX_LENGTH * ELEMENT_OFFSET * ELEMENTS_PER_QUAD,\n                gl.STREAM_DRAW\n            );\n\n            this.sbSize = 256;\n            this.sbIndex = 0;\n\n            // Quad stream buffer\n            this.stream = new Float32Array(\n                this.sbSize * ELEMENT_SIZE * ELEMENTS_PER_QUAD\n            );\n\n            // Index buffer\n            this.ib = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ib);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.createIB(), gl.STATIC_DRAW);\n\n            // Bind attribute pointers for quad shader\n            gl.vertexAttribPointer(\n                this.quadShader.attributes.aVertex,\n                VERTEX_SIZE,\n                gl.FLOAT,\n                false,\n                ELEMENT_OFFSET,\n                VERTEX_OFFSET\n            );\n            gl.vertexAttribPointer(\n                this.quadShader.attributes.aColor,\n                COLOR_SIZE,\n                gl.FLOAT,\n                false,\n                ELEMENT_OFFSET,\n                COLOR_OFFSET\n            );\n            gl.vertexAttribPointer(\n                this.quadShader.attributes.aTexture,\n                TEXTURE_SIZE,\n                gl.FLOAT,\n                false,\n                ELEMENT_OFFSET,\n                TEXTURE_OFFSET\n            );\n            gl.vertexAttribPointer(\n                this.quadShader.attributes.aRegion,\n                REGION_SIZE,\n                gl.FLOAT,\n                false,\n                ELEMENT_OFFSET,\n                REGION_OFFSET\n            );\n\n            this.reset();\n            this.setProjection(gl.canvas.width, gl.canvas.height);\n\n            // Initialize clear color and blend function\n            gl.clearColor(0.0, 0.0, 0.0, 1.0);\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n        },\n\n        /**\n         * Sets the projection matrix with the given size\n         * @name setProjection\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         * @param {Number} w WebGL Canvas width\n         * @param {Number} h WebGL Canvas height\n         */\n        setProjection : function (w, h) {\n            this.flush();\n            this.gl.viewport(0, 0, w, h);\n            this.uMatrix.set(\n                2 / w,  0,      0,\n                0,      -2 / h, 0,\n                -1,     1,      1\n            );\n            // FIXME: Configure the projection matrix in `useShader`\n            this.quadShader.uniforms.uMatrix = this.uMatrix.val;\n        },\n\n        /**\n         * @ignore\n         */\n        uploadTexture : function (texture, w, h, b, force) {\n            var unit = me.video.renderer.cache.getUnit(texture);\n            if (!this.units[unit] || force) {\n                this.units[unit] = true;\n                me.video.shader.createTexture(\n                    this.gl,\n                    unit,\n                    texture.texture,\n                    texture.repeat,\n                    w,\n                    h,\n                    b\n                );\n            }\n\n            return unit;\n        },\n\n        /**\n         * Reset compositor internal state\n         * @ignore\n         */\n        reset : function () {\n            this.sbIndex = 0;\n            this.length = 0;\n\n            var samplers = [];\n\n            for (var i = 0; i < this.maxTextures; i++) {\n                this.units[i] = false;\n                samplers[i] = i;\n            }\n\n            this.quadShader.uniforms.uSampler = samplers;\n        },\n\n        /**\n         * Create a full index buffer for the element array\n         * @ignore\n         */\n        createIB : function () {\n            var indices = [\n                0, 1, 2,\n                2, 1, 3\n            ];\n\n            // ~384KB index buffer\n            var data = new Array(MAX_LENGTH * INDICES_PER_QUAD);\n            for (var i = 0; i < data.length; i++) {\n                data[i] = indices[i % INDICES_PER_QUAD] +\n                    ~~(i / INDICES_PER_QUAD) * ELEMENTS_PER_QUAD;\n            }\n\n            return new Uint16Array(data);\n        },\n\n        /**\n         * Resize the stream buffer, retaining its original contents\n         * @ignore\n         */\n        resizeSB : function () {\n            this.sbSize <<= 1;\n            var stream = new Float32Array(this.sbSize * ELEMENT_SIZE * ELEMENTS_PER_QUAD);\n            stream.set(this.stream);\n            this.stream = stream;\n        },\n\n        /**\n         * Select the shader to use for compositing\n         * @name useShader\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         * @param {WebGLProgram} shader The shader program to use\n         */\n        useShader : function (shader) {\n            if (this.shader !== shader) {\n                this.flush();\n                this.shader = shader;\n                this.gl.useProgram(this.shader);\n            }\n        },\n\n        /**\n         * Add a textured quad\n         * @name addQuad\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         * @param {me.video.renderer.Texture} texture Source texture\n         * @param {String} key Source texture region name\n         * @param {Number} x Destination x-coordinate\n         * @param {Number} y Destination y-coordinate\n         * @param {Number} w Destination width\n         * @param {Number} h Destination height\n         */\n        addQuad : function (texture, key, x, y, w, h) {\n            var color = this.color.toGL();\n\n            if (color[3] < 1 / 255) {\n                // Fast path: don't send fully transparent quads\n                return;\n            }\n\n            this.useShader(this.quadShader.handle);\n            if (this.length >= MAX_LENGTH) {\n                this.flush();\n            }\n            if (this.length >= this.sbSize) {\n                this.resizeSB();\n            }\n\n            // Transform vertices\n            var m = this.matrix,\n                v0 = this.v[0].set(x, y),\n                v1 = this.v[1].set(x + w, y),\n                v2 = this.v[2].set(x, y + h),\n                v3 = this.v[3].set(x + w, y + h);\n\n            if (!m.isIdentity()) {\n                m.vectorMultiply(v0);\n                m.vectorMultiply(v1);\n                m.vectorMultiply(v2);\n                m.vectorMultiply(v3);\n            }\n\n            // Array index computation\n            var idx0 = this.sbIndex,\n                idx1 = idx0 + ELEMENT_SIZE,\n                idx2 = idx1 + ELEMENT_SIZE,\n                idx3 = idx2 + ELEMENT_SIZE;\n\n            // Fill vertex buffer\n            // FIXME: Pack each vertex vector into single float\n            this.stream[idx0 + VERTEX_ELEMENT + 0] = v0.x;\n            this.stream[idx0 + VERTEX_ELEMENT + 1] = v0.y;\n            this.stream[idx1 + VERTEX_ELEMENT + 0] = v1.x;\n            this.stream[idx1 + VERTEX_ELEMENT + 1] = v1.y;\n            this.stream[idx2 + VERTEX_ELEMENT + 0] = v2.x;\n            this.stream[idx2 + VERTEX_ELEMENT + 1] = v2.y;\n            this.stream[idx3 + VERTEX_ELEMENT + 0] = v3.x;\n            this.stream[idx3 + VERTEX_ELEMENT + 1] = v3.y;\n\n            // Fill color buffer\n            // FIXME: Pack color vector into single float\n            this.stream.set(color, idx0 + COLOR_ELEMENT);\n            this.stream.set(color, idx1 + COLOR_ELEMENT);\n            this.stream.set(color, idx2 + COLOR_ELEMENT);\n            this.stream.set(color, idx3 + COLOR_ELEMENT);\n\n            // Fill texture index buffer\n            // FIXME: Can the texture index be packed into another element?\n            var unit = this.uploadTexture(texture);\n            this.stream[idx0 + TEXTURE_ELEMENT] =\n            this.stream[idx1 + TEXTURE_ELEMENT] =\n            this.stream[idx2 + TEXTURE_ELEMENT] =\n            this.stream[idx3 + TEXTURE_ELEMENT] = unit;\n\n            // Get the source texture region\n            var region = texture.getRegion(key);\n            if (typeof(region) === \"undefined\") {\n                // TODO: Require proper atlas regions instead of caching arbitrary region keys\n                console.warn(\"Adding texture region\", key, \"for texture\", texture);\n\n                var keys = key.split(\",\"),\n                    sx = +keys[0],\n                    sy = +keys[1],\n                    sw = +keys[2],\n                    sh = +keys[3];\n                region = texture._insertRegion(key, sx, sy, sw, sh);\n            }\n\n            // Fill texture coordinates buffer\n            // FIXME: Pack each texture coordinate into single floats\n            var stMap = region.stMap;\n            this.stream[idx0 + REGION_ELEMENT + 0] = stMap[0];\n            this.stream[idx0 + REGION_ELEMENT + 1] = stMap[1];\n            this.stream[idx1 + REGION_ELEMENT + 0] = stMap[2];\n            this.stream[idx1 + REGION_ELEMENT + 1] = stMap[1];\n            this.stream[idx2 + REGION_ELEMENT + 0] = stMap[0];\n            this.stream[idx2 + REGION_ELEMENT + 1] = stMap[3];\n            this.stream[idx3 + REGION_ELEMENT + 0] = stMap[2];\n            this.stream[idx3 + REGION_ELEMENT + 1] = stMap[3];\n\n            this.sbIndex += ELEMENT_SIZE * ELEMENTS_PER_QUAD;\n            this.length++;\n        },\n\n        /**\n         * Flush batched texture operations to the GPU\n         * @name flush\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         */\n        flush : function () {\n            if (this.length) {\n                var gl = this.gl;\n\n                // Copy data into stream buffer\n                var len = this.length * ELEMENT_SIZE * ELEMENTS_PER_QUAD;\n                gl.bufferData(\n                    gl.ARRAY_BUFFER,\n                    this.stream.subarray(0, len),\n                    gl.STREAM_DRAW\n                );\n\n                // Draw the stream buffer\n                gl.drawElements(\n                    gl.TRIANGLES,\n                    this.length * INDICES_PER_QUAD,\n                    gl.UNSIGNED_SHORT,\n                    0\n                );\n\n                this.sbIndex = 0;\n                this.length = 0;\n            }\n        },\n\n        /**\n         * Draw a line\n         * @name drawLine\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         * @param {me.Vector2d[]} points Line vertices\n         * @param {Boolean} [open=false] Whether the line is open (true) or closed (false)\n         */\n        drawLine : function (points, open) {\n            this.useShader(this.lineShader.handle);\n\n            // Put vertex data into the stream buffer\n            var j = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (!this.matrix.isIdentity()) {\n                    this.matrix.vectorMultiply(points[i]);\n                }\n                this.stream[j++] = points[i].x;\n                this.stream[j++] = points[i].y;\n            }\n\n            var gl = this.gl;\n\n            // FIXME\n            this.lineShader.uniforms.uMatrix = this.uMatrix.val;\n\n            // Set the line color\n            this.lineShader.uniforms.uColor = this.color.glArray;\n\n            // Copy data into the stream buffer\n            gl.bufferData(\n                gl.ARRAY_BUFFER,\n                this.stream.subarray(0, points.length * 2),\n                gl.STREAM_DRAW\n            );\n\n            // FIXME: Configure vertex attrib pointers in `useShader`\n            gl.vertexAttribPointer(\n                this.lineShader.attributes.aVertex,\n                VERTEX_SIZE,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n\n            // Draw the stream buffer\n            gl.drawArrays(open ? gl.LINE_STRIP : gl.LINE_LOOP, 0, points.length);\n\n            // FIXME: Configure vertex attrib pointers in `useShader`\n            gl.vertexAttribPointer(\n                this.quadShader.attributes.aVertex,\n                VERTEX_SIZE,\n                gl.FLOAT,\n                false,\n                ELEMENT_OFFSET,\n                VERTEX_OFFSET\n            );\n        },\n\n        /**\n         * Set the line width\n         * @name lineWidth\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         * @param {Number} width Line width\n         */\n        lineWidth : function (width) {\n            this.gl.lineWidth(width);\n        },\n\n        /**\n         * Clear the frame buffer, flushes the composite operations and calls\n         * gl.clear()\n         * @name clear\n         * @memberOf me.WebGLRenderer.Compositor\n         * @function\n         */\n        clear : function () {\n            this.flush();\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org/\n *\n */\n(function () {\n    /**\n     * @namespace me.input\n     * @memberOf me\n     */\n    me.input = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        /*\n         * PRIVATE STUFF\n         */\n\n        /**\n         * prevent event propagation\n         * @ignore\n         */\n        api._preventDefault = function (e) {\n            // stop event propagation\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            else {\n                e.cancelBubble = true;\n            }\n            // stop event default processing\n            if (e.preventDefault)  {\n                e.preventDefault();\n            }\n            else  {\n                e.returnValue = false;\n            }\n\n            return false;\n        };\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Global flag to specify if melonJS should prevent default browser action on registered key events <br>\n         * This is also configurable per key through the bindKey function\n         * default : true\n         * @public\n         * @type Boolean\n         * @name preventDefault\n         * @memberOf me.input\n         */\n        api.preventDefault = true;\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org/\n *\n */\n(function (api) {\n    /*\n     * PRIVATE STUFF\n     */\n\n    // list of binded keys\n    api._KeyBinding = {};\n\n    // corresponding actions\n    var keyStatus = {};\n\n    // lock enable flag for keys\n    var keyLock = {};\n    // actual lock status of each key\n    var keyLocked = {};\n\n    // List of binded keys being held\n    var keyRefs = {};\n\n    // whether default event should be prevented for a given keypress\n    var preventDefaultForKeys = {};\n\n    // some useful flags\n    var keyboardInitialized = false;\n\n    /**\n     * enable keyboard event\n     * @ignore\n     */\n    api._enableKeyboardEvent = function () {\n        if (!keyboardInitialized) {\n            window.addEventListener(\"keydown\", api._keydown, false);\n            window.addEventListener(\"keyup\", api._keyup, false);\n            keyboardInitialized = true;\n        }\n    };\n\n    /**\n     * key down event\n     * @ignore\n     */\n    api._keydown = function (e, keyCode, mouseButton) {\n\n        keyCode = keyCode || e.keyCode || e.which;\n        var action = api._KeyBinding[keyCode];\n\n        // publish a message for keydown event\n        me.event.publish(me.event.KEYDOWN, [\n            action,\n            keyCode,\n            action ? !keyLocked[action] : true\n        ]);\n\n        if (action) {\n            if (!keyLocked[action]) {\n                var trigger = mouseButton ? mouseButton : keyCode;\n                if (!keyRefs[action][trigger]) {\n                    keyStatus[action]++;\n                    keyRefs[action][trigger] = true;\n                }\n            }\n            // prevent event propagation\n            if (preventDefaultForKeys[keyCode]) {\n                return api._preventDefault(e);\n            }\n            else {\n                return true;\n            }\n        }\n\n        return true;\n    };\n\n\n    /**\n     * key up event\n     * @ignore\n     */\n    api._keyup = function (e, keyCode, mouseButton) {\n        keyCode = keyCode || e.keyCode || e.which;\n        var action = api._KeyBinding[keyCode];\n\n        // publish a message for keydown event\n        me.event.publish(me.event.KEYUP, [ action, keyCode ]);\n\n        if (action) {\n            var trigger = mouseButton ? mouseButton : keyCode;\n            keyRefs[action][trigger] = undefined;\n\n            if (keyStatus[action] > 0) {\n                keyStatus[action]--;\n            }\n\n            keyLocked[action] = false;\n\n            // prevent event propagation\n            if (preventDefaultForKeys[keyCode]) {\n                return api._preventDefault(e);\n            }\n            else {\n                return true;\n            }\n        }\n\n        return true;\n    };\n\n    /*\n     * PUBLIC STUFF\n     */\n\n    /**\n     * Almost all keyboard keys that have ASCII code, like:\n     * LEFT, UP, RIGHT, DOWN, ENTER, SHIFT, CTRL, ALT, ESC, SPACE, TAB, BACKSPACE, PAUSE,\n     * PAGE_UP, PAGE_DOWN, INSERT, DELETE, CAPS_LOCK, NUM_LOCK, SCROLL_LOCK, PRINT_SCREEN,\n     * Keys [0..9], [A..Z], [NUMPAD0..NUMPAD9], [F1..F12]\n     * @public\n     * @enum {number}\n     * @name KEY\n     * @memberOf me.input\n     */\n    api.KEY = {\n        \"BACKSPACE\" : 8,\n        \"TAB\" : 9,\n        \"ENTER\" : 13,\n        \"SHIFT\" : 16,\n        \"CTRL\" : 17,\n        \"ALT\" : 18,\n        \"PAUSE\" : 19,\n        \"CAPS_LOCK\" : 20,\n        \"ESC\" : 27,\n        \"SPACE\" : 32,\n        \"PAGE_UP\" : 33,\n        \"PAGE_DOWN\" : 34,\n        \"END\" : 35,\n        \"HOME\" : 36,\n        \"LEFT\" : 37,\n        \"UP\" : 38,\n        \"RIGHT\" : 39,\n        \"DOWN\" : 40,\n        \"PRINT_SCREEN\" : 42,\n        \"INSERT\" : 45,\n        \"DELETE\" : 46,\n        \"NUM0\" : 48,\n        \"NUM1\" : 49,\n        \"NUM2\" : 50,\n        \"NUM3\" : 51,\n        \"NUM4\" : 52,\n        \"NUM5\" : 53,\n        \"NUM6\" : 54,\n        \"NUM7\" : 55,\n        \"NUM8\" : 56,\n        \"NUM9\" : 57,\n        \"A\" : 65,\n        \"B\" : 66,\n        \"C\" : 67,\n        \"D\" : 68,\n        \"E\" : 69,\n        \"F\" : 70,\n        \"G\" : 71,\n        \"H\" : 72,\n        \"I\" : 73,\n        \"J\" : 74,\n        \"K\" : 75,\n        \"L\" : 76,\n        \"M\" : 77,\n        \"N\" : 78,\n        \"O\" : 79,\n        \"P\" : 80,\n        \"Q\" : 81,\n        \"R\" : 82,\n        \"S\" : 83,\n        \"T\" : 84,\n        \"U\" : 85,\n        \"V\" : 86,\n        \"W\" : 87,\n        \"X\" : 88,\n        \"Y\" : 89,\n        \"Z\" : 90,\n        \"WINDOW_KEY\" : 91,\n        \"NUMPAD0\" : 96,\n        \"NUMPAD1\" : 97,\n        \"NUMPAD2\" : 98,\n        \"NUMPAD3\" : 99,\n        \"NUMPAD4\" : 100,\n        \"NUMPAD5\" : 101,\n        \"NUMPAD6\" : 102,\n        \"NUMPAD7\" : 103,\n        \"NUMPAD8\" : 104,\n        \"NUMPAD9\" : 105,\n        \"MULTIPLY\" : 106,\n        \"ADD\" : 107,\n        \"SUBSTRACT\" : 109,\n        \"DECIMAL\" : 110,\n        \"DIVIDE\" : 111,\n        \"F1\" : 112,\n        \"F2\" : 113,\n        \"F3\" : 114,\n        \"F4\" : 115,\n        \"F5\" : 116,\n        \"F6\" : 117,\n        \"F7\" : 118,\n        \"F8\" : 119,\n        \"F9\" : 120,\n        \"F10\" : 121,\n        \"F11\" : 122,\n        \"F12\" : 123,\n        \"NUM_LOCK\" : 144,\n        \"SCROLL_LOCK\" : 145,\n        \"SEMICOLON\" : 186,\n        \"PLUS\" : 187,\n        \"COMMA\" : 188,\n        \"MINUS\" : 189,\n        \"PERIOD\" : 190,\n        \"FORWAND_SLASH\" : 191,\n        \"GRAVE_ACCENT\" : 192,\n        \"OPEN_BRACKET\" : 219,\n        \"BACK_SLASH\" : 220,\n        \"CLOSE_BRACKET\" : 221,\n        \"SINGLE_QUOTE\" : 222\n    };\n\n    /**\n     * return the key press status of the specified action\n     * @name isKeyPressed\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} action user defined corresponding action\n     * @return {Boolean} true if pressed\n     * @example\n     * if (me.input.isKeyPressed('left'))\n     * {\n     *    //do something\n     * }\n     * else if (me.input.isKeyPressed('right'))\n     * {\n     *    //do something else...\n     * }\n     *\n     */\n    api.isKeyPressed = function (action) {\n        if (keyStatus[action] && !keyLocked[action]) {\n            if (keyLock[action]) {\n                keyLocked[action] = true;\n            }\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * return the key status of the specified action\n     * @name keyStatus\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} action user defined corresponding action\n     * @return {Boolean} down (true) or up(false)\n     */\n    api.keyStatus = function (action) {\n        return (keyStatus[action] > 0);\n    };\n\n\n    /**\n     * trigger the specified key (simulated) event <br>\n     * @name triggerKeyEvent\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {me.input.KEY} keycode\n     * @param {Boolean} true to trigger a key press, or false for key release\n     * @example\n     * // trigger a key press\n     * me.input.triggerKeyEvent(me.input.KEY.LEFT, true);\n     */\n\n    api.triggerKeyEvent = function (keycode, status) {\n        if (status) {\n            api._keydown({}, keycode);\n        }\n        else {\n            api._keyup({}, keycode);\n        }\n    };\n\n\n    /**\n     * associate a user defined action to a keycode\n     * @name bindKey\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {me.input.KEY} keycode\n     * @param {String} action user defined corresponding action\n     * @param {Boolean} [lock=false] cancel the keypress event once read\n     * @param {Boolean} [preventDefault=me.input.preventDefault] prevent default browser action\n     * @example\n     * // enable the keyboard\n     * me.input.bindKey(me.input.KEY.LEFT,  \"left\");\n     * me.input.bindKey(me.input.KEY.RIGHT, \"right\");\n     * me.input.bindKey(me.input.KEY.X,     \"jump\", true);\n     * me.input.bindKey(me.input.KEY.F1,    \"options\", true, true);\n     */\n    api.bindKey = function (keycode, action, lock, preventDefault) {\n        // make sure the keyboard is enable\n        api._enableKeyboardEvent();\n\n        if (typeof preventDefault !== \"boolean\") {\n            preventDefault = api.preventDefault;\n        }\n\n        api._KeyBinding[keycode] = action;\n        preventDefaultForKeys[keycode] = preventDefault;\n\n        keyStatus[action] = 0;\n        keyLock[action] = lock ? lock : false;\n        keyLocked[action] = false;\n        keyRefs[action] = {};\n    };\n\n    /**\n     * unlock a key manually\n     * @name unlockKey\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} action user defined corresponding action\n     * @example\n     * // Unlock jump when touching the ground\n     * if (!this.falling && !this.jumping) {\n     *     me.input.unlockKey(\"jump\");\n     * }\n     */\n    api.unlockKey = function (action) {\n        keyLocked[action] = false;\n    };\n\n    /**\n     * unbind the defined keycode\n     * @name unbindKey\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {me.input.KEY} keycode\n     * @example\n     * me.input.unbindKey(me.input.KEY.LEFT);\n     */\n    api.unbindKey = function (keycode) {\n        // clear the event status\n        var keybinding = api._KeyBinding[keycode];\n        keyStatus[keybinding] = 0;\n        keyLock[keybinding] = false;\n        keyRefs[keybinding] = {};\n        // remove the key binding\n        api._KeyBinding[keycode] = null;\n        preventDefaultForKeys[keycode] = null;\n    };\n})(me.input);\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org/\n *\n */\n(function (api) {\n    /**\n     * The built in Event Object\n     * @external Event\n     * @see {@link https://developer.mozilla.org/en/docs/Web/API/Event|Event}\n     */\n\n    /**\n     * Event normalized X coordinate within the game canvas itself<br>\n     * <img src=\"images/event_coord.png\"/>\n     * @memberof! external:Event#\n     * @name external:Event#gameX\n     * @type {Number}\n     */\n\n    /**\n     * Event normalized Y coordinate within the game canvas itself<br>\n     * <img src=\"images/event_coord.png\"/>\n     * @memberof! external:Event#\n     * @name external:Event#gameY\n     * @type {Number}\n     */\n\n    /**\n     * Event X coordinate relative to the viewport\n     * @memberof! external:Event#\n     * @name external:Event#gameScreenX\n     * @type {Number}\n     */\n\n    /**\n     * Event Y coordinate relative to the viewport\n     * @memberof! external:Event#\n     * @name external:Event#gameScreenY\n     * @type {Number}\n     */\n\n    /**\n     * Event X coordinate relative to the map\n     * @memberof! external:Event#\n     * @name external:Event#gameWorldX\n     * @type {Number}\n     */\n\n    /**\n     * Event Y coordinate relative to the map\n     * @memberof! external:Event#\n     * @name external:Event#gameWorldY\n     * @type {Number}\n     */\n\n     /**\n      * Event X coordinate relative to the holding container\n      * @memberof! external:Event#\n      * @name external:Event#gameLocalX\n      * @type {Number}\n      */\n\n     /**\n      * Event Y coordinate relative to the holding container\n      * @memberof! external:Event#\n      * @name external:Event#gameLocalY\n      * @type {Number}\n      */\n\n    /**\n     * The unique identifier of the contact for a touch, mouse or pen <br>\n     * (This id is also defined on non Pointer Event Compatible platform like pure mouse or iOS-like touch event)\n     * @memberof! external:Event#\n     * @name external:Event#pointerId\n     * @type {Number}\n     * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh466123.aspx\n     */\n\n    /*\n     * PRIVATE STUFF\n     */\n\n    /**\n     * A pool of `Vector` objects to cache pointer/touch event coordinates.\n     * @type {Array.<Vector>}\n     */\n    var T_VECTORS = [];\n    for (var v = 0; v < 10; v++) { T_VECTORS.push(new me.Vector2d()); }\n\n    // list of registered Event handlers\n    var evtHandlers = new Map();\n\n    // current pointer\n    var currentPointer = new me.Rect(0, 0, 1, 1);\n\n    // some useful flags\n    var pointerInitialized = false;\n\n    // to keep track of the supported wheel event\n    var wheeltype = \"mousewheel\";\n\n    // Track last event timestamp to prevent firing events out of order\n    var lastTimeStamp = 0;\n\n    // \"active\" list of supported events\n    var activeEventList = null;\n\n    // list of standard pointer event type\n    var pointerEventList = [\n        \"mousewheel\",\n        \"pointermove\",\n        \"pointerdown\",\n        \"pointerup\",\n        \"pointercancel\",\n        \"pointerenter\",\n        \"pointerleave\"\n    ];\n\n    // previous MS prefixed pointer event type\n    var MSPointerEventList = [\n        \"mousewheel\",\n        \"MSPointerMove\",\n        \"MSPointerDown\",\n        \"MSPointerUp\",\n        \"MSPointerCancel\",\n        \"MSPointerEnter\",\n        \"MSPointerLeave\"\n    ];\n\n    // legacy mouse event type\n    var mouseEventList = [\n        \"mousewheel\",\n        \"mousemove\",\n        \"mousedown\",\n        \"mouseup\",\n        \"mousecancel\",\n        \"mouseenter\",\n        \"mouseleave\"\n    ];\n\n    // iOS style touch event type\n    var touchEventList = [\n        undefined,\n        \"touchmove\",\n        \"touchstart\",\n        \"touchend\",\n        \"touchcancel\",\n        \"touchenter\",\n        \"touchleave\"\n    ];\n\n    // internal constants\n    // var MOUSE_WHEEL   = 0;\n    var POINTER_MOVE    = 1;\n    var POINTER_DOWN    = 2;\n    var POINTER_UP      = 3;\n    var POINTER_CANCEL  = 4;\n    var POINTER_ENTER   = 5;\n    var POINTER_LEAVE   = 6;\n\n    /**\n     * cache value for the offset of the canvas position within the page\n     * @ignore\n     */\n    var viewportOffset = new me.Vector2d();\n\n    /**\n     * Array of object containing changed touch information (iOS event model)\n     * @ignore\n     */\n    var changedTouches = [];\n\n    /**\n     * cache value for the offset of the canvas position within the page\n     * @ignore\n     */\n    api._offset = null;\n\n    /**\n     * addEventListerner for the specified event list and callback\n     * @ignore\n     */\n    function registerEventListener(eventList, callback) {\n        for (var x = 2; x < eventList.length; ++x) {\n            if (typeof(eventList[x]) !== \"undefined\") {\n                me.video.renderer.getScreenCanvas().addEventListener(eventList[x], callback, false);\n            }\n        }\n    }\n\n    /**\n     * enable pointer event (MSPointer/Mouse/Touch)\n     * @ignore\n     */\n    function enablePointerEvent() {\n        if (!pointerInitialized) {\n            // get relative canvas position in the page\n            api._offset = me.video.getPos();\n            // Automatically update relative canvas position on scroll\n            window.addEventListener(\"scroll\", throttle(100, false,\n                function (e) {\n                    api._offset = me.video.getPos();\n                    me.event.publish(me.event.WINDOW_ONSCROLL, [ e ]);\n                }\n            ), false);\n\n            // check standard\n            if (navigator.pointerEnabled) {\n                activeEventList = pointerEventList;\n            }\n            else if (navigator.msPointerEnabled) { // check for backward compatibility with the 'MS' prefix\n                activeEventList = MSPointerEventList;\n            }\n            else if (me.device.touch) { //  `touch****` events for iOS/Android devices\n                activeEventList = touchEventList;\n            }\n            else { // Regular Mouse events\n                activeEventList = mouseEventList;\n            }\n\n            registerEventListener(activeEventList, onPointerEvent);\n\n            // detect wheel event support\n            // Modern browsers support \"wheel\", Webkit and IE support at least \"mousewheel\n            wheeltype = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\";\n            window.addEventListener(wheeltype, onMouseWheel, false);\n\n            // set the PointerMove/touchMove/MouseMove event\n            if (typeof(api.throttlingInterval) === \"undefined\") {\n                // set the default value\n                api.throttlingInterval = ~~(1000 / me.sys.fps);\n            }\n            // if time interval <= 16, disable the feature\n            if (api.throttlingInterval < 17) {\n                me.video.renderer.getScreenCanvas().addEventListener(\n                    activeEventList[POINTER_MOVE],\n                    onMoveEvent,\n                    false\n                );\n            }\n            else {\n                me.video.renderer.getScreenCanvas().addEventListener(\n                    activeEventList[POINTER_MOVE],\n                    throttle(\n                        api.throttlingInterval,\n                        false,\n                        function (e) {\n                            onMoveEvent(e);\n                        }\n                    ),\n                    false\n                );\n            }\n            pointerInitialized = true;\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    function triggerEvent(handlers, type, e, pointerId) {\n        var callback;\n        if (handlers.callbacks[type]) {\n            handlers.pointerId = pointerId;\n            for (var i = handlers.callbacks[type].length - 1; (callback = handlers.callbacks[type][i]); i--) {\n                if (callback(e) === false) {\n                    // stop propagating the event if return false\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * propagate events to registered objects\n     * @ignore\n     */\n    function dispatchEvent(e) {\n        var handled = false;\n\n        // get the current screen to world offset\n        me.game.viewport.localToWorld(0, 0, viewportOffset);\n\n        while (changedTouches.length > 0) {\n\n            // keep a reference to the last item\n            var changedTouch = changedTouches.pop();\n            // and put it back into our cache\n            T_VECTORS.push(changedTouch);\n\n            // Do not fire older events\n            if (typeof(e.timeStamp) !== \"undefined\") {\n                if (e.timeStamp < lastTimeStamp) {\n                    continue;\n                }\n                lastTimeStamp = e.timeStamp;\n            }\n\n            // if PointerEvent is not supported\n            if (!me.device.pointerEnabled) {\n                // -> define pointerId to simulate the PointerEvent standard\n                e.pointerId = changedTouch.id;\n            }\n\n            /* Initialize the two coordinate space properties. */\n            e.gameScreenX = changedTouch.x;\n            e.gameScreenY = changedTouch.y;\n            e.gameWorldX = e.gameScreenX + viewportOffset.x;\n            e.gameWorldY = e.gameScreenY + viewportOffset.y;\n\n            currentPointer.setShape(\n                e.gameWorldX,\n                e.gameWorldY,\n                e.width || 1,\n                e.height || 1\n            );\n\n            var candidates = me.collision.quadTree.retrieve(currentPointer, me.Container.prototype._sortReverseZ);\n\n            // add the viewport to the list of candidates\n            candidates.push ( me.game.viewport );\n\n            for (var c = candidates.length, candidate; c--, (candidate = candidates[c]);) {\n\n                if (evtHandlers.has(candidate)) {\n                    var handlers = evtHandlers.get(candidate);\n                    var region = handlers.region;\n                    var ancestor = region.ancestor;\n                    var bounds = region.getBounds();\n\n                    if (region.floating === true) {\n                        e.gameX = e.gameLocalX = e.gameScreenX;\n                        e.gameY = e.gameLocalY = e.gameScreenY;\n                    } else {\n                        e.gameX = e.gameLocalX = e.gameWorldX;\n                        e.gameY = e.gameLocalY = e.gameWorldY;\n                    }\n                    // adjust gameLocalX to specify coordinates\n                    // within the region ancestor container\n                    if (typeof ancestor !== \"undefined\") {\n                        var parentPos = ancestor.getBounds().pos;\n                        e.gameLocalX = e.gameX - parentPos.x;\n                        e.gameLocalY = e.gameY - parentPos.y;\n                    }\n\n                    var eventInBounds =\n                        // check the shape bounding box first\n                        bounds.containsPoint(e.gameX, e.gameY) &&\n                        // then check more precisely if needed\n                        (bounds === region || region.containsPoint(e.gameLocalX, e.gameLocalY));\n\n                    switch (activeEventList.indexOf(e.type)) {\n                        case POINTER_MOVE:\n                            // moved out of bounds: trigger the POINTER_LEAVE callbacks\n                            if (handlers.pointerId === e.pointerId && !eventInBounds) {\n                                if (triggerEvent(handlers, activeEventList[POINTER_LEAVE], e, null)) {\n                                    handled = true;\n                                    break;\n                                }\n                            }\n                            // no pointer & moved inside of bounds: trigger the POINTER_ENTER callbacks\n                            else if (handlers.pointerId === null && eventInBounds) {\n                                if (triggerEvent(handlers, activeEventList[POINTER_ENTER], e, e.pointerId)) {\n                                    handled = true;\n                                    break;\n                                }\n                            }\n\n                            // trigger the POINTER_MOVE callbacks\n                            if (eventInBounds && triggerEvent(handlers, e.type, e, e.pointerId)) {\n                                handled = true;\n                                break;\n                            }\n                            break;\n\n                        case POINTER_UP:\n                            // pointer defined & inside of bounds: trigger the POINTER_UP callback\n                            if (handlers.pointerId === e.pointerId && eventInBounds) {\n                                // trigger the corresponding callback\n                                if (triggerEvent(handlers, e.type, e, null)) {\n                                    handled = true;\n                                    break;\n                                }\n                            }\n                            break;\n\n                        case POINTER_CANCEL:\n                            // pointer defined: trigger the POINTER_CANCEL callback\n                            if (handlers.pointerId === e.pointerId) {\n                                // trigger the corresponding callback\n                                if (triggerEvent(handlers, e.type, e, null)) {\n                                    handled = true;\n                                    break;\n                                }\n                            }\n                            break;\n\n                        default:\n                            // event inside of bounds: trigger the POINTER_DOWN or MOUSE_WHEEL callback\n                            if (eventInBounds) {\n\n                                // trigger the corresponding callback\n                                if (triggerEvent(handlers, e.type, e, e.pointerId)) {\n                                    handled = true;\n                                    break;\n                                }\n                            }\n                            break;\n                    }\n                }\n                if (handled === true) {\n                    // stop iterating through this list of candidates\n                    break;\n                }\n            }\n        }\n        return handled;\n    }\n\n    /**\n     * translate event coordinates\n     * @ignore\n     */\n    function updateCoordFromEvent(event) {\n        var local = T_VECTORS.pop();\n\n        // PointerEvent or standard Mouse event\n        if (!event.touches) {\n            api.globalToLocal(event.clientX, event.clientY, local);\n            local.id = event.pointerId || 1;\n            changedTouches.push(local);\n        }\n        // iOS/Android like touch event\n        else {\n            for (var i = 0, l = event.changedTouches.length; i < l; i++) {\n                var t = event.changedTouches[i];\n                api.globalToLocal(t.clientX, t.clientY, local);\n                local.id = t.identifier;\n                changedTouches.push(local);\n            }\n        }\n        // if event.isPrimary is defined and false, return\n        if (event.isPrimary === false) {\n            return;\n        }\n\n        // Else use the first entry to simulate mouse event\n        api.pointer.pos.set(\n            changedTouches[0].x,\n            changedTouches[0].y\n        );\n\n        if (typeof(event.width) === \"number\") {\n            // resize the pointer object if necessary\n            if (event.width !== api.pointer.width || event.height !== api.pointer.height) {\n                api.pointer.resize(event.width || 1, event.height || 1);\n            }\n        }\n    }\n\n\n    /**\n     * mouse event management (mousewheel)\n     * @ignore\n     */\n    function onMouseWheel(e) {\n        /* jshint expr:true */\n        if (e.target === me.video.renderer.getScreenCanvas()) {\n            // create a (fake) normalized event object\n            var _event = {\n                deltaMode : 1,\n                type : \"mousewheel\",\n                deltaX: e.deltaX,\n                deltaY: e.deltaY,\n                deltaZ: e.deltaZ\n            };\n            if (wheeltype === \"mousewheel\") {\n                _event.deltaY = - 1 / 40 * e.wheelDelta;\n                // Webkit also support wheelDeltaX\n                e.wheelDeltaX && (_event.deltaX = - 1 / 40 * e.wheelDeltaX);\n            }\n            // dispatch mouse event to registered object\n            if (dispatchEvent(_event)) {\n                // prevent default action\n                return api._preventDefault(e);\n            }\n        }\n        return true;\n    }\n\n\n    /**\n     * mouse/touch/pointer event management (move)\n     * @ignore\n     */\n    function onMoveEvent(e) {\n        // update position\n        updateCoordFromEvent(e);\n        // dispatch mouse event to registered object\n        if (dispatchEvent(e)) {\n            // prevent default action\n            return api._preventDefault(e);\n        }\n        return true;\n    }\n\n    /**\n     * mouse/touch/pointer event management (start/down, end/up)\n     * @ignore\n     */\n    function onPointerEvent(e) {\n        // update the pointer position\n        updateCoordFromEvent(e);\n\n        // dispatch event to registered objects\n        if (dispatchEvent(e)) {\n            // prevent default action\n            return api._preventDefault(e);\n        }\n\n        // in case of touch event button is undefined\n        var button = e.button || 0;\n        var keycode = api.pointer.bind[button];\n\n        // check if mapped to a key\n        if (keycode) {\n            if (e.type === activeEventList[POINTER_DOWN]) {\n                return api._keydown(e, keycode, button + 1);\n            }\n            else { // 'mouseup' or 'touchend'\n                return api._keyup(e, keycode, button + 1);\n            }\n        }\n\n        return true;\n    }\n\n    /*\n     * PUBLIC STUFF\n     */\n\n    /**\n     * Pointer information (current position and size) <br>\n     * properties : <br>\n     * LEFT : constant for left button <br>\n     * MIDDLE : constant for middle button <br>\n     * RIGHT : constant for right button\n     * @public\n     * @type {me.Rect}\n     * @name pointer\n     * @memberOf me.input\n     */\n    api.pointer = new me.Rect(0, 0, 1, 1);\n\n    // bind list for mouse buttons\n    api.pointer.bind = [ 0, 0, 0 ];\n\n    // W3C button constants\n    api.pointer.LEFT = 0;\n    api.pointer.MIDDLE = 1;\n    api.pointer.RIGHT = 2;\n\n    /**\n     * time interval for event throttling in milliseconds<br>\n     * default value : \"1000/me.sys.fps\" ms<br>\n     * set to 0 ms to disable the feature\n     * @public\n     * @type Number\n     * @name throttlingInterval\n     * @memberOf me.input\n     */\n    api.throttlingInterval = undefined;\n\n    /**\n     * Translate the specified x and y values from the global (absolute)\n     * coordinate to local (viewport) relative coordinate.\n     * @name globalToLocal\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} x the global x coordinate to be translated.\n     * @param {Number} y the global y coordinate to be translated.\n     * @param {Number} [v] an optional vector object where to set the\n     * @return {me.Vector2d} A vector object with the corresponding translated coordinates.\n     * @example\n     * onMouseEvent : function (e) {\n     *    // convert the given into local (viewport) relative coordinates\n     *    var pos = me.input.globalToLocal(e.clientX, e,clientY);\n     *    // do something with pos !\n     * };\n     */\n    api.globalToLocal = function (x, y, v) {\n        v = v || new me.Vector2d();\n        var offset = api._offset;\n        var pixelRatio = me.device.getPixelRatio();\n        x -= offset.left;\n        y -= offset.top;\n        var scale = me.sys.scale;\n        if (scale.x !== 1.0 || scale.y !== 1.0) {\n            x /= scale.x;\n            y /= scale.y;\n        }\n        return v.set(x * pixelRatio, y * pixelRatio);\n    };\n\n    /**\n     * Associate a pointer event to a keycode<br>\n     * Left button – 0\n     * Middle button – 1\n     * Right button – 2\n     * @name bindPointer\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} [button=me.input.pointer.LEFT] (accordingly to W3C values : 0,1,2 for left, middle and right buttons)\n     * @param {me.input.KEY} keyCode\n     * @example\n     * // enable the keyboard\n     * me.input.bindKey(me.input.KEY.X, \"shoot\");\n     * // map the left button click on the X key (default if the button is not specified)\n     * me.input.bindPointer(me.input.KEY.X);\n     * // map the right button click on the X key\n     * me.input.bindPointer(me.input.pointer.RIGHT, me.input.KEY.X);\n     */\n    api.bindPointer = function () {\n        var button = (arguments.length < 2) ? api.pointer.LEFT : arguments[0];\n        var keyCode = (arguments.length < 2) ? arguments[0] : arguments[1];\n\n        // make sure the mouse is initialized\n        enablePointerEvent();\n\n        // throw an exception if no action is defined for the specified keycode\n        if (!api._KeyBinding[keyCode]) {\n            throw new me.Error(\"no action defined for keycode \" + keyCode);\n        }\n        // map the mouse button to the keycode\n        api.pointer.bind[button] = keyCode;\n    };\n    /**\n     * unbind the defined keycode\n     * @name unbindPointer\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} [button=me.input.pointer.LEFT] (accordingly to W3C values : 0,1,2 for left, middle and right buttons)\n     * @example\n     * me.input.unbindPointer(me.input.pointer.LEFT);\n     */\n    api.unbindPointer = function (button) {\n        // clear the event status\n        api.pointer.bind[\n            typeof(button) === \"undefined\" ?\n            api.pointer.LEFT : button\n        ] = null;\n    };\n\n\n    /**\n     * allows registration of event listeners on the object target. <br>\n     * melonJS defines the additional `gameX` and `gameY` properties when passing the Event object to the defined callback (see below)<br>\n     * @see external:Event\n     * @see {@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}\n     * @name registerPointerEvent\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} eventType The event type for which the object is registering <br>\n     * melonJS currently supports: <br>\n     * <ul>\n     *   <li><code>\"pointermove\"</code></li>\n     *   <li><code>\"pointerdown\"</code></li>\n     *   <li><code>\"pointerup\"</code></li>\n     *   <li><code>\"pointerenter\"</code></li>\n     *   <li><code>\"pointerleave\"</code></li>\n     *   <li><code>\"pointercancel\"</code></li>\n     *   <li><code>\"mousewheel\"</code></li>\n     * </ul>\n     * @param {me.Rect|me.Polygon|me.Line|me.Ellipse} region a shape representing the region to register on\n     * @param {Function} callback methods to be called when the event occurs.\n     * @example\n     * // register on the 'pointerdown' event\n     * me.input.registerPointerEvent('pointerdown', this, this.pointerDown.bind(this));\n     */\n    api.registerPointerEvent = function (eventType, region, callback) {\n        // make sure the mouse/touch events are initialized\n        enablePointerEvent();\n\n        if (pointerEventList.indexOf(eventType) === -1) {\n            throw new me.Error(\"invalid event type : \" + eventType);\n        }\n\n        // convert to supported event type if pointerEvent not natively supported\n        if (pointerEventList !== activeEventList) {\n            eventType = activeEventList[pointerEventList.indexOf(eventType)];\n        }\n\n        // register the event\n        if (!evtHandlers.has(region)) {\n            evtHandlers.set(region, {\n                region : region,\n                callbacks : {},\n                pointerId : null,\n            });\n        }\n\n        // allocate array if not defined\n        var handlers = evtHandlers.get(region);\n        if (!handlers.callbacks[eventType]) {\n            handlers.callbacks[eventType] = [];\n        }\n\n        // initialize the handler\n        handlers.callbacks[eventType].push(callback);\n    };\n\n    /**\n     * allows the removal of event listeners from the object target.\n     * @see {@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}\n     * @name releasePointerEvent\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} eventType The event type for which the object was registered. See {@link me.input.registerPointerEvent}\n     * @param {me.Rect|me.Polygon|me.Line|me.Ellipse} region the registered region to release for this event\n     * @param {Function} [callback=\"all\"] if specified unregister the event only for the specific callback\n     * @example\n     * // release the registered region on the 'pointerdown' event\n     * me.input.releasePointerEvent('pointerdown', this);\n     */\n    api.releasePointerEvent = function (eventType, region, callback) {\n        if (pointerEventList.indexOf(eventType) === -1) {\n            throw new me.Error(\"invalid event type : \" + eventType);\n        }\n\n        // convert to supported event type if pointerEvent not natively supported\n        if (pointerEventList !== activeEventList) {\n            eventType = activeEventList[pointerEventList.indexOf(eventType)];\n        }\n\n        var handlers = evtHandlers.get(region);\n        if (typeof(callback) === \"undefined\") {\n            // unregister all callbacks of \"eventType\" for the given region\n            while (handlers.callbacks[eventType].length > 0) {\n                handlers.callbacks[eventType].pop();\n            }\n        } else {\n            handlers.callbacks[eventType].remove(callback);\n        }\n    };\n\n    /**\n     * Will translate global (frequently used) pointer events\n     * which should be catched at root level, into minipubsub system events\n     * @name _translatePointerEvents\n     * @memberOf me.input\n     * @ignore\n     * @function\n     */\n    api._translatePointerEvents = function () {\n        // listen to mouse move (and touch move) events on the viewport\n        // and convert them to a system event by default\n        api.registerPointerEvent(\"pointermove\", me.game.viewport, function (e) {\n            me.event.publish(me.event.POINTERMOVE, [e]);\n        });\n    };\n})(me.input);\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2015, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org/\n *\n */\n(function (api) {\n    /*\n     * PRIVATE STUFF\n     */\n\n    // Analog deadzone\n    var deadzone = 0.1;\n\n    /**\n     * A function that returns a normalized value in range [-1.0..1.0], or 0.0 if the axis is unknown.\n     * @callback me.input~normalize_fn\n     * @param {Number} value The raw value read from the gamepad driver\n     * @param {Number} axis The axis index from the standard mapping, or -1 if not an axis\n     * @param {Number} button The button index from the standard mapping, or -1 if not a button\n     */\n    function defaultNormalizeFn(value) {\n        return value;\n    }\n\n    /**\n     * Normalize axis values for wired Xbox 360\n     * @ignore\n     */\n    function wiredXbox360NormalizeFn(value, axis, button) {\n        if (button === api.GAMEPAD.BUTTONS.L2 || button === api.GAMEPAD.BUTTONS.R2) {\n            return (value + 1) / 2;\n        }\n        return value;\n    }\n\n    /**\n     * Normalize axis values for OUYA\n     * @ignore\n     */\n    function ouyaNormalizeFn(value, axis, button) {\n        if (value > 0) {\n            if (button === api.GAMEPAD.BUTTONS.L2) {\n                // L2 is wonky; seems like the deadzone is around 20000\n                // (That's over 15% of the total range!)\n                value = Math.max(0, value - 20000) / 111070;\n            }\n            else {\n                // Normalize [1..65536] => [0.0..0.5]\n                value = (value - 1) / 131070;\n            }\n        }\n        else {\n            // Normalize [-65536..-1] => [0.5..1.0]\n            value = (65536 + value) / 131070 + 0.5;\n        }\n\n        return value;\n    }\n\n    // Match vendor and product codes for Firefox\n    var vendorProductRE = /^([0-9a-f]{1,4})-([0-9a-f]{1,4})-/i;\n\n    // Match leading zeros\n    var leadingZeroRE = /^0+/;\n\n    /**\n     * Firefox reports different ids for gamepads depending on the platform:\n     * - Windows: vendor and product codes contain leading zeroes\n     * - Mac: vendor and product codes are sparse (no leading zeroes)\n     *\n     * This function normalizes the id to support both formats\n     * @ignore\n     */\n    function addMapping(id, mapping) {\n        var expanded_id = id.replace(vendorProductRE, function (_, a, b) {\n            return (\n                \"000\".substr(a.length - 1) + a + \"-\" +\n                \"000\".substr(b.length - 1) + b + \"-\"\n            );\n        });\n        var sparse_id = id.replace(vendorProductRE, function (_, a, b) {\n            return (\n                a.replace(leadingZeroRE, \"\") + \"-\" +\n                b.replace(leadingZeroRE, \"\") + \"-\"\n            );\n        });\n\n        // Normalize optional parameters\n        mapping.analog = mapping.analog || mapping.buttons.map(function () {\n            return -1;\n        });\n        mapping.normalize_fn = mapping.normalize_fn || defaultNormalizeFn;\n\n        remap.set(expanded_id, mapping);\n        remap.set(sparse_id, mapping);\n    }\n\n    // binding list\n    var bindings = {};\n\n    // mapping list\n    var remap = new Map();\n\n    /**\n     * Default gamepad mappings\n     * @ignore\n     */\n    [\n        // Firefox mappings\n        [\n            \"45e-28e-Xbox 360 Wired Controller\",\n            {\n                \"axes\" : [ 0, 1, 3, 4 ],\n                \"buttons\" : [ 11, 12, 13, 14, 8, 9, -1, -1, 5, 4, 6, 7, 0, 1, 2, 3, 10 ],\n                \"analog\" : [ -1, -1, -1, -1, -1, -1, 2, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n                \"normalize_fn\" : wiredXbox360NormalizeFn\n            }\n        ],\n        [\n            \"54c-268-PLAYSTATION(R)3 Controller\",\n            {\n                \"axes\" : [ 0, 1, 2, 3 ],\n                \"buttons\" : [ 14, 13, 15, 12, 10, 11, 8, 9, 0, 3, 1, 2, 4, 6, 7, 5, 16 ]\n            }\n        ],\n        [\n            \"54c-5c4-Wireless Controller\", // PS4 Controller\n            {\n                \"axes\" : [ 0, 1, 2, 3 ],\n                \"buttons\" : [ 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 12, 13 ]\n            }\n        ],\n        [\n            \"2836-1-OUYA Game Controller\",\n            {\n                \"axes\" : [ 0, 3, 7, 9 ],\n                \"buttons\" : [ 3, 6, 4, 5, 7, 8, 15, 16, -1, -1, 9, 10, 11, 12, 13, 14, -1 ],\n                \"analog\" : [ -1, -1, -1, -1, -1, -1, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n                \"normalize_fn\" : ouyaNormalizeFn\n            }\n        ],\n\n        // Chrome mappings\n        [\n            \"OUYA Game Controller (Vendor: 2836 Product: 0001)\",\n            {\n                \"axes\" : [ 0, 1, 3, 4 ],\n                \"buttons\" : [ 0, 3, 1, 2, 4, 5, 12, 13, -1, -1, 6, 7, 8, 9, 10, 11, -1 ],\n                \"analog\" : [ -1, -1, -1, -1, -1, -1, 2, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n                \"normalize_fn\" : ouyaNormalizeFn\n            }\n        ]\n    ].forEach(function (value) {\n        addMapping(value[0], value[1]);\n    });\n\n    /**\n     * gamepad connected callback\n     * @ignore\n     */\n    window.addEventListener(\"gamepadconnected\", function (event) {\n        me.event.publish(me.event.GAMEPAD_CONNECTED, [ event.gamepad ]);\n    }, false);\n\n    /**\n     * gamepad disconnected callback\n     * @ignore\n     */\n    window.addEventListener(\"gamepaddisconnected\", function (event) {\n        me.event.publish(me.event.GAMEPAD_DISCONNECTED, [ event.gamepad ]);\n    }, false);\n\n    /**\n     * Update gamepad status\n     * @ignore\n     */\n    api._updateGamepads = navigator.getGamepads ? function () {\n        var gamepads = navigator.getGamepads();\n        var e = {};\n\n        // Trigger button bindings\n        Object.keys(bindings).forEach(function (index) {\n            if (!gamepads[index]) {\n                return;\n            }\n\n            var mapping = null;\n            if (gamepads[index].mapping !== \"standard\") {\n                mapping = remap.get(gamepads[index].id);\n            }\n\n            // Iterate all buttons that have active bindings\n            Object.keys(bindings[index].buttons).forEach(function (button) {\n                var last = bindings[index].buttons[button];\n                var mapped_button = button;\n                var mapped_axis = -1;\n\n                // Remap buttons if necessary\n                if (mapping) {\n                    mapped_button = mapping.buttons[button];\n                    mapped_axis = mapping.analog[button];\n                    if (mapped_button < 0 && mapped_axis < 0) {\n                        // Button is not mapped\n                        return;\n                    }\n                }\n\n                // Get mapped button\n                var current = gamepads[index].buttons[mapped_button] || {};\n\n                // Remap an axis to an analog button\n                if (mapping) {\n                    if (mapped_axis >= 0) {\n                        var value = mapping.normalize_fn(gamepads[index].axes[mapped_axis], -1, +button);\n\n                        // Create a new object, because GamepadButton is read-only\n                        current = {\n                            \"value\" : value,\n                            \"pressed\" : current.pressed || (Math.abs(value) >= deadzone)\n                        };\n                    }\n                }\n\n                me.event.publish(me.event.GAMEPAD_UPDATE, [ index, \"buttons\", +button, current ]);\n\n                // Edge detection\n                if (!last.pressed && current.pressed) {\n                    api._keydown(e, last.keyCode, mapped_button + 256);\n                }\n                else if (last.pressed && !current.pressed) {\n                    api._keyup(e, last.keyCode, mapped_button + 256);\n                }\n\n                // Update last button state\n                last.value = current.value;\n                last.pressed = current.pressed;\n            });\n        });\n    } : function () {};\n\n    /*\n     * PUBLIC STUFF\n     */\n\n    /**\n     * Namespace for standard gamepad mapping constants\n     * @public\n     * @namespace GAMEPAD\n     * @memberOf me.input\n     */\n    api.GAMEPAD = {\n        /**\n         * Standard gamepad mapping information for axes<br>\n         * <ul>\n         *   <li>Left control stick: <code>LX</code> (horizontal), <code>LY</code> (vertical)</li>\n         *   <li>Right control stick: <code>RX</code> (horizontal), <code>RY</code> (vertical)</li>\n         *   <li>Extras: <code>EXTRA_1</code>, <code>EXTRA_2</code>, <code>EXTRA_3</code>, <code>EXTRA_4</code></li>\n         * </ul>\n         * @public\n         * @name AXES\n         * @enum {Number}\n         * @memberOf me.input.GAMEPAD\n         * @see https://w3c.github.io/gamepad/#remapping\n         */\n        \"AXES\" : {\n            \"LX\"        : 0,\n            \"LY\"        : 1,\n            \"RX\"        : 2,\n            \"RY\"        : 3,\n            \"EXTRA_1\"   : 4,\n            \"EXTRA_2\"   : 5,\n            \"EXTRA_3\"   : 6,\n            \"EXTRA_4\"   : 7\n        },\n\n        /**\n         * Standard gamepad mapping information for buttons<br>\n         * <ul>\n         *   <li>Face buttons: <code>FACE_1</code>, <code>FACE_2</code>, <code>FACE_3</code>, <code>FACE_4</code></li>\n         *   <li>D-Pad: <code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code></li>\n         *   <li>Shoulder buttons: <code>L1</code>, <code>L2</code>, <code>R1</code>, <code>R2</code></li>\n         *   <li>Analog stick (clicks): <code>L3</code>, <code>R3</code></li>\n         *   <li>Navigation: <code>SELECT</code> (<code>BACK</code>), <code>START</code> (<code>FORWARD</code>), <code>HOME</code></li>\n         *   <li>Extras: <code>EXTRA_1</code>, <code>EXTRA_2</code>, <code>EXTRA_3</code>, <code>EXTRA_4</code></li>\n         * </ul>\n         * @public\n         * @name BUTTONS\n         * @enum {Number}\n         * @memberOf me.input.GAMEPAD\n         * @see https://w3c.github.io/gamepad/#remapping\n         */\n        \"BUTTONS\" : {\n            \"FACE_1\"    : 0,\n            \"FACE_2\"    : 1,\n            \"FACE_3\"    : 2,\n            \"FACE_4\"    : 3,\n            \"L1\"        : 4,\n            \"R1\"        : 5,\n            \"L2\"        : 6,\n            \"R2\"        : 7,\n            \"SELECT\"    : 8,\n            \"BACK\"      : 8,\n            \"START\"     : 9,\n            \"FORWARD\"   : 9,\n            \"L3\"        : 10,\n            \"R3\"        : 11,\n            \"UP\"        : 12,\n            \"DOWN\"      : 13,\n            \"LEFT\"      : 14,\n            \"RIGHT\"     : 15,\n            \"HOME\"      : 16,\n            \"EXTRA_1\"   : 17,\n            \"EXTRA_2\"   : 18,\n            \"EXTRA_3\"   : 19,\n            \"EXTRA_4\"   : 20\n        }\n    };\n\n    /**\n     * Associate a gamepad event to a keycode\n     * @name bindGamepad\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} index Gamepad index\n     * @param {me.input.GAMEPAD.BUTTONS} button\n     * @param {me.input.KEY} keyCode\n     * @example\n     * // enable the keyboard\n     * me.input.bindKey(me.input.KEY.X, \"shoot\");\n     * // map the lower face button on the first gamepad to the X key\n     * me.input.bindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1, me.input.KEY.X);\n     */\n    api.bindGamepad = function (index, button, keyCode) {\n        // Throw an exception if no action is defined for the specified keycode\n        if (!api._KeyBinding[keyCode]) {\n            throw new me.Error(\"no action defined for keycode \" + keyCode);\n        }\n\n        // Allocate bindings if not defined\n        if (!bindings[index]) {\n            bindings[index] = {\n                \"axes\" : {},\n                \"buttons\" : {}\n            };\n        }\n\n        // Map the gamepad button to the keycode\n        bindings[index].buttons[button] = {\n            \"keyCode\" : keyCode,\n            \"value\" : 0,\n            \"pressed\" : false\n        };\n    };\n\n    /**\n     * unbind the defined keycode\n     * @name unbindGamepad\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} index Gamepad index\n     * @param {me.input.GAMEPAD.BUTTONS} button\n     * @example\n     * me.input.unbindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1);\n     */\n    api.unbindGamepad = function (index, button) {\n        if (!bindings[index]) {\n            throw new me.Error(\"no bindings for gamepad \" + index);\n        }\n        bindings[index].buttons[button] = {};\n    };\n\n    /**\n     * Set deadzone for analog gamepad inputs<br>\n     * The default deadzone is 0.1 (10%) Analog values less than this will be ignored\n     * @name setGamepadDeadzone\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {Number} value Deadzone value\n     */\n    api.setGamepadDeadzone = function (value) {\n        deadzone = value;\n    };\n\n    /**\n     * specify a custom mapping for a specific gamepad id<br>\n     * see below for the default mapping : <br>\n     * <center><img src=\"images/gamepad_diagram.png\"/></center><br>\n     * @name setGamepadMapping\n     * @memberOf me.input\n     * @public\n     * @function\n     * @param {String} id Gamepad id string\n     * @param {Object} mapping A hash table\n     * @param {Number[]} mapping.axes Standard analog control stick axis locations\n     * @param {Number[]} mapping.buttons Standard digital button locations\n     * @param {Number[]} [mapping.analog] Analog axis locations for buttons\n     * @param {me.input~normalize_fn} [mapping.normalize_fn] Axis normalization function\n     * @example\n     * // A weird controller that has its axis mappings reversed\n     * me.input.setGamepadMapping(\"Generic USB Controller\", {\n     *   \"axes\" : [ 3, 2, 1, 0 ],\n     *   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]\n     * });\n     *\n     * // Mapping extra axes to analog buttons\n     * me.input.setGamepadMapping(\"Generic Analog Controller\", {\n     *   \"axes\" : [ 0, 1, 2, 3 ],\n     *   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],\n     *\n     *   // Raw axis 4 is mapped to GAMEPAD.BUTTONS.FACE_1\n     *   // Raw axis 5 is mapped to GAMEPAD.BUTTONS.FACE_2\n     *   // etc...\n     *   // Also maps left and right triggers\n     *   \"analog\" : [ 4, 5, 6, 7, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n     *\n     *   // Normalize the value of button L2: [-1.0..1.0] => [0.0..1.0]\n     *   \"normalize_fn\" : function (value, axis, button) {\n     *     return ((button === me.input.GAMEPAD.BUTTONS.L2) ? ((value + 1) / 2) : value) || 0;\n     *   }\n     * });\n     */\n    api.setGamepadMapping = addMapping;\n\n})(me.input);\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * Base64 decoding\n     * @see <a href=\"http://www.webtoolkit.info/\">http://www.webtoolkit.info/</A>\n     * @ignore\n     */\n    var Base64 = (function () {\n        // hold public stuff in our singleton\n        var singleton = {};\n\n        // private property\n        var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n        // public method for decoding\n        singleton.decode = function (input) {\n\n            // make sure our input string has the right format\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n            if (me.device.nativeBase64) {\n                // use native decoder\n                return window.atob(input);\n            }\n            else {\n                // use cross-browser decoding\n                var output = [], chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n\n                while (i < input.length) {\n                    enc1 = _keyStr.indexOf(input.charAt(i++));\n                    enc2 = _keyStr.indexOf(input.charAt(i++));\n                    enc3 = _keyStr.indexOf(input.charAt(i++));\n                    enc4 = _keyStr.indexOf(input.charAt(i++));\n\n                    chr1 = (enc1 << 2) | (enc2 >> 4);\n                    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                    chr3 = ((enc3 & 3) << 6) | enc4;\n\n                    output.push(String.fromCharCode(chr1));\n\n                    if (enc3 !== 64) {\n                        output.push(String.fromCharCode(chr2));\n                    }\n                    if (enc4 !== 64) {\n                        output.push(String.fromCharCode(chr3));\n                    }\n                }\n\n                output = output.join(\"\");\n                return output;\n            }\n        };\n\n        // public method for encoding\n        singleton.encode = function (input) {\n\n            // make sure our input string has the right format\n            input = input.replace(/\\r\\n/g, \"\\n\");\n\n            if (me.device.nativeBase64) {\n                // use native encoder\n                return window.btoa(input);\n            }\n            else {\n                // use cross-browser encoding\n                var output = [], chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;\n\n\n                while (i < input.length) {\n                    chr1 = input.charCodeAt(i++);\n                    chr2 = input.charCodeAt(i++);\n                    chr3 = input.charCodeAt(i++);\n\n                    enc1 = chr1 >> 2;\n                    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                    enc4 = chr3 & 63;\n\n                    if (isNaN(chr2)) {\n                        enc3 = enc4 = 64;\n                    } else if (isNaN(chr3)) {\n                        enc4 = 64;\n                    }\n\n                    output.push(_keyStr.charAt(enc1));\n                    output.push(_keyStr.charAt(enc2));\n                    output.push(_keyStr.charAt(enc3));\n                    output.push(_keyStr.charAt(enc4));\n                }\n\n                output = output.join(\"\");\n                return output;\n            }\n        };\n\n        return singleton;\n\n    })();\n\n    /**\n     * a collection of utility functions<br>\n     * there is no constructor function for me.utils\n     * @namespace me.utils\n     * @memberOf me\n     */\n    me.utils = (function () {\n        // hold public stuff in our singleton\n        var api = {};\n\n        /*\n         * PRIVATE STUFF\n         */\n\n        // guid default value\n        var GUID_base  = \"\";\n        var GUID_index = 0;\n\n        // regexp to deal with file name & path\n        var removepath = /^.*(\\\\|\\/|\\:)/;\n        var removeext = /\\.[^\\.]*$/;\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * Decode a base64 encoded string into a binary string\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name decodeBase64\n         * @param {String} input Base64 encoded data\n         * @return {String} Binary string\n         */\n        api.decodeBase64 = function (input) {\n            return Base64.decode(input);\n        };\n\n        /**\n         * Encode binary string into a base64 string\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name encodeBase64\n         * @param {String} input Binary string\n         * @return {String} Base64 encoded data\n         */\n        api.encodeBase64 = function (input) {\n            return Base64.encode(input);\n        };\n\n        /**\n         * Decode a base64 encoded string into a byte array\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name decodeBase64AsArray\n         * @param {String} input Base64 encoded data\n         * @param {Number} [bytes] number of bytes per array entry\n         * @return {Number[]} Decoded data\n         */\n        api.decodeBase64AsArray = function (input, bytes) {\n            bytes = bytes || 1;\n\n            var dec = Base64.decode(input), i, j, len;\n            var ar = new Uint32Array(dec.length / bytes);\n\n            for (i = 0, len = dec.length / bytes; i < len; i++) {\n                ar[i] = 0;\n                for (j = bytes - 1; j >= 0; --j) {\n                    ar[i] += dec.charCodeAt((i * bytes) + j) << (j << 3);\n                }\n            }\n            return ar;\n        };\n\n        /**\n         * decompress zlib/gzip data (NOT IMPLEMENTED)\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name decompress\n         * @param  {Number[]} data Array of bytes\n         * @param  {String} format compressed data format (\"gzip\",\"zlib\")\n         * @return {Number[]} Decompressed data\n         */\n        api.decompress = function () {\n            throw new me.Error(\"GZIP/ZLIB compressed TMX Tile Map not supported!\");\n        };\n\n        /**\n         * Decode a CSV encoded array into a binary array\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name decodeCSV\n         * @param  {String} input CSV formatted data\n         * @return {Number[]} Decoded data\n         */\n        api.decodeCSV = function (input) {\n            var entries = input.replace(\"\\n\", \"\").trim().split(\",\");\n\n            var result = [];\n            for (var i = 0; i < entries.length; i++) {\n                result.push(+entries[i]);\n            }\n            return result;\n        };\n\n        /**\n         * return the base name of the file without path info.<br>\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name getBasename\n         * @param  {String} path path containing the filename\n         * @return {String} the base name without path information.\n         */\n        api.getBasename = function (path) {\n            return path.replace(removepath, \"\").replace(removeext, \"\");\n        };\n\n        /**\n         * return the extension of the file in the given path <br>\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name getFileExtension\n         * @param  {String} path path containing the filename\n         * @return {String} filename extension.\n         */\n        api.getFileExtension = function (path) {\n            return path.substring(path.lastIndexOf(\".\") + 1, path.length);\n        };\n\n        /**\n         * Get image pixels\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name getPixels\n         * @param {Image|Canvas} image Image to read\n         * @return {ImageData} Canvas ImageData object\n         */\n        api.getPixels = function (arg) {\n            if (arg instanceof HTMLImageElement) {\n                var _context = me.CanvasRenderer.getContext2d(\n                    me.video.createCanvas(arg.width, arg.height)\n                );\n                _context.drawImage(arg, 0, 0);\n                return _context.getImageData(0, 0, arg.width, arg.height);\n            }\n            else {\n                // canvas !\n                return arg.getContext(\"2d\").getImageData(0, 0, arg.width, arg.height);\n            }\n        };\n\n        /**\n         * Normalize a String or Image to an Image reference\n         * @public\n         * @function\n         * @memberOf me.utils\n         * @name getImage\n         * @param {Image|String} image Image name or Image reference\n         * @return {Image} Image reference\n         */\n        api.getImage = function (image) {\n            return (\n                (typeof(image) === \"string\") ?\n                me.loader.getImage(me.utils.getBasename(image)) :\n                image\n            );\n        };\n\n        /**\n         * reset the GUID Base Name\n         * the idea here being to have a unique ID\n         * per level / object\n         * @ignore\n         */\n        api.resetGUID = function (base, index) {\n            // also ensure it's only 8bit ASCII characters\n            GUID_base  = base.toString().toUpperCase().toHex();\n            GUID_index = index || 0;\n        };\n\n        /**\n         * create and return a very simple GUID\n         * Game Unique ID\n         * @ignore\n         */\n        api.createGUID = function (index) {\n            // to cover the case of undefined id for groups\n            GUID_index += index || 1;\n            return GUID_base + \"-\" + (index || GUID_index);\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n(function () {\n    var rgbaRx = /^rgba?\\((\\d+), ?(\\d+), ?(\\d+)(, ?([\\d\\.]+))?\\)$/;\n    var hex3Rx = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])$/;\n    var hex4Rx = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])$/;\n    var hex6Rx = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})$/;\n    var hex8Rx = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})$/;\n\n    var cssToRGB = new Map();\n\n    [\n        // CSS1\n        [ \"black\",                  [   0,   0,   0 ] ],\n        [ \"silver\",                 [ 192, 192, 129 ] ],\n        [ \"gray\",                   [ 128, 128, 128 ] ],\n        [ \"white\",                  [ 255, 255, 255 ] ],\n        [ \"maroon\",                 [ 128,   0,   0 ] ],\n        [ \"red\",                    [ 255,   0,   0 ] ],\n        [ \"purple\",                 [ 128,   0, 128 ] ],\n        [ \"fuchsia\",                [ 255,   0, 255 ] ],\n        [ \"green\",                  [   0, 128,   0 ] ],\n        [ \"lime\",                   [   0, 255,   0 ] ],\n        [ \"olive\",                  [ 128, 128,   0 ] ],\n        [ \"yellow\",                 [ 255, 255,   0 ] ],\n        [ \"navy\",                   [   0,   0, 128 ] ],\n        [ \"blue\",                   [   0,   0, 255 ] ],\n        [ \"teal\",                   [   0, 128, 128 ] ],\n        [ \"aqua\",                   [   0, 255, 255 ] ],\n\n        // CSS2\n        [ \"orange\",                 [ 255, 165,   0 ] ],\n\n        // CSS3\n        [ \"aliceblue\",              [ 240, 248, 245 ] ],\n        [ \"antiquewhite\",           [ 250, 235, 215 ] ],\n        [ \"aquamarine\",             [ 127, 255, 212 ] ],\n        [ \"azure\",                  [ 240, 255, 255 ] ],\n        [ \"beige\",                  [ 245, 245, 220 ] ],\n        [ \"bisque\",                 [ 255, 228, 196 ] ],\n        [ \"blanchedalmond\",         [ 255, 235, 205 ] ],\n        [ \"blueviolet\",             [ 138,  43, 226 ] ],\n        [ \"brown\",                  [ 165,  42,  42 ] ],\n        [ \"burlywood\",              [ 222, 184,  35 ] ],\n        [ \"cadetblue\",              [  95, 158, 160 ] ],\n        [ \"chartreuse\",             [ 127, 255,   0 ] ],\n        [ \"chocolate\",              [ 210, 105,  30 ] ],\n        [ \"coral\",                  [ 255, 127,  80 ] ],\n        [ \"cornflowerblue\",         [ 100, 149, 237 ] ],\n        [ \"cornsilk\",               [ 255, 248, 220 ] ],\n        [ \"crimson\",                [ 220,  20,  60 ] ],\n        [ \"darkblue\",               [   0,   0, 139 ] ],\n        [ \"darkcyan\",               [   0, 139, 139 ] ],\n        [ \"darkgoldenrod\",          [ 184, 134,  11 ] ],\n        [ \"darkgray[*]\",            [ 169, 169, 169 ] ],\n        [ \"darkgreen\",              [   0, 100,   0 ] ],\n        [ \"darkgrey[*]\",            [ 169, 169, 169 ] ],\n        [ \"darkkhaki\",              [ 189, 183, 107 ] ],\n        [ \"darkmagenta\",            [ 139,   0, 139 ] ],\n        [ \"darkolivegreen\",         [  85, 107,  47 ] ],\n        [ \"darkorange\",             [ 255, 140,   0 ] ],\n        [ \"darkorchid\",             [ 153,  50, 204 ] ],\n        [ \"darkred\",                [ 139,   0,   0 ] ],\n        [ \"darksalmon\",             [ 233, 150, 122 ] ],\n        [ \"darkseagreen\",           [ 143, 188, 143 ] ],\n        [ \"darkslateblue\",          [  72,  61, 139 ] ],\n        [ \"darkslategray\",          [  47,  79,  79 ] ],\n        [ \"darkslategrey\",          [  47,  79,  79 ] ],\n        [ \"darkturquoise\",          [   0, 206, 209 ] ],\n        [ \"darkviolet\",             [ 148,   0, 211 ] ],\n        [ \"deeppink\",               [ 255,  20, 147 ] ],\n        [ \"deepskyblue\",            [   0, 191, 255 ] ],\n        [ \"dimgray\",                [ 105, 105, 105 ] ],\n        [ \"dimgrey\",                [ 105, 105, 105 ] ],\n        [ \"dodgerblue\",             [  30, 144, 255 ] ],\n        [ \"firebrick\",              [ 178,  34,  34 ] ],\n        [ \"floralwhite\",            [ 255, 250, 240 ] ],\n        [ \"forestgreen\",            [  34, 139,  34 ] ],\n        [ \"gainsboro\",              [ 220, 220, 220 ] ],\n        [ \"ghostwhite\",             [ 248, 248, 255 ] ],\n        [ \"gold\",                   [ 255, 215,   0 ] ],\n        [ \"goldenrod\",              [ 218, 165,  32 ] ],\n        [ \"greenyellow\",            [ 173, 255,  47 ] ],\n        [ \"grey\",                   [ 128, 128, 128 ] ],\n        [ \"honeydew\",               [ 240, 255, 240 ] ],\n        [ \"hotpink\",                [ 255, 105, 180 ] ],\n        [ \"indianred\",              [ 205,  92,  92 ] ],\n        [ \"indigo\",                 [  75,   0, 130 ] ],\n        [ \"ivory\",                  [ 255, 255, 240 ] ],\n        [ \"khaki\",                  [ 240, 230, 140 ] ],\n        [ \"lavender\",               [ 230, 230, 250 ] ],\n        [ \"lavenderblush\",          [ 255, 240, 245 ] ],\n        [ \"lawngreen\",              [ 124, 252,   0 ] ],\n        [ \"lemonchiffon\",           [ 255, 250, 205 ] ],\n        [ \"lightblue\",              [ 173, 216, 230 ] ],\n        [ \"lightcoral\",             [ 240, 128, 128 ] ],\n        [ \"lightcyan\",              [ 224, 255, 255 ] ],\n        [ \"lightgoldenrodyellow\",   [ 250, 250, 210 ] ],\n        [ \"lightgray\",              [ 211, 211, 211 ] ],\n        [ \"lightgreen\",             [ 144, 238, 144 ] ],\n        [ \"lightgrey\",              [ 211, 211, 211 ] ],\n        [ \"lightpink\",              [ 255, 182, 193 ] ],\n        [ \"lightsalmon\",            [ 255, 160, 122 ] ],\n        [ \"lightseagreen\",          [  32, 178, 170 ] ],\n        [ \"lightskyblue\",           [ 135, 206, 250 ] ],\n        [ \"lightslategray\",         [ 119, 136, 153 ] ],\n        [ \"lightslategrey\",         [ 119, 136, 153 ] ],\n        [ \"lightsteelblue\",         [ 176, 196, 222 ] ],\n        [ \"lightyellow\",            [ 255, 255, 224 ] ],\n        [ \"limegreen\",              [  50, 205,  50 ] ],\n        [ \"linen\",                  [ 250, 240, 230 ] ],\n        [ \"mediumaquamarine\",       [ 102, 205, 170 ] ],\n        [ \"mediumblue\",             [   0,   0, 205 ] ],\n        [ \"mediumorchid\",           [ 186,  85, 211 ] ],\n        [ \"mediumpurple\",           [ 147, 112, 219 ] ],\n        [ \"mediumseagreen\",         [  60, 179, 113 ] ],\n        [ \"mediumslateblue\",        [ 123, 104, 238 ] ],\n        [ \"mediumspringgreen\",      [   0, 250, 154 ] ],\n        [ \"mediumturquoise\",        [  72, 209, 204 ] ],\n        [ \"mediumvioletred\",        [ 199,  21, 133 ] ],\n        [ \"midnightblue\",           [  25,  25, 112 ] ],\n        [ \"mintcream\",              [ 245, 255, 250 ] ],\n        [ \"mistyrose\",              [ 255, 228, 225 ] ],\n        [ \"moccasin\",               [ 255, 228, 181 ] ],\n        [ \"navajowhite\",            [ 255, 222, 173 ] ],\n        [ \"oldlace\",                [ 253, 245, 230 ] ],\n        [ \"olivedrab\",              [ 107, 142,  35 ] ],\n        [ \"orangered\",              [ 255,  69,   0 ] ],\n        [ \"orchid\",                 [ 218, 112, 214 ] ],\n        [ \"palegoldenrod\",          [ 238, 232, 170 ] ],\n        [ \"palegreen\",              [ 152, 251, 152 ] ],\n        [ \"paleturquoise\",          [ 175, 238, 238 ] ],\n        [ \"palevioletred\",          [ 219, 112, 147 ] ],\n        [ \"papayawhip\",             [ 255, 239, 213 ] ],\n        [ \"peachpuff\",              [ 255, 218, 185 ] ],\n        [ \"peru\",                   [ 205, 133,  63 ] ],\n        [ \"pink\",                   [ 255, 192, 203 ] ],\n        [ \"plum\",                   [ 221, 160, 221 ] ],\n        [ \"powderblue\",             [ 176, 224, 230 ] ],\n        [ \"rosybrown\",              [ 188, 143, 143 ] ],\n        [ \"royalblue\",              [  65, 105, 225 ] ],\n        [ \"saddlebrown\",            [ 139,  69,  19 ] ],\n        [ \"salmon\",                 [ 250, 128, 114 ] ],\n        [ \"sandybrown\",             [ 244, 164,  96 ] ],\n        [ \"seagreen\",               [  46, 139,  87 ] ],\n        [ \"seashell\",               [ 255, 245, 238 ] ],\n        [ \"sienna\",                 [ 160,  82,  45 ] ],\n        [ \"skyblue\",                [ 135, 206, 235 ] ],\n        [ \"slateblue\",              [ 106,  90, 205 ] ],\n        [ \"slategray\",              [ 112, 128, 144 ] ],\n        [ \"slategrey\",              [ 112, 128, 144 ] ],\n        [ \"snow\",                   [ 255, 250, 250 ] ],\n        [ \"springgreen\",            [   0, 255, 127 ] ],\n        [ \"steelblue\",              [  70, 130, 180 ] ],\n        [ \"tan\",                    [ 210, 180, 140 ] ],\n        [ \"thistle\",                [ 216, 191, 216 ] ],\n        [ \"tomato\",                 [ 255,  99,  71 ] ],\n        [ \"turquoise\",              [  64, 224, 208 ] ],\n        [ \"violet\",                 [ 238, 130, 238 ] ],\n        [ \"wheat\",                  [ 245, 222, 179 ] ],\n        [ \"whitesmoke\",             [ 245, 245, 245 ] ],\n        [ \"yellowgreen\",            [ 154, 205,  50 ] ]\n    ].forEach(function (value) {\n        cssToRGB.set(value[0], value[1]);\n    });\n\n    /**\n     * A color manipulation object.\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     * @param {Float32Array|Number} [r=0] red component or array of color components\n     * @param {Number} [g=0] green component\n     * @param {Number} [b=0] blue component\n     * @param {Number} [alpha=1.0] alpha value\n     */\n    me.Color = me.Object.extend(\n    /** @scope me.Color.prototype */\n    {\n\n        /** @ignore */\n        init : function (r, g, b, alpha) {\n\n            /**\n             * Color components in a Float32Array suitable for WebGL\n             * @name glArray\n             * @memberOf me.Color\n             * @type {Float32Array}\n             * @readonly\n             */\n            if (typeof (this.glArray) === \"undefined\") {\n                this.glArray = new Float32Array([ 0.0, 0.0, 0.0, 1.0 ]);\n            }\n\n            return this.setColor(r, g, b, alpha);\n        },\n\n        /**\n         * Set this color to the specified value.\n         * @name setColor\n         * @memberOf me.Color\n         * @function\n         * @param {Number} r red component [0 .. 255]\n         * @param {Number} g green component [0 .. 255]\n         * @param {Number} b blue component [0 .. 255]\n         * @param {Number} [alpha=1.0] alpha value [0.0 .. 1.0]\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        setColor : function (r, g, b, alpha) {\n            // Private initialization: copy Color value directly\n            if (r instanceof me.Color) {\n                this.glArray.set(r.glArray);\n                return r;\n            }\n            this.r = r;\n            this.g = g;\n            this.b = b;\n            this.alpha = alpha;\n            return this;\n        },\n\n        /**\n         * Create a new copy of this color object.\n         * @name clone\n         * @memberOf me.Color\n         * @function\n         * @return {me.Color} Reference to the newly cloned object\n         */\n        clone : function () {\n            return me.pool.pull(\"me.Color\", this);\n        },\n\n        /**\n         * Copy a color object or CSS color into this one.\n         * @name copy\n         * @memberOf me.Color\n         * @function\n         * @param {me.Color|String} color\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        copy : function (color) {\n            if (color instanceof me.Color) {\n                this.glArray.set(color.glArray);\n                return this;\n            }\n\n            return this.parseCSS(color);\n        },\n\n        /**\n         * Blend this color with the given one using addition.\n         * @name add\n         * @memberOf me.Color\n         * @function\n         * @param {me.Color} color\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        add : function (color) {\n            this.glArray[0] = (this.glArray[0] + color.glArray[0]).clamp(0, 1);\n            this.glArray[1] = (this.glArray[1] + color.glArray[1]).clamp(0, 1);\n            this.glArray[2] = (this.glArray[2] + color.glArray[2]).clamp(0, 1);\n            this.glArray[3] = (this.glArray[3] + color.glArray[3]) / 2;\n\n            return this;\n        },\n\n        /**\n         * Darken this color value by 0..1\n         * @name darken\n         * @memberOf me.Color\n         * @function\n         * @param {Number} scale\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        darken : function (scale) {\n            scale = scale.clamp(0, 1);\n            this.glArray[0] *= scale;\n            this.glArray[1] *= scale;\n            this.glArray[2] *= scale;\n\n            return this;\n        },\n\n        /**\n         * Lighten this color value by 0..1\n         * @name lighten\n         * @memberOf me.Color\n         * @function\n         * @param {Number} scale\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        lighten : function (scale) {\n            scale = scale.clamp(0, 1);\n            this.glArray[0] = (this.glArray[0] + (1 - this.glArray[0]) * scale).clamp(0, 1);\n            this.glArray[1] = (this.glArray[1] + (1 - this.glArray[1]) * scale).clamp(0, 1);\n            this.glArray[2] = (this.glArray[2] + (1 - this.glArray[2]) * scale).clamp(0, 1);\n\n            return this;\n        },\n\n        /**\n         * Generate random r,g,b values for this color object\n         * @name random\n         * @memberOf me.Color\n         * @function\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        random : function () {\n            return this.setColor(\n                Math.random() * 256,\n                Math.random() * 256,\n                Math.random() * 256,\n                this.alpha\n            );\n        },\n\n        /**\n         * Return true if the r,g,b,a values of this color are equal with the\n         * given one.\n         * @name equals\n         * @memberOf me.Color\n         * @function\n         * @param {me.Color} color\n         * @return {Boolean}\n         */\n        equals : function (color) {\n            return (\n                (this.glArray[0] === color.glArray[0]) &&\n                (this.glArray[1] === color.glArray[1]) &&\n                (this.glArray[2] === color.glArray[2]) &&\n                (this.glArray[3] === color.glArray[3])\n            );\n        },\n\n        /**\n         * Parse a CSS color string and set this color to the corresponding\n         * r,g,b values\n         * @name parseCSS\n         * @memberOf me.Color\n         * @function\n         * @param {String} color\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        parseCSS : function (cssColor) {\n            // TODO : Memoize this function by caching its input\n\n            if (cssToRGB.has(cssColor)) {\n                return this.setColor.apply(this, cssToRGB.get(cssColor));\n            }\n\n            return this.parseRGB(cssColor);\n        },\n\n        /**\n         * Parse an RGB or RGBA CSS color string\n         * @name parseRGB\n         * @memberOf me.Color\n         * @function\n         * @param {String} color\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        parseRGB : function (rgbColor) {\n            // TODO : Memoize this function by caching its input\n\n            var match = rgbaRx.exec(rgbColor);\n            if (match) {\n                return this.setColor(+match[1], +match[2], +match[3], +match[5]);\n            }\n\n            return this.parseHex(rgbColor);\n        },\n\n        /**\n         * Parse a Hex color (\"#RGB\", \"#ARGB\" or \"#RRGGBB\", \"#AARRGGBB\" format) and set this color to\n         * the corresponding r,g,b values\n         * @name parseHex\n         * @memberOf me.Color\n         * @function\n         * @param {String} color\n         * @return {me.Color} Reference to this object for method chaining\n         */\n        parseHex : function (hexColor) {\n            // TODO : Memoize this function by caching its input\n\n            var match;\n            if ((match = hex8Rx.exec(hexColor))) {\n                // #AARRGGBB\n                return this.setColor(\n                    parseInt(match[2], 16),\n                    parseInt(match[3], 16),\n                    parseInt(match[4], 16),\n                    (parseInt(match[1], 16).clamp(0, 255) / 255.0).toFixed(1)\n                );\n            }\n\n            if ((match = hex6Rx.exec(hexColor))) {\n                // #RRGGBB\n                return this.setColor(\n                    parseInt(match[1], 16),\n                    parseInt(match[2], 16),\n                    parseInt(match[3], 16)\n                );\n            }\n\n            if ((match = hex4Rx.exec(hexColor))) {\n                // #ARGB\n                return this.setColor(\n                    parseInt(match[2] + match[2], 16),\n                    parseInt(match[3] + match[3], 16),\n                    parseInt(match[4] + match[4], 16),\n                    (parseInt(match[1] + match[1], 16).clamp(0, 255) / 255.0).toFixed(1)\n                );\n            }\n\n            if ((match = hex3Rx.exec(hexColor))) {\n                // #RGB\n                return this.setColor(\n                    parseInt(match[1] + match[1], 16),\n                    parseInt(match[2] + match[2], 16),\n                    parseInt(match[3] + match[3], 16)\n                );\n            }\n\n            throw new me.Color.Error(\n                \"invalid parameter: \" + hexColor\n            );\n        },\n\n        /**\n         * Returns the private glArray\n         * @ignore\n         */\n        toGL : function () {\n            return this.glArray;\n        },\n\n        /**\n         * Get the color in \"#RRGGBB\" format\n         * @name toHex\n         * @memberOf me.Color\n         * @function\n         * @return {String}\n         */\n        toHex : function () {\n            // TODO : Memoize this function by caching its result until any of\n            // the r,g,b,a values are changed\n\n            return \"#\" + this.r.toHex() + this.g.toHex() + this.b.toHex();\n        },\n\n        /**\n         * Get the color in \"rgb(R,G,B)\" format\n         * @name toRGB\n         * @memberOf me.Color\n         * @function\n         * @return {String}\n         */\n        toRGB : function () {\n            // TODO : Memoize this function by caching its result until any of\n            // the r,g,b,a values are changed\n\n            return \"rgb(\" +\n                this.r + \",\" +\n                this.g + \",\" +\n                this.b +\n            \")\";\n        },\n\n        /**\n         * Get the color in \"rgba(R,G,B,A)\" format\n         * @name toRGBA\n         * @memberOf me.Color\n         * @function\n         * @return {String}\n         */\n        toRGBA : function () {\n            // TODO : Memoize this function by caching its result until any of\n            // the r,g,b,a values are changed\n\n            return \"rgba(\" +\n                this.r + \",\" +\n                this.g + \",\" +\n                this.b + \",\" +\n                this.alpha +\n            \")\";\n        }\n    });\n\n    /**\n     * Color Red Component\n     * @type Number\n     * @name r\n     * @readonly\n     * @memberOf me.Color\n     */\n    Object.defineProperty(me.Color.prototype, \"r\", {\n        get : function () { return ~~(this.glArray[0] * 255); },\n        set : function (value) { this.glArray[0] = (~~value || 0).clamp(0, 255) / 255.0; },\n        enumerable : true,\n        configurable : true\n    });\n\n    /**\n     * Color Green Component\n     * @type Number\n     * @name g\n     * @readonly\n     * @memberOf me.Color\n     */\n    Object.defineProperty(me.Color.prototype, \"g\", {\n        get : function () { return ~~(this.glArray[1] * 255); },\n        set : function (value) { this.glArray[1] = (~~value || 0).clamp(0, 255) / 255.0; },\n        enumerable : true,\n        configurable : true\n    });\n\n    /**\n     * Color Blue Component\n     * @type Number\n     * @name b\n     * @readonly\n     * @memberOf me.Color\n     */\n    Object.defineProperty(me.Color.prototype, \"b\", {\n        get : function () { return ~~(this.glArray[2] * 255); },\n        set : function (value) { this.glArray[2] = (~~value || 0).clamp(0, 255) / 255.0; },\n        enumerable : true,\n        configurable : true\n    });\n\n    /**\n     * Color Alpha Component\n     * @type Number\n     * @name alpha\n     * @readonly\n     * @memberOf me.Color\n     */\n    Object.defineProperty(me.Color.prototype, \"alpha\", {\n        get : function () { return this.glArray[3]; },\n        set : function (value) { this.glArray[3] = typeof(value) === \"undefined\" ? 1.0 : (+value).clamp(0, 1); },\n        enumerable : true,\n        configurable : true\n    });\n\n    /**\n     * Base class for me.Color exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Color\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Color.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Color.Error\";\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * A singleton object to access the device localStorage area\n     * @example\n     * // Initialize \"score\" and \"lives\" with default values\n     * // This loads the properties from localStorage if they exist, else it sets the given defaults\n     * me.save.add({ score : 0, lives : 3 });\n     *\n     * // Print all\n     * // On first load, this prints { score : 0, lives : 3 }\n     * // On further reloads, it prints { score : 31337, lives : 3, complexObject : ... }\n     * // Because the following changes will be saved to localStorage\n     * console.log(JSON.stringify(me.save));\n     *\n     * // Save score\n     * me.save.score = 31337;\n     *\n     * // Also supports complex objects thanks to the JSON backend\n     * me.save.add({ complexObject : {} })\n     * me.save.complexObject = { a : \"b\", c : [ 1, 2, 3, \"d\" ], e : { f : [{}] } };\n     *\n     * // WARNING: Do not set any child properties of complex objects directly!\n     * // Changes made that way will not save. Always set the entire object value at once.\n     * // If you cannot live with this limitation, there's a workaround:\n     * me.save.complexObject.c.push(\"foo\"); // Modify a child property\n     * me.save.complexObject = me.save.complexObject; // Save the entire object!\n     *\n     * // Remove \"lives\" from localStorage\n     * me.save.remove(\"lives\");\n     * @namespace me.save\n     * @memberOf me\n     */\n    me.save = (function () {\n        // Variable to hold the object data\n        var data = {};\n\n        // a function to check if the given key is a reserved word\n        function isReserved(key) {\n            return (key === \"add\" || key === \"remove\");\n        }\n\n        // Public API\n        var api = {\n            /**\n             * @ignore\n             */\n            _init: function () {\n                // Load previous data if local Storage is supported\n                if (me.device.localStorage === true) {\n                    var keys = JSON.parse(localStorage.getItem(\"me.save\")) || [];\n                    keys.forEach(function (key) {\n                        data[key] = JSON.parse(localStorage.getItem(\"me.save.\" + key));\n                    });\n                }\n            },\n\n            /**\n             * Add new keys to localStorage and set them to the given default values if they do not exist\n             * @name add\n             * @memberOf me.save\n             * @function\n             * @param {Object} props key and corresponding values\n             * @example\n             * // Initialize \"score\" and \"lives\" with default values\n             * me.save.add({ score : 0, lives : 3 });\n             */\n            add : function (props) {\n                Object.keys(props).forEach(function (key) {\n                    if (isReserved(key)) {\n                        return;\n                    }\n\n                    (function (prop) {\n                        Object.defineProperty(api, prop, {\n                            configurable : true,\n                            enumerable : true,\n                            get : function () {\n                                return data[prop];\n                            },\n                            set : function (value) {\n                                data[prop] = value;\n                                if (me.device.localStorage === true) {\n                                    localStorage.setItem(\"me.save.\" + prop, JSON.stringify(value));\n                                }\n                            }\n                        });\n                    })(key);\n\n                    // Set default value for key\n                    if (!(key in data)) {\n                        api[key] = props[key];\n                    }\n                });\n\n                // Save keys\n                if (me.device.localStorage === true) {\n                    localStorage.setItem(\"me.save\", JSON.stringify(Object.keys(data)));\n                }\n            },\n\n            /**\n             * Remove a key from localStorage\n             * @name remove\n             * @memberOf me.save\n             * @function\n             * @param {String} key key to be removed\n             * @example\n             * // Remove the \"score\" key from localStorage\n             * me.save.remove(\"score\");\n             */\n            remove : function (key) {\n                if (!isReserved(key)) {\n                    if (typeof data[key] !== \"undefined\") {\n                        delete data[key];\n                        if (me.device.localStorage === true) {\n                            localStorage.removeItem(\"me.save.\" + key);\n                            localStorage.setItem(\"me.save\", JSON.stringify(Object.keys(data)));\n                        }\n                    }\n                }\n            }\n        };\n\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT 0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n    /**\n     * a collection of TMX utility Function\n     * @final\n     * @memberOf me\n     * @ignore\n     */\n    me.TMXUtils = (function () {\n        /*\n         * PUBLIC\n         */\n\n        // hold public stuff in our singleton\n        var api = {};\n\n        /**\n         * set and interpret a TMX property value\n         * @ignore\n         */\n        function setTMXValue(name, value) {\n            var match;\n\n            if (typeof(value) !== \"string\") {\n                // Value is already normalized\n                return value;\n            }\n\n            if (!value || value.isBoolean()) {\n                // if value not defined or boolean\n                value = value ? (value === \"true\") : true;\n            }\n            else if (value.isNumeric()) {\n                // check if numeric\n                value = Number(value);\n            }\n            else if (value.match(/^json:/i)) {\n                // try to parse it\n                match = value.split(/^json:/i)[1];\n                try {\n                    value = JSON.parse(match);\n                }\n                catch (e) {\n                    throw new me.Error(\"Unable to parse JSON: \" + match);\n                }\n            }\n            else if (value.match(/^eval:/i)) {\n                // try to evaluate it\n                match = value.split(/^eval:/i)[1];\n                try {\n                    value = eval(match);\n                }\n                catch (e) {\n                    throw new me.Error(\"Unable to evaluate: \" + match);\n                }\n            }\n\n            // normalize values\n            if (name.search(/^(ratio|anchorPoint)$/) === 0) {\n                // convert number to vector\n                if (typeof(value) === \"number\") {\n                    value = {\n                        \"x\" : value,\n                        \"y\" : value\n                    };\n                }\n            }\n\n            // return the interpreted value\n            return value;\n        }\n\n        function parseAttributes(obj, elt) {\n            // do attributes\n            if (elt.attributes && elt.attributes.length > 0) {\n                for (var j = 0; j < elt.attributes.length; j++) {\n                    var attribute = elt.attributes.item(j);\n                    if (typeof(attribute.name) !== \"undefined\") {\n                        // DOM4 (Attr no longer inherit from Node)\n                        obj[attribute.name] = attribute.value;\n                    } else {\n                        // else use the deprecated ones\n                        obj[attribute.nodeName] = attribute.nodeValue;\n                    }\n                }\n            }\n        }\n\n       /**\n        * Decode the given data\n        * @ignore\n        */\n        api.decode = function (data, encoding, compression) {\n            compression = compression || \"none\";\n            // When no encoding is given, the tiles are stored as individual XML tile elements.\n            encoding = encoding || \"xml\";\n\n            switch (encoding) {\n                case \"csv\":\n                    return me.utils.decodeCSV(data);\n\n                case \"base64\":\n                    var decoded = me.utils.decodeBase64AsArray(data, 4);\n                    return (\n                        (compression === \"none\") ?\n                        decoded :\n                        me.utils.decompress(decoded, compression)\n                    );\n\n                case \"none\":\n                    return data;\n\n                case \"xml\":\n                    throw new me.Error(\"XML encoding is deprecated, use base64 instead\");\n\n                default:\n                    throw new me.Error(\"Unknown layer encoding: \" + encoding);\n            }\n        };\n\n        /**\n         * Normalize TMX format to Tiled JSON format\n         * @ignore\n         */\n        api.normalize = function (obj, item) {\n            var nodeName = item.nodeName;\n\n            switch (nodeName) {\n                case \"data\":\n                    var data = api.parse(item);\n                    obj.data = api.decode(data.text, data.encoding, data.compression);\n                    obj.encoding = \"none\";\n                    break;\n\n                case \"imagelayer\":\n                case \"layer\":\n                case \"objectgroup\":\n                    var layer = api.parse(item);\n                    layer.type = (nodeName === \"layer\" ? \"tilelayer\" : nodeName);\n                    if (layer.image) {\n                        layer.image = layer.image.source;\n                    }\n\n                    obj.layers = obj.layers || [];\n                    obj.layers.push(layer);\n                    break;\n\n                case \"animation\":\n                    obj.animation = api.parse(item).frames;\n                    break;\n\n                case \"frame\":\n                case \"object\":\n                    var name = nodeName + \"s\";\n                    obj[name] = obj[name] || [];\n                    obj[name].push(api.parse(item));\n                    break;\n\n                case \"tile\":\n                    var tile = api.parse(item);\n                    obj.tiles = obj.tiles || {};\n                    obj.tiles[tile.id] = tile;\n                    break;\n\n                case \"tileset\":\n                    var tileset = api.parse(item);\n                    if (tileset.image) {\n                        tileset.imagewidth = tileset.image.width;\n                        tileset.imageheight = tileset.image.height;\n                        tileset.image = tileset.image.source;\n                    }\n\n                    obj.tilesets = obj.tilesets || [];\n                    obj.tilesets.push(tileset);\n                    break;\n\n                case \"polygon\":\n                case \"polyline\":\n                    obj[nodeName] = [];\n\n                    // Get a point array\n                    var points = api.parse(item).points.split(\" \");\n\n                    // And normalize them into an array of vectors\n                    for (var i = 0, v; i < points.length; i++) {\n                        v = points[i].split(\",\");\n                        obj[nodeName].push({\n                            \"x\" : +v[0],\n                            \"y\" : +v[1]\n                        });\n                    }\n\n                    break;\n\n                case \"properties\":\n                    obj.properties = api.parse(item);\n                    break;\n\n                case \"property\":\n                    var property = api.parse(item);\n                    obj[property.name] = setTMXValue(property.name, property.value);\n                    break;\n\n                default:\n                    obj[nodeName] = api.parse(item);\n                    break;\n            }\n        };\n\n        /**\n         * Parse a XML TMX object and returns the corresponding javascript object\n         * @ignore\n         */\n        api.parse = function (xml) {\n            // Create the return object\n            var obj = {};\n\n            var text = \"\";\n\n            if (xml.nodeType === 1) {\n                // do attributes\n                parseAttributes(obj, xml);\n            }\n\n            // do children\n            if (xml.hasChildNodes()) {\n                for (var i = 0; i < xml.childNodes.length; i++) {\n                    var item = xml.childNodes.item(i);\n\n                    switch (item.nodeType) {\n                        case 1:\n                            api.normalize(obj, item);\n                            break;\n\n                        case 3:\n                            text += item.nodeValue.trim();\n                            break;\n                    }\n                }\n            }\n\n            if (text) {\n                obj.text = text;\n            }\n\n            return obj;\n        };\n\n        /**\n         * Apply TMX Properties to the given object\n         * @ignore\n         */\n        api.applyTMXProperties = function (obj, data) {\n            var properties = data.properties;\n            if (typeof(properties) !== \"undefined\") {\n                for (var name in properties) {\n                    if (properties.hasOwnProperty(name)) {\n                        // set the value\n                        obj[name] = setTMXValue(name, properties[name]);\n                    }\n                }\n            }\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT 0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n\n    /**\n     * TMX Object Group <br>\n     * contains the object group definition as defined in Tiled. <br>\n     * note : object group definition is translated into the virtual `me.game.world` using `me.Container`.\n     * @see me.Container\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     */\n    me.TMXObjectGroup = me.Object.extend({\n        init : function (name, tmxObjGroup, orientation, tilesets, z) {\n            /**\n             * group name\n             * @public\n             * @type String\n             * @name name\n             * @memberOf me.TMXObjectGroup\n             */\n            this.name = name;\n\n            /**\n             * group width\n             * @public\n             * @type Number\n             * @name width\n             * @memberOf me.TMXObjectGroup\n             */\n            this.width = tmxObjGroup.width;\n\n            /**\n             * group height\n             * @public\n             * @type Number\n             * @name height\n             * @memberOf me.TMXObjectGroup\n             */\n            this.height = tmxObjGroup.height;\n\n            /**\n             * group z order\n             * @public\n             * @type Number\n             * @name z\n             * @memberOf me.TMXObjectGroup\n             */\n            this.z = z;\n\n            /**\n             * group objects list definition\n             * @see me.TMXObject\n             * @public\n             * @type Array\n             * @name name\n             * @memberOf me.TMXObjectGroup\n             */\n            this.objects = [];\n\n            var visible = typeof(tmxObjGroup.visible) !== \"undefined\" ? tmxObjGroup.visible : true;\n            this.opacity = (visible === true) ? (+tmxObjGroup.opacity || 1.0).clamp(0.0, 1.0) : 0;\n\n            // check if we have any user-defined properties\n            me.TMXUtils.applyTMXProperties(this, tmxObjGroup);\n\n            // parse all objects\n            var _objects = tmxObjGroup.objects;\n            if (_objects) {\n                var self = this;\n                _objects.forEach(function (tmxObj) {\n                    self.objects.push(new me.TMXObject(tmxObj, orientation, tilesets, z));\n                });\n            }\n        },\n\n        /**\n         * reset function\n         * @ignore\n         * @function\n         */\n\n        destroy : function () {\n            // clear all allocated objects\n            this.objects = null;\n        },\n\n        /**\n         * return the object count\n         * @ignore\n         * @function\n         */\n        getObjectCount : function () {\n            return this.objects.length;\n        },\n\n        /**\n         * returns the object at the specified index\n         * @ignore\n         * @function\n         */\n        getObjectByIndex : function (idx) {\n            return this.objects[idx];\n        }\n    });\n\n    /**\n     * a TMX Object defintion, as defined in Tiled. <br>\n     * note : object definition are translated into the virtual `me.game.world` using `me.Entity`.\n     * @see me.Entity\n     * @class\n     * @extends Object\n     * @memberOf me\n     * @constructor\n     */\n    me.TMXObject = me.Object.extend({\n        init :  function (tmxObj, orientation, tilesets, z) {\n\n            /**\n             * object point list (for Polygon and PolyLine)\n             * @public\n             * @type Vector2d[]\n             * @name points\n             * @memberOf me.TMXObject\n             */\n            this.points = undefined;\n\n            /**\n             * object name\n             * @public\n             * @type String\n             * @name name\n             * @memberOf me.TMXObject\n             */\n            this.name = tmxObj.name;\n\n            /**\n             * object x position\n             * @public\n             * @type Number\n             * @name x\n             * @memberOf me.TMXObject\n             */\n            this.x = +tmxObj.x;\n\n            /**\n             * object y position\n             * @public\n             * @type Number\n             * @name y\n             * @memberOf me.TMXObject\n             */\n            this.y = +tmxObj.y;\n\n            /**\n             * object z order\n             * @public\n             * @type Number\n             * @name z\n             * @memberOf me.TMXObject\n             */\n            this.z = +z;\n\n            /**\n             * object width\n             * @public\n             * @type Number\n             * @name width\n             * @memberOf me.TMXObject\n             */\n            this.width = +tmxObj.width || 0;\n\n            /**\n             * object height\n             * @public\n             * @type Number\n             * @name height\n             * @memberOf me.TMXObject\n             */\n            this.height = +tmxObj.height || 0;\n\n            /**\n             * object gid value\n             * when defined the object is a tiled object\n             * @public\n             * @type Number\n             * @name gid\n             * @memberOf me.TMXObject\n             */\n            this.gid = +tmxObj.gid || null;\n\n            /**\n             * object type\n             * @public\n             * @type String\n             * @name type\n             * @memberOf me.TMXObject\n             */\n            this.type = tmxObj.type;\n\n            /**\n             * The rotation of the object in radians clockwise (defaults to 0)\n             * @public\n             * @type Number\n             * @name rotation\n             * @memberOf me.TMXObject\n             */\n            this.rotation = Number.prototype.degToRad(+tmxObj.rotation || 0);\n\n            /**\n             * object unique identifier per level (Tiled 0.11.x+)\n             * @public\n             * @type Number\n             * @name id\n             * @memberOf me.TMXObject\n             */\n            this.id = +tmxObj.id || undefined;\n\n            /**\n             * object orientation (orthogonal or isometric)\n             * @public\n             * @type String\n             * @name orientation\n             * @memberOf me.TMXObject\n             */\n            this.orientation = orientation;\n\n            /**\n             * the collision shapes defined for this object\n             * @public\n             * @type Array\n             * @name shapes\n             * @memberOf me.TMXObject\n             */\n            this.shapes = undefined;\n\n            /**\n             * if true, the object is an Ellipse\n             * @public\n             * @type Boolean\n             * @name isEllipse\n             * @memberOf me.TMXObject\n             */\n            this.isEllipse = false;\n\n            /**\n             * if true, the object is a Polygon\n             * @public\n             * @type Boolean\n             * @name isPolygon\n             * @memberOf me.TMXObject\n             */\n            this.isPolygon = false;\n\n            /**\n             * if true, the object is a PolyLine\n             * @public\n             * @type Boolean\n             * @name isPolyLine\n             * @memberOf me.TMXObject\n             */\n            this.isPolyLine = false;\n\n            // check if the object has an associated gid\n            if (typeof this.gid === \"number\") {\n                this.setTile(tilesets);\n            }\n            else {\n                if (typeof(tmxObj.ellipse) !== \"undefined\") {\n                    this.isEllipse = true;\n                }\n                else {\n                    var points = tmxObj.polygon;\n                    if (typeof(points) !== \"undefined\") {\n                        this.isPolygon = true;\n                    }\n                    else {\n                        points = tmxObj.polyline;\n                        if (typeof(points) !== \"undefined\") {\n                            this.isPolyLine = true;\n                        }\n                    }\n                    if (typeof(points) !== \"undefined\") {\n                        this.points = [];\n                        var self = this;\n                        points.forEach(function (point) {\n                            self.points.push(new me.Vector2d(point.x, point.y));\n                        });\n                    }\n                }\n            }\n\n            // Adjust the Position to match Tiled\n            me.game.tmxRenderer.adjustPosition(this);\n\n            // set the object properties\n            me.TMXUtils.applyTMXProperties(this, tmxObj);\n\n            // define the object shapes if required\n            if (!this.shapes) {\n                this.shapes = this.parseTMXShapes();\n            }\n        },\n\n        /**\n         * set the object image (for Tiled Object)\n         * @ignore\n         * @function\n         */\n        setTile : function (tilesets) {\n            // get the corresponding tileset\n            var tileset = tilesets.getTilesetByGid(this.gid);\n\n            // set width and height equal to tile size\n            this.width = this.framewidth = tileset.tilewidth;\n            this.height = this.frameheight = tileset.tileheight;\n\n            // the object corresponding tile object\n            this.tile = new me.Tile(this.x, this.y, this.gid, tileset);\n        },\n\n        /**\n         * parses the TMX shape definition and returns a corresponding array of me.Shape object\n         * @name parseTMXShapes\n         * @memberOf me.TMXObject\n         * @private\n         * @function\n         * @return {me.Polygon[]|me.Line[]|me.Ellipse[]} an array of shape objects\n         */\n        parseTMXShapes : function () {\n            var i = 0;\n            var shapes = [];\n\n            // add an ellipse shape\n            if (this.isEllipse === true) {\n                // ellipse coordinates are the center position, so set default to the corresonding radius\n                shapes.push((new me.Ellipse(\n                    this.width / 2,\n                    this.height / 2,\n                    this.width,\n                    this.height\n                )).rotate(this.rotation));\n            }\n\n            // add a polygon\n            else if (this.isPolygon === true) {\n                shapes.push((new me.Polygon(0, 0, this.points)).rotate(this.rotation));\n            }\n\n            // add a polyline\n            else if (this.isPolyLine === true) {\n                var p = this.points;\n                var p1, p2;\n                var segments = p.length - 1;\n                for (i = 0; i < segments; i++) {\n                    // clone the value before, as [i + 1]\n                    // is reused later by the next segment\n                    p1 = p[i];\n                    p2 = p[i + 1].clone();\n                    if (this.rotation !== 0) {\n                        p1 = p1.rotate(this.rotation);\n                        p2 = p2.rotate(this.rotation);\n                    }\n                    shapes.push(new me.Line(0, 0, [ p1, p2 ]));\n                }\n            }\n\n            // it's a rectangle, returns a polygon object anyway\n            else {\n                shapes.push((new me.Polygon(\n                    0, 0, [\n                        new me.Vector2d(), new me.Vector2d(this.width, 0),\n                        new me.Vector2d(this.width, this.height), new me.Vector2d(0, this.height)\n                    ]\n                )).rotate(this.rotation));\n            }\n\n            // Apply isometric projection\n            if (this.orientation === \"isometric\") {\n                for (i = 0; i < shapes.length; i++) {\n                    shapes[i].rotate(Math.PI / 4).scale(Math.SQRT2, Math.SQRT1_2);\n                }\n            }\n\n            return shapes;\n        },\n        /**\n         * getObjectPropertyByName\n         * @ignore\n         * @function\n         */\n        getObjectPropertyByName : function (name) {\n            return this[name];\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT 0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n\n    // bitmask constants to check for flipped & rotated tiles\n    var TMX_FLIP_H          = 0x80000000,\n        TMX_FLIP_V          = 0x40000000,\n        TMX_FLIP_AD         = 0x20000000,\n        TMX_CLEAR_BIT_MASK  = ~(0x80000000 | 0x40000000 | 0x20000000);\n\n    /**\n     * a basic tile object\n     * @class\n     * @extends me.Rect\n     * @memberOf me\n     * @constructor\n     * @param {Number} x x index of the Tile in the map\n     * @param {Number} y y index of the Tile in the map\n     * @param {Number} gid tile gid\n     * @param {me.TMXTileset} tileset the corresponding tileset object\n\n     */\n    me.Tile = me.Rect.extend({\n        /** @ignore */\n        init : function (x, y, gid, tileset) {\n            /**\n             * tileset\n             * @public\n             * @type me.TMXTileset\n             * @name me.Tile#tileset\n             */\n            this.tileset = tileset;\n\n            /**\n             * the tile transformation matrix (if defined)\n             * @ignore\n             */\n            this.transform = null;\n            me.Rect.prototype.init.apply(this, [x * tileset.tilewidth, y * tileset.tileheight, tileset.tilewidth, tileset.tileheight]);\n\n            // Tile col / row pos\n            this.col = x;\n            this.row = y;\n\n            /**\n             * tileId\n             * @public\n             * @type int\n             * @name me.Tile#tileId\n             */\n            this.tileId = gid;\n            /**\n             * True if the tile is flipped horizontally<br>\n             * @public\n             * @type Boolean\n             * @name me.Tile#flipX\n             */\n            this.flippedX  = (this.tileId & TMX_FLIP_H) !== 0;\n            /**\n             * True if the tile is flipped vertically<br>\n             * @public\n             * @type Boolean\n             * @name me.Tile#flippedY\n             */\n            this.flippedY  = (this.tileId & TMX_FLIP_V) !== 0;\n            /**\n             * True if the tile is flipped anti-diagonally<br>\n             * @public\n             * @type Boolean\n             * @name me.Tile#flippedAD\n             */\n            this.flippedAD = (this.tileId & TMX_FLIP_AD) !== 0;\n\n            /**\n             * Global flag that indicates if the tile is flipped<br>\n             * @public\n             * @type Boolean\n             * @name me.Tile#flipped\n             */\n            this.flipped = this.flippedX || this.flippedY || this.flippedAD;\n            // create a transformation matrix if required\n            if (this.flipped === true) {\n                this.createTransform();\n            }\n\n            // clear out the flags and set the tileId\n            this.tileId &= TMX_CLEAR_BIT_MASK;\n        },\n\n        /**\n         * create a transformation matrix for this tile\n         * @ignore\n         */\n        createTransform : function () {\n            if (this.transform === null) {\n                this.transform = new me.Matrix2d();\n            }\n            // reset the matrix (in case it was already defined)\n            this.transform.identity();\n            var a = this.transform.val;\n            if (this.flippedAD) {\n                // Use shearing to swap the X/Y axis\n                this.transform.set(\n                    0, 1, 0,\n                    1, 0, 0,\n                    0, 0, 1\n                );\n                this.transform.translate(0, this.height - this.width);\n            }\n            if (this.flippedX) {\n                this.transform.translate(\n                    (this.flippedAD ? 0 : this.width),\n                    (this.flippedAD ? this.height : 0)\n                );\n                a[0] *= -1;\n                a[3] *= -1;\n            }\n            if (this.flippedY) {\n                this.transform.translate(\n                    (this.flippedAD ? this.width : 0),\n                    (this.flippedAD ? 0 : this.height)\n                );\n                a[1] *= -1;\n                a[4] *= -1;\n            }\n        },\n\n        /**\n         * return a renderable object for this Tile object\n         * @name me.Tile#getRenderable\n         * @public\n         * @function\n         * @param {Object} [settings] see {@link me.Sprite}\n         * @return {me.Renderable} either a me.Sprite object or a me.AnimationSheet (for animated tiles)\n         */\n        getRenderable : function (settings) {\n            var renderable;\n            var tileset = this.tileset;\n\n            if (tileset.animations.has(this.tileId)) {\n                var frames = [];\n                var frameId = [];\n                (tileset.animations.get(this.tileId).frames).forEach(function (frame) {\n                    frameId.push(frame.tileid);\n                    frames.push({\n                        name : \"\"+frame.tileid,\n                        delay : frame.duration\n                    });\n                });\n                renderable = tileset.texture.createAnimationFromName(frameId, settings);\n                renderable.addAnimation(this.tileId - tileset.firstgid, frames);\n                renderable.setCurrentAnimation(this.tileId - tileset.firstgid);\n\n            } else {\n                renderable = tileset.texture.createSpriteFromName(this.tileId - tileset.firstgid, settings);\n            }\n\n            // AD flag is never set for Tile Object, use the given rotation instead\n            if (typeof(settings) !== \"undefined\") {\n                var angle = settings.rotation || 0;\n                if (angle !== 0) {\n                    renderable._sourceAngle += angle;\n                    // translate accordingly\n                    switch (angle) {\n                        case Math.PI:\n                            renderable.translate(0, this.height * 2);\n                            break;\n                        case Math.PI / 2 :\n                            renderable.translate(this.width, this.height);\n                            break;\n                        case -(Math.PI / 2) :\n                            renderable.translate(-this.width, this.height);\n                            break;\n                        default :\n                            // this should not happen\n                            break;\n                    }\n                }\n            }\n\n            // any H/V flipping to apply?\n            if (this.flipped === true) {\n                renderable.flipX(this.flippedX);\n                renderable.flipY(this.flippedY);\n            }\n\n            return renderable;\n        },\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT 0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n\n    // bitmask constants to check for flipped & rotated tiles\n    var TMX_CLEAR_BIT_MASK = ~(0x80000000 | 0x40000000 | 0x20000000);\n\n    /**\n     * a TMX Tile Set Object\n     * @class\n     * @memberOf me\n     * @constructor\n     */\n    me.TMXTileset = me.Object.extend({\n        // constructor\n        init: function (tileset) {\n            var i = 0;\n            // first gid\n\n            // tile properties (collidable, etc..)\n            this.TileProperties = [];\n\n            this.firstgid = this.lastgid = +tileset.firstgid;\n            var src = tileset.source;\n            if (src && me.utils.getFileExtension(src) === \"tsx\") {\n                // load TSX\n                tileset = me.loader.getTMX(me.utils.getBasename(src));\n\n                if (!tileset) {\n                    throw new me.Error(src + \" TSX tileset not found\");\n                }\n            }\n\n            this.name = tileset.name;\n            this.tilewidth = +tileset.tilewidth;\n            this.tileheight = +tileset.tileheight;\n            this.spacing = +tileset.spacing || 0;\n            this.margin = +tileset.margin || 0;\n\n            // set tile offset properties (if any)\n            this.tileoffset = new me.Vector2d();\n\n            /**\n             * Tileset contains animated tiles\n             * @public\n             * @type Boolean\n             * @name me.TMXTileset#isAnimated\n             */\n            this.isAnimated = false;\n\n            /**\n             * Tileset animations\n             * @private\n             * @type Map\n             * @name me.TMXTileset#animations\n             */\n            this.animations = new Map();\n\n            var tiles = tileset.tiles;\n            for (i in tiles) {\n                if (tiles.hasOwnProperty(i) && (\"animation\" in tiles[i])) {\n                    this.isAnimated = true;\n                    this.animations.set(+i + this.firstgid, {\n                        dt      : 0,\n                        idx     : 0,\n                        frames  : tiles[i].animation,\n                        cur     : tiles[i].animation[0]\n                    });\n                }\n            }\n\n            var offset = tileset.tileoffset;\n            if (offset) {\n                this.tileoffset.x = +offset.x;\n                this.tileoffset.y = +offset.y;\n            }\n\n            // set tile properties, if any\n            var tileInfo = tileset.tileproperties;\n            if (tileInfo) {\n                for (i in tileInfo) {\n                    if (tileInfo.hasOwnProperty(i)) {\n                        this.setTileProperty(i + this.firstgid, tileInfo[i]);\n                    }\n                }\n            }\n\n            this.image = me.utils.getImage(tileset.image);\n            if (!this.image) {\n                throw new me.TMXTileset.Error(\"melonJS: '\" + tileset.image + \"' file for tileset '\" + this.name + \"' not found!\");\n            }\n\n            // create a texture atlas for the given tileset\n            this.texture = me.video.renderer.cache.get(this.image, {\n                framewidth : this.tilewidth,\n                frameheight : this.tileheight,\n                margin : this.margin,\n                spacing : this.spacing\n            });\n            this.atlas = this.texture.getAtlas();\n\n            // calculate the number of tiles per horizontal line\n            var hTileCount = +tileset.columns || ~~(this.image.width / (this.tilewidth + this.spacing));\n            var vTileCount = ~~(this.image.height / (this.tileheight + this.spacing));\n            // compute the last gid value in the tileset\n            this.lastgid = this.firstgid + (((hTileCount * vTileCount) - 1) || 0);\n            if (tileset.tilecount && this.lastgid - this.firstgid + 1 !== +tileset.tilecount) {\n                console.warn(\n                    \"Computed tilecount (\" + (this.lastgid - this.firstgid + 1) +\n                    \") does not match expected tilecount (\" + tileset.tilecount + \")\"\n                );\n            }\n        },\n\n        /**\n         * set the tile properties\n         * @ignore\n         * @function\n         */\n        setTileProperty : function (gid, prop) {\n            // set the given tile id\n            this.TileProperties[gid] = prop;\n        },\n\n        /**\n         * return true if the gid belongs to the tileset\n         * @name me.TMXTileset#contains\n         * @public\n         * @function\n         * @param {Number} gid\n         * @return {Boolean}\n         */\n        contains : function (gid) {\n            return gid >= this.firstgid && gid <= this.lastgid;\n        },\n\n        /**\n         * Get the view (local) tile ID from a GID, with animations applied\n         * @name me.TMXTileset#getViewTileId\n         * @public\n         * @function\n         * @param {Number} gid Global tile ID\n         * @return {Number} View tile ID\n         */\n        getViewTileId : function (gid) {\n            if (this.animations.has(gid)) {\n                // apply animations\n                gid = this.animations.get(gid).cur.tileid;\n            }\n            else {\n                // get the local tileset id\n                gid -= this.firstgid;\n            }\n\n            return gid;\n        },\n\n        /**\n         * return the properties of the specified tile\n         * @name me.TMXTileset#getTileProperties\n         * @public\n         * @function\n         * @param {Number} tileId\n         * @return {Object}\n         */\n        getTileProperties: function (tileId) {\n            return this.TileProperties[tileId];\n        },\n\n        // update tile animations\n        update : function (dt) {\n            var duration = 0,\n                result = false;\n\n            this.animations.forEach(function (anim) {\n                anim.dt += dt;\n                duration = anim.cur.duration;\n                while (anim.dt >= duration) {\n                    anim.dt -= duration;\n                    anim.idx = (anim.idx + 1) % anim.frames.length;\n                    anim.cur = anim.frames[anim.idx];\n                    duration = anim.cur.duration;\n                    result = true;\n                }\n            });\n\n            return result;\n        },\n\n        // draw the x,y tile\n        drawTile : function (renderer, dx, dy, tmxTile) {\n            // check if any transformation is required\n            if (tmxTile.flipped) {\n                renderer.save();\n                // apply the tile current transform\n                renderer.translate(dx, dy);\n                renderer.transform(tmxTile.transform);\n                // reset both values as managed through transform();\n                dx = dy = 0;\n            }\n\n            var offset = this.atlas[this.getViewTileId(tmxTile.tileId)].offset;\n\n            // draw the tile\n            renderer.drawImage(\n                this.image,\n                offset.x, offset.y,\n                this.tilewidth, this.tileheight,\n                dx, dy,\n                this.tilewidth, this.tileheight\n            );\n\n            if (tmxTile.flipped)  {\n                // restore the context to the previous state\n                renderer.restore();\n            }\n        }\n    });\n\n    /**\n     * an object containing all tileset\n     * @class\n     * @memberOf me\n     * @constructor\n     */\n    me.TMXTilesetGroup = me.Object.extend({\n        // constructor\n        init: function () {\n            this.tilesets = [];\n            this.length = 0;\n        },\n\n        //add a tileset to the tileset group\n        add : function (tileset) {\n            this.tilesets.push(tileset);\n            this.length++;\n        },\n\n        //return the tileset at the specified index\n        getTilesetByIndex : function (i) {\n            return this.tilesets[i];\n        },\n\n        /**\n         * return the tileset corresponding to the specified id <br>\n         * will throw an exception if no matching tileset is found\n         * @name me.TMXTilesetGroup#getTilesetByGid\n         * @public\n         * @function\n         * @param {Number} gid\n         * @return {me.TMXTileset} corresponding tileset\n         */\n        getTilesetByGid : function (gid) {\n            var invalidRange = -1;\n\n            // clear the gid of all flip/rotation flags\n            gid &= TMX_CLEAR_BIT_MASK;\n\n            // cycle through all tilesets\n            for (var i = 0, len = this.tilesets.length; i < len; i++) {\n                // return the corresponding tileset if matching\n                if (this.tilesets[i].contains(gid)) {\n                    return this.tilesets[i];\n                }\n                // typically indicates a layer with no asset loaded (collision?)\n                if (this.tilesets[i].firstgid === this.tilesets[i].lastgid &&\n                    gid >= this.tilesets[i].firstgid) {\n                    // store the id if the [firstgid .. lastgid] is invalid\n                    invalidRange = i;\n                }\n            }\n            // return the tileset with the invalid range\n            if (invalidRange !== -1) {\n                return this.tilesets[invalidRange];\n            }\n            else {\n                throw new me.Error(\"no matching tileset found for gid \" + gid);\n            }\n        }\n    });\n\n    /**\n     * Base class for TMXTileset exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.TMXTileset\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.TMXTileset.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.TMXTileset.Error\";\n        }\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT 0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n\n    // scope global var & constants\n    var offsetsStaggerX = [\n        {x:   0, y:   0},\n        {x: + 1, y: - 1},\n        {x: + 1, y:   0},\n        {x: + 2, y:   0},\n    ];\n    var offsetsStaggerY = [\n        {x:   0, y:   0},\n        {x: - 1, y: + 1},\n        {x:   0, y: + 1},\n        {x:   0, y: + 2},\n    ];\n\n    /**\n     * The map renderder base class\n     * @memberOf me\n     * @ignore\n     * @constructor\n     */\n    me.TMXRenderer = me.Object.extend({\n        // constructor\n        init: function (cols, rows, tilewidth, tileheight) {\n            this.cols = cols;\n            this.rows = rows;\n            this.tilewidth = tilewidth;\n            this.tileheight = tileheight;\n        },\n\n        /**\n         * return true if the renderer can render the specified layer\n         * @ignore\n         */\n        canRender : function (layer) {\n            return (\n                (this.cols === layer.cols) &&\n                (this.rows === layer.rows) &&\n                (this.tilewidth === layer.tilewidth) &&\n                (this.tileheight === layer.tileheight)\n            );\n        }\n    });\n\n\n    /**\n     * an Orthogonal Map Renderder\n     * Tiled QT 0.7.x format\n     * @memberOf me\n     * @extends me.TMXRenderer\n     * @ignore\n     * @constructor\n     */\n    me.TMXOrthogonalRenderer = me.TMXRenderer.extend({\n        /**\n         * return true if the renderer can render the specified layer\n         * @ignore\n         */\n        canRender : function (layer) {\n            return (\n                (layer.orientation === \"orthogonal\") &&\n                me.TMXRenderer.prototype.canRender.apply(this, [ layer ])\n            );\n        },\n\n        /**\n         * return the tile position corresponding to the specified pixel\n         * @ignore\n         */\n        pixelToTileCoords : function (x, y, v) {\n            var ret = v || new me.Vector2d();\n            return ret.set(\n                this.pixelToTileX(x),\n                this.pixelToTileY(y)\n            );\n        },\n\n        /**\n         * return the tile position corresponding for the given X coordinate\n         * @ignore\n         */\n        pixelToTileX : function (x) {\n            return x / this.tilewidth;\n        },\n\n        /**\n         * return the tile position corresponding for the given Y coordinates\n         * @ignore\n         */\n        pixelToTileY : function (y) {\n            return y / this.tileheight;\n        },\n\n        /**\n         * return the pixel position corresponding of the specified tile\n         * @ignore\n         */\n        tileToPixelCoords : function (x, y, v) {\n            var ret = v || new me.Vector2d();\n            return ret.set(\n                x * this.tilewidth,\n                y * this.tileheight\n            );\n        },\n\n        /**\n         * fix the position of Objects to match\n         * the way Tiled places them\n         * @ignore\n         */\n        adjustPosition: function (obj) {\n            // only adjust position if obj.gid is defined\n            if (typeof(obj.gid) === \"number\") {\n                // Tiled objects origin point is \"bottom-left\" in Tiled,\n                // \"top-left\" in melonJS)\n                obj.y -= obj.height;\n            }\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTile : function (renderer, x, y, tmxTile, tileset) {\n            // draw the tile\n            tileset.drawTile(\n                renderer,\n                tileset.tileoffset.x + x * this.tilewidth,\n                tileset.tileoffset.y + (y + 1) * this.tileheight - tileset.tileheight,\n                tmxTile\n            );\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTileLayer : function (renderer, layer, rect) {\n            // get top-left and bottom-right tile position\n            var start = this.pixelToTileCoords(\n                Math.max(rect.pos.x - (layer.maxTileSize.width - layer.tilewidth), 0),\n                Math.max(rect.pos.y - (layer.maxTileSize.height - layer.tileheight), 0),\n                me.pool.pull(\"me.Vector2d\")\n            ).floorSelf();\n\n            var end = this.pixelToTileCoords(\n                rect.pos.x + rect.width + this.tilewidth,\n                rect.pos.y + rect.height + this.tileheight,\n                me.pool.pull(\"me.Vector2d\")\n            ).ceilSelf();\n\n            //ensure we are in the valid tile range\n            end.x = end.x > this.cols ? this.cols : end.x;\n            end.y = end.y > this.rows ? this.rows : end.y;\n\n            // main drawing loop\n            for (var y = start.y; y < end.y; y++) {\n                for (var x = start.x; x < end.x; x++) {\n                    var tmxTile = layer.layerData[x][y];\n                    if (tmxTile) {\n                        this.drawTile(renderer, x, y, tmxTile, tmxTile.tileset);\n                    }\n                }\n            }\n\n            me.pool.push(start);\n            me.pool.push(end);\n        }\n    });\n\n\n    /**\n     * an Isometric Map Renderder\n     * Tiled QT 0.7.x format\n     * @memberOf me\n     * @extends me.TMXRenderer\n     * @ignore\n     * @constructor\n     */\n    me.TMXIsometricRenderer = me.TMXRenderer.extend({\n        // constructor\n        init: function (cols, rows, tilewidth, tileheight) {\n            me.TMXRenderer.prototype.init.apply(this, [\n                cols,\n                rows,\n                tilewidth,\n                tileheight\n            ]);\n\n            this.hTilewidth = tilewidth / 2;\n            this.hTileheight = tileheight / 2;\n            this.originX = this.rows * this.hTilewidth;\n        },\n\n        /**\n         * return true if the renderer can render the specified layer\n         * @ignore\n         */\n        canRender : function (layer) {\n            return (\n                (layer.orientation === \"isometric\") &&\n                me.TMXRenderer.prototype.canRender.apply(this, [ layer ])\n            );\n        },\n\n        /**\n         * return the tile position corresponding to the specified pixel\n         * @ignore\n         */\n        pixelToTileCoords : function (x, y, v) {\n            var ret = v || new me.Vector2d();\n            return ret.set(\n                this.pixelToTileX(x, y),\n                this.pixelToTileY(y, x)\n            );\n        },\n\n        /**\n         * return the tile position corresponding for the given X coordinate\n         * @ignore\n         */\n        pixelToTileX : function (x, y) {\n            return (y / this.tileheight) + ((x - this.originX) / this.tilewidth);\n        },\n\n        /**\n         * return the tile position corresponding for the given Y coordinates\n         * @ignore\n         */\n        pixelToTileY : function (y, x) {\n            return (y / this.tileheight) - ((x - this.originX) / this.tilewidth);\n        },\n\n        /**\n         * return the pixel position corresponding of the specified tile\n         * @ignore\n         */\n        tileToPixelCoords : function (x, y, v) {\n            var ret = v || new me.Vector2d();\n            return ret.set(\n                (x - y) * this.hTilewidth + this.originX,\n                (x + y) * this.hTileheight\n            );\n        },\n\n        /**\n         * fix the position of Objects to match\n         * the way Tiled places them\n         * @ignore\n         */\n        adjustPosition: function (obj) {\n            var tilex = obj.x / this.hTilewidth;\n            var tiley = obj.y / this.tileheight;\n            var isoPos = this.tileToPixelCoords(tilex, tiley);\n\n            obj.x = isoPos.x;\n            obj.y = isoPos.y;\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTile : function (renderer, x, y, tmxTile, tileset) {\n            // draw the tile\n            tileset.drawTile(\n                renderer,\n                ((this.cols - 1) * tileset.tilewidth + (x - y) * tileset.tilewidth >> 1),\n                (-tileset.tilewidth + (x + y) * tileset.tileheight >> 2),\n                tmxTile\n            );\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTileLayer : function (renderer, layer, rect) {\n            // cache a couple of useful references\n            var tileset = layer.tileset;\n            var offset  = tileset.tileoffset;\n\n            // get top-left and bottom-right tile position\n            var rowItr = this.pixelToTileCoords(\n                rect.pos.x - tileset.tilewidth,\n                rect.pos.y - tileset.tileheight,\n                me.pool.pull(\"me.Vector2d\")\n            ).floorSelf();\n            var TileEnd = this.pixelToTileCoords(\n                rect.pos.x + rect.width + tileset.tilewidth,\n                rect.pos.y + rect.height + tileset.tileheight,\n                me.pool.pull(\"me.Vector2d\")\n            ).ceilSelf();\n\n            var rectEnd = this.tileToPixelCoords(TileEnd.x, TileEnd.y, me.pool.pull(\"me.Vector2d\"));\n\n            // Determine the tile and pixel coordinates to start at\n            var startPos = this.tileToPixelCoords(rowItr.x, rowItr.y, me.pool.pull(\"me.Vector2d\"));\n            startPos.x -= this.hTilewidth;\n            startPos.y += this.tileheight;\n\n            /* Determine in which half of the tile the top-left corner of the area we\n             * need to draw is. If we're in the upper half, we need to start one row\n             * up due to those tiles being visible as well. How we go up one row\n             * depends on whether we're in the left or right half of the tile.\n             */\n            var inUpperHalf = startPos.y - rect.pos.y > this.hTileheight;\n            var inLeftHalf  = rect.pos.x - startPos.x < this.hTilewidth;\n\n            if (inUpperHalf) {\n                if (inLeftHalf) {\n                    rowItr.x--;\n                    startPos.x -= this.hTilewidth;\n                }\n                else {\n                    rowItr.y--;\n                    startPos.x += this.hTilewidth;\n                }\n                startPos.y -= this.hTileheight;\n            }\n\n            // Determine whether the current row is shifted half a tile to the right\n            var shifted = inUpperHalf ^ inLeftHalf;\n\n            // initialize the columItr vector\n            var columnItr = rowItr.clone();\n\n            // main drawing loop\n            for (var y = startPos.y * 2 ; y - this.tileheight * 2 < rectEnd.y * 2; y += this.tileheight) {\n                columnItr.setV(rowItr);\n                for (var x = startPos.x; x < rectEnd.x; x += this.tilewidth) {\n                    //check if it's valid tile, if so render\n                    if (\n                        (columnItr.x >= 0) &&\n                        (columnItr.y >= 0) &&\n                        (columnItr.x < this.cols) &&\n                        (columnItr.y < this.rows)\n                    ) {\n                        var tmxTile = layer.layerData[columnItr.x][columnItr.y];\n                        if (tmxTile) {\n                            tileset = tmxTile.tileset;\n                            // offset could be different per tileset\n                            offset  = tileset.tileoffset;\n                            // draw our tile\n                            tileset.drawTile(\n                                renderer,\n                                offset.x + x,\n                                offset.y + y / 2 - tileset.tileheight,\n                                tmxTile\n                            );\n                        }\n                    }\n                    // Advance to the next column\n                    columnItr.x++;\n                    columnItr.y--;\n                }\n\n                // Advance to the next row\n                if (!shifted) {\n                    rowItr.x++;\n                    startPos.x += this.hTilewidth;\n                    shifted = true;\n                }\n                else {\n                    rowItr.y++;\n                    startPos.x -= this.hTilewidth;\n                    shifted = false;\n                }\n            }\n\n            me.pool.push(rowItr);\n            me.pool.push(TileEnd);\n            me.pool.push(rectEnd);\n            me.pool.push(startPos);\n        }\n    });\n\n\n    /**\n     * an Hexagonal Map Renderder\n     * Tiled QT 0.7.x format\n     * @memberOf me\n     * @extends me.TMXRenderer\n     * @ignore\n     * @constructor\n     */\n    me.TMXHexagonalRenderer = me.TMXRenderer.extend({\n        // constructor\n        init: function (cols, rows, tilewidth, tileheight, hexsidelength, staggeraxis, staggerindex) {\n            me.TMXRenderer.prototype.init.apply(this, [\n                cols,\n                rows,\n                tilewidth,\n                tileheight\n            ]);\n\n            this.hexsidelength = hexsidelength;\n            this.staggeraxis = staggeraxis;\n            this.staggerindex = staggerindex;\n\n            this.sidelengthx = 0;\n            this.sidelengthy = 0;\n\n            if (staggeraxis === \"x\") {\n                this.sidelengthx = hexsidelength;\n            }\n            else {\n                this.sidelengthy = hexsidelength;\n            }\n\n            this.sideoffsetx = (this.tilewidth - this.sidelengthx) / 2;\n            this.sideoffsety = (this.tileheight - this.sidelengthy) / 2;\n\n            this.columnwidth = this.sideoffsetx + this.sidelengthx;\n            this.rowheight = this.sideoffsety + this.sidelengthy;\n\n            this.centers = [\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d(),\n                new me.Vector2d()\n            ];\n        },\n\n        /**\n         * return true if the renderer can render the specified layer\n         * @ignore\n         */\n        canRender : function (layer) {\n            return (\n                (layer.orientation === \"hexagonal\") &&\n                me.TMXRenderer.prototype.canRender.apply(this, [ layer ])\n            );\n        },\n\n        /**\n         * return the tile position corresponding to the specified pixel\n         * @ignore\n         */\n        pixelToTileCoords : function (x, y, v) {\n            var q, r;\n            var ret = v || new me.Vector2d();\n\n            if (this.staggeraxis === \"x\") { //flat top\n                x = x - ((this.staggerindex === \"odd\") ? this.sideoffsetx : this.tilewidth);\n            }\n            else { //pointy top\n                y = y - ((this.staggerindex === \"odd\") ? this.sideoffsety : this.tileheight);\n            }\n\n            // Start with the coordinates of a grid-aligned tile\n            var referencePoint = me.pool.pull(\"me.Vector2d\",\n                Math.floor(x / (this.columnwidth * 2)),\n                Math.floor((y / (this.rowheight * 2)))\n            );\n\n            // Relative x and y position on the base square of the grid-aligned tile\n            var rel = me.pool.pull(\"me.Vector2d\",\n                x - referencePoint.x * (this.columnwidth * 2),\n                y - referencePoint.y * (this.rowheight * 2)\n            );\n\n            // Adjust the reference point to the correct tile coordinates\n            if (this.staggeraxis === \"x\") {\n                referencePoint.x = referencePoint.x * 2;\n                if (this.staggerindex === \"even\") {\n                    ++referencePoint.x;\n                }\n            }\n            else {\n                referencePoint.y = referencePoint.y * 2;\n                if (this.staggerindex === \"even\") {\n                    ++referencePoint.y;\n                }\n            }\n\n            // Determine the nearest hexagon tile by the distance to the center\n            var left, top, centerX, centerY;\n            if (this.staggeraxis === \"x\") {\n                left = this.sidelengthx / 2;\n                centerX = left + this.columnwidth;\n                centerY = this.tileheight / 2;\n\n                this.centers[0].set(left, centerY);\n                this.centers[1].set(centerX, centerY - this.rowheight);\n                this.centers[2].set(centerX, centerY + this.rowheight);\n                this.centers[3].set(centerX + this.columnwidth, centerY);\n            }\n            else {\n                top = this.sidelengthy / 2;\n                centerX = this.tilewidth / 2;\n                centerY = top + this.rowheight;\n\n                this.centers[0].set(centerX, top);\n                this.centers[1].set(centerX - this.columnwidth, centerY);\n                this.centers[2].set(centerX + this.columnwidth, centerY);\n                this.centers[3].set(centerX, centerY + this.rowheight);\n            }\n\n            var nearest = 0;\n            var minDist = Number.MAX_VALUE;\n            var dc;\n            for (var i = 0; i < 4; ++i) {\n                dc = Math.pow(this.centers[i].x - rel.x, 2) + Math.pow(this.centers[i].y - rel.y, 2);\n                if (dc < minDist) {\n                    minDist = dc;\n                    nearest = i;\n                }\n            }\n\n            var offsets = (this.staggeraxis === \"x\") ? offsetsStaggerX : offsetsStaggerY;\n\n            q = referencePoint.x + offsets[nearest].x;\n            r = referencePoint.y + offsets[nearest].y;\n\n            me.pool.push(referencePoint);\n            me.pool.push(rel);\n\n            return ret.set(q, r);\n        },\n\n        /**\n         * return the tile position corresponding for the given X coordinate\n         * @ignore\n         */\n        pixelToTileX : function (x, y) {\n            var ret = me.pool.pull(\"me.Vector2d\");\n            this.pixelToTileCoords(x, y, ret);\n            me.pool.push(ret);\n            return ret.x;\n        },\n\n        /**\n         * return the tile position corresponding for the given Y coordinates\n         * @ignore\n         */\n        pixelToTileY : function (y, x) {\n            var ret = me.pool.pull(\"me.Vector2d\");\n            this.pixelToTileCoords(x, y, ret);\n            me.pool.push(ret);\n            return ret.y;\n        },\n\n        /**\n         * return the pixel position corresponding of the specified tile\n         * @ignore\n         */\n        tileToPixelCoords : function (q, r, v) {\n            var x, y;\n            var ret = v || new me.Vector2d();\n            if (this.staggeraxis === \"x\") {\n                //flat top\n                x = q * this.columnwidth;\n                if (this.staggerindex === \"odd\") {\n                    y = r * (this.tileheight + this.sidelengthy);\n                    y = y + (this.rowheight * (q & 1));\n                }\n                else {\n                    y = r * (this.tileheight + this.sidelengthy);\n                    y = y + (this.rowheight * (1 - (q & 1)));\n                }\n            }\n            else {\n                //pointy top\n                y = r * this.rowheight;\n                if (this.staggerindex === \"odd\") {\n                    x = q * (this.tilewidth + this.sidelengthx);\n                    x = x + (this.columnwidth * (r & 1));\n                }\n                else {\n                    x = q * (this.tilewidth + this.sidelengthx);\n                    x = x + (this.columnwidth * (1 - (r & 1)));\n                }\n            }\n            return ret.set(x, y);\n        },\n\n        /**\n         * fix the position of Objects to match\n         * the way Tiled places them\n         * @ignore\n         */\n        adjustPosition: function (obj) {\n            // only adjust position if obj.gid is defined\n            if (typeof(obj.gid) === \"number\") {\n                // Tiled objects origin point is \"bottom-left\" in Tiled,\n                // \"top-left\" in melonJS)\n                obj.y -= obj.height;\n            }\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTile : function (renderer, x, y, tmxTile, tileset) {\n            var point = this.tileToPixelCoords(x, y, me.pool.pull(\"me.Vector2d\"));\n\n            // draw the tile\n            tileset.drawTile(\n                renderer,\n                tileset.tileoffset.x + point.x,\n                tileset.tileoffset.y + point.y + (this.tileheight - tileset.tileheight),\n                tmxTile\n            );\n\n            me.pool.push(point);\n        },\n\n        /**\n         * draw the tile map\n         * @ignore\n         */\n        drawTileLayer : function (renderer, layer, rect) {\n            // get top-left and bottom-right tile position\n            var start = this.pixelToTileCoords(\n                rect.pos.x,\n                rect.pos.y\n           ).floorSelf();\n\n            var end = this.pixelToTileCoords(\n                rect.pos.x + rect.width + this.tilewidth,\n                rect.pos.y + rect.height + this.tileheight\n            ).ceilSelf();\n\n            //ensure we are in the valid tile range\n            start.x = start.x < 0 ? 0 : start.x;\n            start.y = start.y < 0 ? 0 : start.y;\n            end.x = end.x > this.cols ? this.cols : end.x;\n            end.y = end.y > this.rows ? this.rows : end.y;\n\n            // main drawing loop\n            for (var y = start.y; y < end.y; y++) {\n                for (var x = start.x; x < end.x; x++) {\n                    var tmxTile = layer.layerData[x][y];\n                    if (tmxTile) {\n                        this.drawTile(renderer, x, y, tmxTile, tmxTile.tileset);\n                    }\n                }\n            }\n        }\n    });\n\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n\n    /**\n     * a generic Color Layer Object\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {String} name Layer name\n     * @param {me.Color|String} color CSS color\n     * @param {Number} z z-index position\n     */\n    me.ColorLayer = me.Renderable.extend({\n        // constructor\n        init: function (name, color, z) {\n            // parent constructor\n            me.Renderable.prototype.init.apply(this, [0, 0, Infinity, Infinity]);\n\n            // apply given parameters\n            this.name = name;\n            this.pos.z = z;\n            this.floating = true;\n\n            // parse the given color\n            if (color instanceof me.Color) {\n                this.color = color.toRGBA();\n            } else {\n                // string (#RGB, #ARGB, #RRGGBB, #AARRGGBB)\n                var _col = me.pool.pull(\"me.Color\");\n                this.color = _col.parseCSS(color).toRGBA();\n                me.pool.push(_col);\n            }\n\n\n        },\n\n        /**\n         * draw the color layer\n         * @ignore\n         */\n        draw : function (renderer, rect) {\n            // set layer opacity\n            var _alpha = renderer.globalAlpha();\n            renderer.setGlobalAlpha(_alpha * this.getOpacity());\n\n            var vpos = me.game.viewport.pos;\n            renderer.setColor(this.color);\n            renderer.fillRect(\n                rect.left - vpos.x, rect.top - vpos.y,\n                rect.width, rect.height\n            );\n            // restore context alpha value\n            renderer.setGlobalAlpha(_alpha);\n            renderer.setColor(\"#fff\");\n        }\n    });\n\n    /**\n     * a generic Image Layer Object\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Object} settings ImageLayer properties\n     * @param {Image|String} settings.image Image reference. See {@link me.loader.getImage}\n     * @param {String} [settings.name=\"me.ImageLayer\"] Layer name\n     * @param {Number} [settings.z=0] z-index position\n     * @param {Number|me.Vector2d} [settings.ratio=1.0] Scrolling ratio to be applied\n     * @param {Number|me.Vector2d} [settings.anchorPoint=0.0] Image origin. See {@link me.ImageLayer#anchorPoint}\n     */\n    me.ImageLayer = me.Renderable.extend({\n        /**\n         * constructor\n         * @ignore\n         * @function\n         */\n        init: function (x, y, settings) {\n            // layer name\n            this.name = settings.name || \"me.ImageLayer\";\n\n            // get the corresponding image\n            this.image = me.utils.getImage(settings.image);\n\n            // XXX: Keep this check?\n            if (!this.image) {\n                throw new me.Error((\n                    (typeof(settings.image) === \"string\") ?\n                    \"'\" + settings.image + \"'\" :\n                    \"Image\"\n                ) + \" file for Image Layer '\" + this.name + \"' not found!\");\n            }\n\n            this.imagewidth = this.image.width;\n            this.imageheight = this.image.height;\n\n            // call the constructor\n            me.Renderable.prototype.init.apply(this, [x, y, Infinity, Infinity]);\n\n            // render in screen coordinates\n            this.floating = true;\n\n            // displaying order\n            this.pos.z = settings.z || 0;\n\n            this.offset = new me.Vector2d(x, y);\n\n            /**\n             * Define the image scrolling ratio<br>\n             * Scrolling speed is defined by multiplying the viewport delta position (e.g. followed entity) by the specified ratio.\n             * Setting this vector to &lt;0.0,0.0&gt; will disable automatic scrolling.<br>\n             * To specify a value through Tiled, use one of the following format : <br>\n             * - a number, to change the value for both axis <br>\n             * - a json expression like `json:{\"x\":0.5,\"y\":0.5}` if you wish to specify a different value for both x and y\n             * @public\n             * @type me.Vector2d\n             * @default <1.0,1.0>\n             * @name me.ImageLayer#ratio\n             */\n            this.ratio = new me.Vector2d(1.0, 1.0);\n\n            if (typeof(settings.ratio) !== \"undefined\") {\n                // little hack for backward compatiblity\n                if (typeof(settings.ratio) === \"number\") {\n                    this.ratio.set(settings.ratio, settings.ratio);\n                } else /* vector */ {\n                    this.ratio.setV(settings.ratio);\n                }\n            }\n\n            if (typeof(settings.anchorPoint) === \"undefined\") {\n                /**\n                 * Define how the image is anchored to the viewport bounds<br>\n                 * By default, its upper-left corner is anchored to the viewport bounds upper left corner.<br>\n                 * The anchorPoint is a unit vector where each component falls in range [0.0,1.0].<br>\n                 * Some common examples:<br>\n                 * * &lt;0.0,0.0&gt; : (Default) Anchor image to the upper-left corner of viewport bounds\n                 * * &lt;0.5,0.5&gt; : Center the image within viewport bounds\n                 * * &lt;1.0,1.0&gt; : Anchor image to the lower-right corner of viewport bounds\n                 * To specify a value through Tiled, use one of the following format : <br>\n                 * - a number, to change the value for both axis <br>\n                 * - a json expression like `json:{\"x\":0.5,\"y\":0.5}` if you wish to specify a different value for both x and y\n                 * @public\n                 * @type me.Vector2d\n                 * @default <0.0,0.0>\n                 * @name me.ImageLayer#anchorPoint\n                 */\n                this.anchorPoint.set(0, 0);\n            }\n            else {\n                if (typeof(settings.anchorPoint) === \"number\") {\n                    this.anchorPoint.set(settings.anchorPoint, settings.anchorPoint);\n                }\n                else /* vector */ {\n                    this.anchorPoint.setV(settings.anchorPoint);\n                }\n            }\n\n            /**\n             * Define if and how an Image Layer should be repeated.<br>\n             * By default, an Image Layer is repeated both vertically and horizontally.<br>\n             * Acceptable values : <br>\n             * * 'repeat' - The background image will be repeated both vertically and horizontally. (default) <br>\n             * * 'repeat-x' - The background image will be repeated only horizontally.<br>\n             * * 'repeat-y' - The background image will be repeated only vertically.<br>\n             * * 'no-repeat' - The background-image will not be repeated.<br>\n             * @public\n             * @type String\n             * @name me.ImageLayer#repeat\n             */\n            Object.defineProperty(this, \"repeat\", {\n                get : function get() {\n                    return this._repeat;\n                },\n                set : function set(val) {\n                    this._repeat = val;\n                    switch (this._repeat) {\n                        case \"no-repeat\" :\n                            this.repeatX = false;\n                            this.repeatY = false;\n                            break;\n                        case \"repeat-x\" :\n                            this.repeatX = true;\n                            this.repeatY = false;\n                            break;\n                        case \"repeat-y\" :\n                            this.repeatX = false;\n                            this.repeatY = true;\n                            break;\n                        default : // \"repeat\"\n                            this.repeatX = true;\n                            this.repeatY = true;\n                            break;\n                    }\n                    this.resize(me.game.viewport.width, me.game.viewport.height);\n                    this.createPattern();\n                }\n            });\n\n            this.repeat = settings.repeat || \"repeat\";\n        },\n\n        // called when the layer is added to the game world or a container\n        onActivateEvent : function () {\n            var _updateLayerFn = this.updateLayer.bind(this);\n            // register to the viewport change notification\n            this.vpChangeHdlr = me.event.subscribe(me.event.VIEWPORT_ONCHANGE, _updateLayerFn);\n            this.vpResizeHdlr = me.event.subscribe(me.event.VIEWPORT_ONRESIZE, this.resize.bind(this));\n            this.vpLoadedHdlr = me.event.subscribe(me.event.LEVEL_LOADED, function() {\n                // force a first refresh when the level is loaded\n                _updateLayerFn(me.game.viewport.pos);\n            });\n        },\n\n        /**\n         * resize the Image Layer to match the given size\n         * @name resize\n         * @memberOf me.ImageLayer\n         * @function\n         * @param {Number} w new width\n         * @param {Number} h new height\n        */\n        resize : function (w, h) {\n            me.Renderable.prototype.resize.apply(this, [\n                this.repeatX ? Infinity : w,\n                this.repeatY ? Infinity : h\n            ]);\n        },\n\n        /**\n         * createPattern function\n         * @ignore\n         * @function\n         */\n        createPattern : function () {\n            this._pattern = me.video.renderer.createPattern(this.image, this._repeat);\n        },\n\n        /**\n         * updateLayer function\n         * @ignore\n         * @function\n         */\n        updateLayer : function (vpos) {\n            var rx = this.ratio.x,\n                ry = this.ratio.y;\n\n            if (rx === ry === 0) {\n                // static image\n                return;\n            }\n\n            var viewport = me.game.viewport,\n                width = this.imagewidth,\n                height = this.imageheight,\n                bw = viewport.bounds.width,\n                bh = viewport.bounds.height,\n                ax = this.anchorPoint.x,\n                ay = this.anchorPoint.y,\n\n                /*\n                 * Automatic positioning\n                 *\n                 * See https://github.com/melonjs/melonJS/issues/741#issuecomment-138431532\n                 * for a thorough description of how this works.\n                 */\n                x = ~~(ax * (rx - 1) * (bw - viewport.width) + this.offset.x - rx * vpos.x),\n                y = ~~(ay * (ry - 1) * (bh - viewport.height) + this.offset.y - ry * vpos.y);\n\n\n            // Repeat horizontally; start drawing from left boundary\n            if (this.repeatX) {\n                this.pos.x = x % width;\n            }\n            else {\n                this.pos.x = x;\n            }\n\n            // Repeat vertically; start drawing from top boundary\n            if (this.repeatY) {\n                this.pos.y = y % height;\n            }\n            else {\n                this.pos.y = y;\n            }\n        },\n\n        /**\n         * draw the image layer\n         * @ignore\n         */\n        draw : function (renderer) {\n            var viewport = me.game.viewport,\n                width = this.imagewidth,\n                height = this.imageheight,\n                bw = viewport.bounds.width,\n                bh = viewport.bounds.height,\n                ax = this.anchorPoint.x,\n                ay = this.anchorPoint.y,\n                x = this.pos.x,\n                y = this.pos.y,\n                alpha = renderer.globalAlpha();\n\n            if (this.ratio.x === this.ratio.y === 0) {\n                x = ~~(x + ax * (bw - width));\n                y = ~~(y + ay * (bh - height));\n            }\n\n            renderer.setGlobalAlpha(alpha * this.getOpacity());\n            renderer.translate(x, y);\n            renderer.drawPattern(\n                this._pattern,\n                0,\n                0,\n                viewport.width * 2,\n                viewport.height * 2\n            );\n            renderer.translate(-x, -y);\n            renderer.setGlobalAlpha(alpha);\n        },\n\n        // called when the layer is removed from the game world or a container\n        onDeactivateEvent : function () {\n            // cancel all event subscriptions\n            me.event.unsubscribe(this.vpChangeHdlr);\n            me.event.unsubscribe(this.vpResizeHdlr);\n            me.event.unsubscribe(this.vpLoadedHdlr);\n        }\n\n    });\n\n    /**\n     * a TMX Tile Layer Object\n     * Tiled QT 0.7.x format\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {Number} tilewidth width of each tile in pixels\n     * @param {Number} tileheight height of each tile in pixels\n     * @param {String} orientation \"isometric\" or \"orthogonal\"\n     * @param {me.TMXTilesetGroup} tilesets tileset as defined in Tiled\n     * @param {Number} z z-index position\n     */\n    me.TMXLayer = me.Renderable.extend({\n\n        /** @ignore */\n        init: function (tilewidth, tileheight, orientation, tilesets, z) {\n            // super constructor\n            me.Renderable.prototype.init.apply(this, [0, 0, 0, 0]);\n\n            // tile width & height\n            this.tilewidth  = tilewidth;\n            this.tileheight = tileheight;\n\n            // layer orientation\n            this.orientation = orientation;\n\n            /**\n             * The Layer corresponding Tilesets\n             * @public\n             * @type me.TMXTilesetGroup\n             * @name me.TMXLayer#tilesets\n             */\n            this.tilesets = tilesets;\n\n            // the default tileset\n            // XXX: Is this even used?\n            this.tileset = (this.tilesets ? this.tilesets.getTilesetByIndex(0) : null);\n\n            // Biggest tile size to draw\n            this.maxTileSize = {\n                \"width\" : 0,\n                \"height\" : 0\n            };\n            for (var i = 0; i < this.tilesets.length; i++) {\n                var tileset = this.tilesets.getTilesetByIndex(i);\n                this.maxTileSize.width = Math.max(this.maxTileSize.width, tileset.tilewidth);\n                this.maxTileSize.height = Math.max(this.maxTileSize.height, tileset.tileheight);\n            }\n\n            /**\n             * All animated tilesets in this layer\n             * @private\n             * @type Array\n             * @name me.TMXLayer#animatedTilesets\n             */\n            this.animatedTilesets = [];\n\n            /**\n             * Layer contains tileset animations\n             * @public\n             * @type Boolean\n             * @name me.TMXLayer#isAnimated\n             */\n            this.isAnimated = false;\n\n            // for displaying order\n            this.pos.z = z;\n        },\n\n        /** @ignore */\n        initFromJSON: function (layer) {\n            // additional TMX flags\n            this.name = layer.name;\n            this.cols = +layer.width;\n            this.rows = +layer.height;\n\n            // hexagonal maps only\n            this.hexsidelength = +layer.hexsidelength || undefined;\n            this.staggeraxis = layer.staggeraxis;\n            this.staggerindex = layer.staggerindex;\n\n            // layer opacity\n            var visible = typeof(layer.visible) !== \"undefined\" ? layer.visible : true;\n            this.setOpacity(visible ? +layer.opacity : 0);\n\n            // layer \"real\" size\n            if (this.orientation === \"isometric\") {\n                this.width = (this.cols + this.rows) * (this.tilewidth / 2);\n                this.height = (this.cols + this.rows) * (this.tileheight / 2);\n            } else {\n                this.width = this.cols * this.tilewidth;\n                this.height = this.rows * this.tileheight;\n            }\n            // check if we have any user-defined properties\n            me.TMXUtils.applyTMXProperties(this, layer);\n\n            // check for the correct rendering method\n            if (typeof (this.preRender) === \"undefined\") {\n                this.preRender = me.sys.preRender;\n            }\n\n            // if pre-rendering method is use, create an offline canvas/renderer\n            if (this.preRender === true) {\n                this.canvasRenderer = new me.CanvasRenderer(\n                    me.video.createCanvas(this.width, this.height),\n                    this.width, this.height,\n                    {/* use default values*/}\n                );\n            }\n\n            //initialize the layer data array\n            this.initArray(this.cols, this.rows);\n        },\n\n        // called when the layer is added to the game world or a container\n        onActivateEvent : function () {\n\n            // (re)initialize the layer data array\n            /*if (this.layerData === undefined) {\n                this.initArray(this.cols, this.rows);\n            }*/\n\n            if (this.animatedTilesets === undefined) {\n                this.animatedTilesets = [];\n            }\n\n            if (this.tilesets) {\n                var tileset = this.tilesets.tilesets;\n                for (var i = 0; i < tileset.length; i++) {\n                    if (tileset[i].isAnimated) {\n                        tileset[i].isAnimated = false;\n                        this.animatedTilesets.push(tileset[i]);\n                    }\n                }\n            }\n\n            this.isAnimated = this.animatedTilesets.length > 0;\n\n            // Force pre-render off when tileset animation is used\n            if (this.isAnimated) {\n                this.preRender = false;\n            }\n\n            // Resize the bounding rect\n            this.resizeBounds(this.width, this.height);\n        },\n\n        // called when the layer is removed from the game world or a container\n        onDeactivateEvent : function () {\n            // clear all allocated objects\n            //this.layerData = undefined;\n            this.animatedTilesets = undefined;\n        },\n\n\n        /**\n         * set the layer renderer\n         * @ignore\n         */\n        setRenderer : function (renderer) {\n            this.renderer = renderer;\n        },\n\n        /**\n         * Create all required arrays\n         * @ignore\n         */\n        initArray : function (w, h) {\n            // initialize the array\n            this.layerData = [];\n            for (var x = 0; x < w; x++) {\n                this.layerData[x] = [];\n                for (var y = 0; y < h; y++) {\n                    this.layerData[x][y] = null;\n                }\n            }\n        },\n\n        /**\n         * Return the TileId of the Tile at the specified position\n         * @name getTileId\n         * @memberOf me.TMXLayer\n         * @public\n         * @function\n         * @param {Number} x X coordinate (in world/pixels coordinates)\n         * @param {Number} y Y coordinate (in world/pixels coordinates)\n         * @return {Number} TileId\n         */\n        getTileId : function (x, y) {\n            var tile = this.getTile(x, y);\n            return (tile ? tile.tileId : null);\n        },\n\n        /**\n         * Return the Tile object at the specified position\n         * @name getTile\n         * @memberOf me.TMXLayer\n         * @public\n         * @function\n         * @param {Number} x X coordinate (in world/pixels coordinates)\n         * @param {Number} y Y coordinate (in world/pixels coordinates)\n         * @return {me.Tile} Tile Object\n         */\n        getTile : function (x, y) {\n            return this.layerData[~~this.renderer.pixelToTileX(x, y)][~~this.renderer.pixelToTileY(y, x)];\n        },\n\n        /**\n         * Create a new Tile at the specified position\n         * @name setTile\n         * @memberOf me.TMXLayer\n         * @public\n         * @function\n         * @param {Number} x X coordinate (in map coordinates: row/column)\n         * @param {Number} y Y coordinate (in map coordinates: row/column)\n         * @param {Number} tileId tileId\n         * @return {me.Tile} the corresponding newly created tile object\n         */\n        setTile : function (x, y, tileId) {\n            if (!this.tileset.contains(tileId)) {\n                // look for the corresponding tileset\n                this.tileset = this.tilesets.getTilesetByGid(tileId);\n            }\n            var tile = this.layerData[x][y] = new me.Tile(x, y, tileId, this.tileset);\n            // draw the corresponding tile\n            if (this.preRender) {\n                this.renderer.drawTile(this.canvasRenderer, x, y, tile, tile.tileset);\n            }\n            return tile;\n        },\n\n        /**\n         * clear the tile at the specified position\n         * @name clearTile\n         * @memberOf me.TMXLayer\n         * @public\n         * @function\n         * @param {Number} x X coordinate (in map coordinates: row/column)\n         * @param {Number} y Y coordinate (in map coordinates: row/column)\n         */\n        clearTile : function (x, y) {\n            // clearing tile\n            this.layerData[x][y] = null;\n            // erase the corresponding area in the canvas\n            if (this.preRender) {\n                this.canvasRenderer.clearRect(x * this.tilewidth, y * this.tileheight, this.tilewidth, this.tileheight);\n            }\n        },\n\n        /**\n         * update animations in a tileset layer\n         * @ignore\n         */\n        update : function (dt) {\n            if (this.isAnimated) {\n                var result = false;\n                for (var i = 0; i < this.animatedTilesets.length; i++) {\n                    result = this.animatedTilesets[i].update(dt) || result;\n                }\n                return result;\n            }\n\n            return false;\n        },\n\n        /**\n         * draw a tileset layer\n         * @ignore\n         */\n        draw : function (renderer, rect) {\n            // set the layer alpha value\n            var alpha = renderer.globalAlpha();\n            renderer.setGlobalAlpha(alpha * this.getOpacity());\n\n            // use the offscreen canvas\n            if (this.preRender) {\n                var width = Math.min(rect.width, this.width);\n                var height = Math.min(rect.height, this.height);\n\n                // draw using the cached canvas\n                renderer.drawImage(\n                    this.canvasRenderer.getCanvas(),\n                    rect.pos.x, rect.pos.y, // sx,sy\n                    width, height,          // sw,sh\n                    rect.pos.x, rect.pos.y, // dx,dy\n                    width, height           // dw,dh\n                );\n            }\n            // dynamically render the layer\n            else {\n                // draw the layer\n                this.renderer.drawTileLayer(renderer, this, rect);\n            }\n\n            // restore context to initial state\n            renderer.setGlobalAlpha(alpha);\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n * Tile QT +0.7.x format\n * http://www.mapeditor.org/\n *\n */\n(function () {\n\n    // constant to identify the collision object layer\n    var COLLISION_GROUP = \"collision\";\n\n    /**\n     * set a compatible renderer object\n     * for the specified map\n     * @ignore\n     */\n    function getNewDefaultRenderer(obj) {\n        switch (obj.orientation) {\n            case \"orthogonal\":\n                return new me.TMXOrthogonalRenderer(\n                    obj.cols,\n                    obj.rows,\n                    obj.tilewidth,\n                    obj.tileheight\n                );\n\n            case \"isometric\":\n                return new me.TMXIsometricRenderer(\n                    obj.cols,\n                    obj.rows,\n                    obj.tilewidth,\n                    obj.tileheight\n                );\n\n            case \"hexagonal\":\n                return new me.TMXHexagonalRenderer(\n                    obj.cols,\n                    obj.rows,\n                    obj.tilewidth,\n                    obj.tileheight,\n                    obj.hexsidelength,\n                    obj.staggeraxis,\n                    obj.staggerindex\n                );\n\n            // if none found, throw an exception\n            default:\n                throw new me.Error(obj.orientation + \" type TMX Tile Map not supported!\");\n        }\n    }\n\n    /**\n     * Set tiled layer Data\n     * @ignore\n     */\n    function setLayerData(layer, data) {\n        var idx = 0;\n        // set everything\n        for (var y = 0 ; y < layer.rows; y++) {\n            for (var x = 0; x < layer.cols; x++) {\n                // get the value of the gid\n                var gid = data[idx++];\n                // fill the array\n                if (gid !== 0) {\n                    // add a new tile to the layer\n                    layer.setTile(x, y, gid);\n                }\n            }\n        }\n    }\n\n    /**\n     * read the layer Data\n     * @ignore\n     */\n    function readLayer(map, data, z) {\n        var layer = new me.TMXLayer(map.tilewidth, map.tileheight, map.orientation, map.tilesets, z);\n        // init the layer properly\n        layer.initFromJSON(data);\n        // set a renderer\n        if (!me.game.tmxRenderer.canRender(layer)) {\n            layer.setRenderer(getNewDefaultRenderer(layer));\n        }\n        else {\n            // use the default one\n            layer.setRenderer(me.game.tmxRenderer);\n        }\n        // parse the layer data\n        setLayerData(layer, \n            me.TMXUtils.decode(\n                data.data,\n                data.encoding,\n                data.compression\n            )\n        );\n        return layer;\n    }\n\n    /**\n     * read the Image Layer Data\n     * @ignore\n     */\n    function readImageLayer(map, data, z) {\n        // Normalize properties\n        me.TMXUtils.applyTMXProperties(data.properties, data);\n\n        // create the layer\n        var imageLayer = new me.ImageLayer(\n            +data.x || 0,\n            +data.y || 0,\n            Object.assign({\n                name: data.name,\n                image: data.image,\n                z: z\n            }, data.properties)\n        );\n\n        // set some additional flags\n        var visible = typeof(data.visible) !== \"undefined\" ? data.visible : true;\n        imageLayer.setOpacity(visible ? +data.opacity : 0);\n\n        return imageLayer;\n    }\n\n    /**\n     * read the tileset Data\n     * @ignore\n     */\n    function readTileset(data) {\n        return (new me.TMXTileset(data));\n    }\n\n    /**\n     * read the object group Data\n     * @ignore\n     */\n    function readObjectGroup(map, data, z) {\n        return (new me.TMXObjectGroup(data.name, data, map.orientation, map.tilesets, z));\n    }\n\n\n    /**\n     * a TMX Tile Map Object\n     * Tiled QT +0.7.x format\n     * @class\n     * @extends me.Object\n     * @memberOf me\n     * @constructor\n     * @param {String} levelId name of TMX map\n     * @param {Object} data TMX map in JSON format\n     * @example\n     * // create a new level object based on the TMX JSON object\n     * var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n     * // add the level to the game world container\n     * level.addTo(me.game.world, true);\n     */\n    me.TMXTileMap = me.Object.extend({\n        // constructor\n        init: function (levelId, data) {\n\n            /**\n             * name of the tilemap\n             * @public\n             * @type String\n             * @name me.TMXTileMap#name\n             */\n            this.name = levelId;\n\n            /**\n             * the level data (JSON)\n             * @ignore\n             */\n            this.data = data;\n\n            /**\n             * width of the tilemap in tiles\n             * @public\n             * @type Int\n             * @name me.TMXTileMap#cols\n             */\n            this.cols = +data.width;\n            /**\n             * height of the tilemap in tiles\n             * @public\n             * @type Int\n             * @name me.TMXTileMap#rows\n             */\n            this.rows = +data.height;\n\n            /**\n             * Tile width\n             * @public\n             * @type Int\n             * @name me.TMXTileMap#tilewidth\n             */\n            this.tilewidth = +data.tilewidth;\n\n            /**\n             * Tile height\n             * @public\n             * @type Int\n             * @name me.TMXTileMap#tileheight\n             */\n            this.tileheight = +data.tileheight;\n\n            // tilesets for this map\n            this.tilesets = null;\n            // layers\n            this.layers = [];\n            // group objects\n            this.objectGroups = [];\n\n            // tilemap version\n            this.version = data.version;\n\n            // map type (orthogonal or isometric)\n            this.orientation = data.orientation;\n            if (this.orientation === \"isometric\") {\n                this.width = (this.cols + this.rows) * (this.tilewidth / 2);\n                this.height = (this.cols + this.rows) * (this.tileheight / 2);\n            } else {\n                this.width = this.cols * this.tilewidth;\n                this.height = this.rows * this.tileheight;\n            }\n\n\n            // objects minimum z order\n            this.z = 0;\n\n            // object id\n            this.nextobjectid = +data.nextobjectid || undefined;\n\n\n            // hex/iso properties\n            this.hexsidelength = +data.hexsidelength || undefined;\n            this.staggeraxis = data.staggeraxis;\n            this.staggerindex = data.staggerindex;\n\n            // background color\n            this.backgroundcolor = data.backgroundcolor;\n\n            // set additional map properties (if any)\n            me.TMXUtils.applyTMXProperties(this, data);\n\n            // initialize a default TMX renderer\n            if ((me.game.tmxRenderer === null) || !me.game.tmxRenderer.canRender(this)) {\n                me.game.tmxRenderer = getNewDefaultRenderer(this);\n            }\n\n            // internal flag\n            this.initialized = false;\n\n        },\n\n        /**\n         * parse the map\n         * @ignore\n         */\n        readMapObjects: function (data) {\n\n            if (this.initialized === true) {\n                return;\n            }\n\n            // to automatically increment z index\n            var zOrder = this.z;\n            var self = this;\n\n            // Tileset information\n            if (!this.tilesets) {\n                // make sure we have a TilesetGroup Object\n                this.tilesets = new me.TMXTilesetGroup();\n            }\n\n            // parse all tileset objects\n            var tilesets = data.tilesets;\n            tilesets.forEach(function (tileset) {\n                // add the new tileset\n                self.tilesets.add(readTileset(tileset));\n            });\n\n            // check if a user-defined background color is defined\n            if (this.backgroundcolor) {\n                this.layers.push(\n                    new me.ColorLayer(\n                        \"background_color\",\n                        this.backgroundcolor,\n                        zOrder++\n                    )\n                );\n            }\n\n            // check if a background image is defined\n            if (this.background_image) {\n                // add a new image layer\n                this.layers.push(new me.ImageLayer(\n                    0, 0, {\n                        name : \"background_image\",\n                        image : this.background_image,\n                        z : zOrder++\n                    }\n                ));\n            }\n\n            data.layers.forEach(function (layer) {\n                switch (layer.type) {\n                    case \"imagelayer\":\n                        self.layers.push(readImageLayer(self, layer, zOrder++));\n                        break;\n\n                    case \"tilelayer\":\n                        self.layers.push(readLayer(self, layer, zOrder++));\n                        break;\n\n                    // get the object groups information\n                    case \"objectgroup\":\n                        self.objectGroups.push(readObjectGroup(self, layer, zOrder++));\n                        break;\n\n                    default:\n                        break;\n                }\n            });\n            this.initialized = true;\n        },\n\n\n        /**\n         * add all the map layers and objects to the given container\n         * @name me.TMXTileMap#addTo\n         * @public\n         * @function\n         * @param {me.Container} target container\n         * @param {boolean} flatten if true, flatten all objects into the given container\n         * @example\n         * // create a new level object based on the TMX JSON object\n         * var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n         * // add the level to the game world container\n         * level.addTo(me.game.world, true);\n         */\n        addTo : function (container, flatten) {\n            var _sort = container.autoSort;\n            var _depth = container.autoDepth;\n\n            // disable auto-sort and auto-depth\n            container.autoSort = false;\n            container.autoDepth = false;\n\n            // add all layers instances\n            this.getLayers().forEach(function (layer) {\n                container.addChild(layer);\n            });\n\n            // add all Object instances\n            this.getObjects(flatten).forEach(function (object) {\n                container.addChild(object);\n            });\n\n            //  set back auto-sort and auto-depth\n            container.autoSort = _sort;\n            container.autoDepth = _depth;\n\n            // force a sort\n            container.sort(true);\n        },\n\n        /**\n         * return an Array of instantiated objects, based on the map object definition\n         * @name me.TMXTileMap#getObjects\n         * @public\n         * @function\n         * @param {boolean} flatten if true, flatten all objects into the returned array, <br>\n         * ignoring all defined groups (no sub containers will be created)\n         * @return {me.Renderable[]} Array of Objects\n         */\n        getObjects : function (flatten) {\n            var objects = [];\n            var isCollisionGroup = false;\n            var targetContainer;\n\n            // parse the map for objects\n            this.readMapObjects(this.data);\n\n            for (var g = 0; g < this.objectGroups.length; g++) {\n                var group = this.objectGroups[g];\n\n                // check if this is the collision shape group\n                isCollisionGroup = group.name.toLowerCase().includes(COLLISION_GROUP);\n\n                if (flatten === false) {\n                    // create a new container\n                    targetContainer = new me.Container(0, 0, this.width, this.height);\n\n                    // set additional properties\n                    targetContainer.name = group.name;\n                    targetContainer.pos.z = group.z;\n                    targetContainer.setOpacity(group.opacity);\n\n                    // disable auto-sort and auto-depth\n                    targetContainer.autoSort = false;\n                    targetContainer.autoDepth = false;\n                }\n\n                // iterate through the group and add all object into their\n                // corresponding target Container\n                for (var o = 0; o < group.objects.length; o++) {\n                    // TMX object settings\n                    var settings = group.objects[o];\n\n                    var obj = me.pool.pull(\n                        settings.name || \"me.Entity\",\n                        settings.x, settings.y,\n                        settings\n                    );\n                    // skip if the pull function does not return a corresponding object\n                    if (typeof obj !== \"object\") {\n                        continue;\n                    }\n\n                    // check if a me.Tile object is embedded\n                    if (typeof (settings.tile) === \"object\" && !obj.renderable) {\n                        obj.renderable = settings.tile.getRenderable(settings);\n                    }\n\n                    if (isCollisionGroup && !settings.name) {\n                        // configure the body accordingly\n                        obj.body.collisionType = me.collision.types.WORLD_SHAPE;\n                    }\n\n                    // set the obj z order correspondingly to its parent container/group\n                    obj.pos.z = group.z;\n\n                    //apply group opacity value to the child objects if group are merged\n                    if (flatten === true) {\n                        if (obj.isRenderable === true) {\n                            obj.setOpacity(obj.getOpacity() * group.opacity);\n                            // and to child renderables if any\n                            if (obj.renderable instanceof me.Renderable) {\n                                obj.renderable.setOpacity(obj.renderable.getOpacity() * group.opacity);\n                            }\n                        }\n                        // directly add the obj into the objects array\n                        objects.push(obj);\n                    } else /* false*/ {\n                        // add it to the new container\n                        targetContainer.addChild(obj);\n                    }\n\n                }\n\n                // if we created a new container\n                if ((flatten === false) && (targetContainer.children.length > 0)) {\n\n                    // re-enable auto-sort and auto-depth\n                    targetContainer.autoSort = true;\n                    targetContainer.autoDepth = true;\n\n                    // add our container to the world\n                    objects.push(targetContainer);\n                }\n            }\n            return objects;\n        },\n\n        /**\n         * return all the existing layers\n         * @name me.TMXTileMap#getLayers\n         * @public\n         * @function\n         * @return {me.TMXLayer[]} Array of Layers\n         */\n        getLayers : function () {\n            // parse the map for objects\n            this.readMapObjects(this.data);\n            return this.layers;\n        },\n\n        /**\n         * destroy function, clean all allocated objects\n         * @name me.TMXTileMap#destroy\n         * @public\n         * @function\n         */\n        destroy : function () {\n            this.tilesets = undefined;\n            this.layers = [];\n            this.objectGroups = [];\n            this.initialized = false;\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * a level manager object <br>\n     * once ressources loaded, the level director contains all references of defined levels<br>\n     * There is no constructor function for me.levelDirector, this is a static object\n     * @namespace me.levelDirector\n     * @memberOf me\n     */\n    me.levelDirector = (function () {\n        // hold public stuff in our singletong\n        var api = {};\n\n        /*\n         * PRIVATE STUFF\n         */\n\n        // our levels\n        var levels = {};\n        // level index table\n        var levelIdx = [];\n        // current level index\n        var currentLevelIdx = 0;\n        // onresize handler\n        var onresize_handler = null;\n\n        function safeLoadLevel(levelId, options, restart) {\n            // clean the destination container\n            options.container.destroy();\n\n            // reset the renderer\n            me.video.renderer.reset();\n\n            // clean the current (previous) level\n            if (levels[api.getCurrentLevelId()]) {\n                levels[api.getCurrentLevelId()].destroy();\n            }\n\n            // update current level index\n            currentLevelIdx = levelIdx.indexOf(levelId);\n\n            // add the specified level to the game world\n            loadTMXLevel(levelId, options.container, options.flatten, options.setViewportBounds);\n\n            // publish the corresponding message\n            me.event.publish(me.event.LEVEL_LOADED, [ levelId ]);\n\n            // fire the callback\n            options.onLoaded(levelId);\n\n            if (restart) {\n                // resume the game loop if it was previously running\n                me.state.restart();\n            }\n        }\n\n        /**\n         * Load a TMX level\n         * @name loadTMXLevel\n         * @memberOf me.game\n         * @private\n         * @param {String} level level id\n         * @param {me.Container} target container\n         * @param {boolean} flatten if true, flatten all objects into the given container\n         * @param {boolean} setViewportBounds if true, set the viewport bounds to the map size\n         * @ignore\n         * @function\n         */\n        function loadTMXLevel(levelId, container, flatten, setViewportBounds) {\n            var level = levels[levelId];\n\n            // disable auto-sort for the given container\n            var autoSort = container.autoSort;\n            container.autoSort = false;\n\n            if (setViewportBounds) {\n                // update the viewport bounds\n                me.game.viewport.setBounds(\n                    0, 0,\n                    Math.max(level.width, me.game.viewport.width),\n                    Math.max(level.height, me.game.viewport.height)\n                );\n            }\n\n            // reset the GUID generator\n            // and pass the level id as parameter\n            me.utils.resetGUID(levelId, level.nextobjectid);\n\n            // add all level elements to the target container\n            level.addTo(container, flatten);\n\n            // sort everything (recursively)\n            container.sort(true);\n            container.autoSort = autoSort;\n\n            container.resize(level.width, level.height);\n\n            function resize_container() {\n                // center the map if smaller than the current viewport\n                container.pos.set(\n                    Math.max(0, ~~((me.game.viewport.width - level.width) / 2)),\n                    Math.max(0, ~~((me.game.viewport.height - level.height) / 2)),\n                    0\n                );\n\n                // translate the display if required\n                container.transform.identity();\n                container.transform.translateV(container.pos);\n            }\n\n            if (setViewportBounds) {\n                resize_container();\n\n                // Replace the resize handler\n                if (onresize_handler) {\n                    me.event.unsubscribe(onresize_handler);\n                }\n                onresize_handler = me.event.subscribe(me.event.VIEWPORT_ONRESIZE, resize_container);\n            }\n        }\n\n        /*\n         * PUBLIC STUFF\n         */\n\n        /**\n         * reset the level director\n         * @ignore\n         */\n        api.reset = function () {};\n\n        /**\n         * add a level\n         * @ignore\n         */\n        api.addLevel = function () {\n            throw new me.Error(\"no level loader defined\");\n        };\n\n        /**\n         * add a TMX level\n         * @ignore\n         */\n        api.addTMXLevel = function (levelId, callback) {\n            // just load the level with the XML stuff\n            if (levels[levelId] == null) {\n                //console.log(\"loading \"+ levelId);\n                levels[levelId] = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n                // level index\n                levelIdx.push(levelId);\n            }\n            else  {\n                //console.log(\"level %s already loaded\", levelId);\n                return false;\n            }\n\n            // call the callback if defined\n            if (callback) {\n                callback();\n            }\n            // true if level loaded\n            return true;\n        };\n\n        /**\n         * load a level into the game manager<br>\n         * (will also create all level defined entities, etc..)\n         * @name loadLevel\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @param {String} level level id\n         * @param {Object} [options] additional optional parameters\n         * @param {me.Container} [options.container=me.game.world] container in which to load the specified level\n         * @param {function} [options.onLoaded=me.game.onLevelLoaded] callback for when the level is fully loaded\n         * @param {boolean} [options.flatten=me.game.mergeGroup] if true, flatten all objects into the given container\n         * @param {boolean} [options.setViewportBounds=true] if true, set the viewport bounds to the map size\n         * @example\n         * // the game defined ressources\n         * // to be preloaded by the loader\n         * // TMX maps\n         * var resources = [\n         *     {name: \"a4_level1\",   type: \"tmx\",   src: \"data/level/a4_level1.tmx\"},\n         *     {name: \"a4_level2\",   type: \"tmx\",   src: \"data/level/a4_level2.tmx\"},\n         *     {name: \"a4_level3\",   type: \"tmx\",   src: \"data/level/a4_level3.tmx\"},\n         *     // ...\n         * ];\n         *\n         * // ...\n         *\n         * // load a level\n         * me.levelDirector.loadLevel(\"a4_level1\");\n         */\n        api.loadLevel = function (levelId, options) {\n            options = Object.assign({\n                \"container\"         : me.game.world,\n                \"onLoaded\"          : me.game.onLevelLoaded,\n                \"flatten\"           : me.game.mergeGroup,\n                \"setViewportBounds\" : true\n            }, options || {});\n\n            // throw an exception if not existing\n            if (typeof(levels[levelId]) === \"undefined\") {\n                throw new me.Error(\"level \" + levelId + \" not found\");\n            }\n\n            if (levels[levelId] instanceof me.TMXTileMap) {\n\n                // check the status of the state mngr\n                var wasRunning = me.state.isRunning();\n\n                if (wasRunning) {\n                    // stop the game loop to avoid\n                    // some silly side effects\n                    me.state.stop();\n\n                    safeLoadLevel.defer(this, levelId, options, true);\n                }\n                else {\n                    safeLoadLevel(levelId, options);\n                }\n            }\n            else {\n                throw new me.Error(\"no level loader defined\");\n            }\n            return true;\n        };\n\n        /**\n         * return the current level id<br>\n         * @name getCurrentLevelId\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @return {String}\n         */\n        api.getCurrentLevelId = function () {\n            return levelIdx[currentLevelIdx];\n        };\n\n        /**\n         * return the current level definition.\n         * for a reference to the live instantiated level,\n         * rather use the container in which it was loaded (e.g. me.game.world)\n         * @name getCurrentLevel\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @return {me.TMXTileMap}\n         */\n        api.getCurrentLevel = function () {\n            return levels[api.getCurrentLevelId()];\n        };\n\n        /**\n         * reload the current level<br>\n         * @name reloadLevel\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @param {Object} [options] additional optional parameters\n         * @param {me.Container} [options.container=me.game.world] container in which to load the specified level\n         * @param {function} [options.onLoaded=me.game.onLevelLoaded] callback for when the level is fully loaded\n         * @param {boolean} [options.flatten=me.game.mergeGroup] if true, flatten all objects into the given container\n         */\n        api.reloadLevel = function (options) {\n            // reset the level to initial state\n            //levels[currentLevel].reset();\n            return api.loadLevel(api.getCurrentLevelId(), options);\n        };\n\n        /**\n         * load the next level<br>\n         * @name nextLevel\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @param {Object} [options] additional optional parameters\n         * @param {me.Container} [options.container=me.game.world] container in which to load the specified level\n         * @param {function} [options.onLoaded=me.game.onLevelLoaded] callback for when the level is fully loaded\n         * @param {boolean} [options.flatten=me.game.mergeGroup] if true, flatten all objects into the given container\n         */\n        api.nextLevel = function (options) {\n            //go to the next level\n            if (currentLevelIdx + 1 < levelIdx.length) {\n                return api.loadLevel(levelIdx[currentLevelIdx + 1], options);\n            }\n            else {\n                return false;\n            }\n        };\n\n        /**\n         * load the previous level<br>\n         * @name previousLevel\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         * @param {Object} [options] additional optional parameters\n         * @param {me.Container} [options.container=me.game.world] container in which to load the specified level\n         * @param {function} [options.onLoaded=me.game.onLevelLoaded] callback for when the level is fully loaded\n         * @param {boolean} [options.flatten=me.game.mergeGroup] if true, flatten all objects into the given container\n         */\n        api.previousLevel = function (options) {\n            // go to previous level\n            if (currentLevelIdx - 1 >= 0) {\n                return api.loadLevel(levelIdx[currentLevelIdx - 1], options);\n            }\n            else {\n                return false;\n            }\n        };\n\n        /**\n         * return the amount of level preloaded<br>\n         * @name levelCount\n         * @memberOf me.levelDirector\n         * @public\n         * @function\n         */\n        api.levelCount = function () {\n            return levelIdx.length;\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/**\n * @preserve Tween JS\n * https://github.com/sole/Tween.js\n */\n\n/* jshint -W011 */\n/* jshint -W013 */\n/* jshint -W089 */\n/* jshint -W093 */\n/* jshint -W098 */\n/* jshint -W108 */\n/* jshint -W116 */\n\n(function() {\n\n    /**\n     * Javascript Tweening Engine<p>\n     * Super simple, fast and easy to use tweening engine which incorporates optimised Robert Penner's equation<p>\n     * <a href=\"https://github.com/sole/Tween.js\">https://github.com/sole/Tween.js</a><p>\n     * author sole / http://soledadpenades.com<br>\n     * author mr.doob / http://mrdoob.com<br>\n     * author Robert Eisele / http://www.xarg.org<br>\n     * author Philippe / http://philippe.elsass.me<br>\n     * author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html<br>\n     * author Paul Lewis / http://www.aerotwist.com/<br>\n     * author lechecacharro<br>\n     * author Josh Faul / http://jocafa.com/\n     * @class\n     * @memberOf me\n     * @constructor\n     * @param {Object} object object on which to apply the tween\n     * @example\n     * // add a tween to change the object pos.y variable to 200 in 3 seconds\n     * tween = new me.Tween(myObject.pos).to({y: 200}, 3000).onComplete(myFunc);\n     * tween.easing(me.Tween.Easing.Bounce.Out);\n     * tween.start();\n     */\n    me.Tween = function ( object ) {\n\n        var _object = null;\n        var _valuesStart = null;\n        var _valuesEnd = null;\n        var _valuesStartRepeat = null;\n        var _duration = null;\n        var _repeat = null;\n        var _yoyo = null;\n        var _reversed = null;\n        var _delayTime = null;\n        var _startTime = null;\n        var _easingFunction = null;\n        var _interpolationFunction = null;\n        var _chainedTweens = null;\n        var _onStartCallback = null;\n        var _onStartCallbackFired = null;\n        var _onUpdateCallback = null;\n        var _onCompleteCallback = null;\n        var _tweenTimeTracker = null;\n\n\n        this._resumeCallback = function (elapsed) {\n            if (_startTime) {\n                _startTime += elapsed;\n            }\n        };\n\n        this.setProperties = function (object) {\n            _object = object;\n            _valuesStart = {};\n            _valuesEnd = {};\n            _valuesStartRepeat = {};\n            _duration = 1000;\n            _repeat = 0;\n            _yoyo = false;\n            _reversed = false;\n            _delayTime = 0;\n            _startTime = null;\n            _easingFunction = me.Tween.Easing.Linear.None;\n            _interpolationFunction = me.Tween.Interpolation.Linear;\n            _chainedTweens = [];\n            _onStartCallback = null;\n            _onStartCallbackFired = false;\n            _onUpdateCallback = null;\n            _onCompleteCallback = null;\n            _tweenTimeTracker = me.timer.lastUpdate;\n\n\n            // Set all starting values present on the target object\n            for ( var field in object ) {\n                if(typeof object !== 'object') {\n                    _valuesStart[ field ] = parseFloat(object[field], 10);\n                }\n            }\n\n            /**\n             * Calculate delta to resume the tween\n             * @ignore\n             */\n            me.event.subscribe(me.event.STATE_RESUME, this._resumeCallback);\n        };\n\n        this.setProperties(object);\n\n        /**\n         * reset the tween object to default value\n         * @ignore\n         */\n        this.onResetEvent = function ( object ) {\n            this.setProperties(object);\n        };\n\n        /**\n         * Unsubscribe when tween is removed\n         * @ignore\n         */\n        this.onDeactivateEvent = function () {\n            me.event.unsubscribe(me.event.STATE_RESUME, this._resumeCallback);\n        };\n\n        /**\n         * object properties to be updated and duration\n         * @name me.Tween#to\n         * @public\n         * @function\n         * @param {Object} properties hash of properties\n         * @param {Number} [duration=1000] tween duration\n         */\n        this.to = function ( properties, duration ) {\n\n            if ( duration !== undefined ) {\n\n                _duration = duration;\n\n            }\n\n            _valuesEnd = properties;\n\n            return this;\n\n        };\n\n        /**\n         * start the tween\n         * @name me.Tween#start\n         * @public\n         * @function\n         */\n        this.start = function ( time ) {\n\n            _onStartCallbackFired = false;\n\n            // add the tween to the object pool on start\n            me.game.world.addChild(this);\n\n            _startTime = (typeof(time) === 'undefined' ? me.timer.getTime() : time) + _delayTime;\n\n            for ( var property in _valuesEnd ) {\n\n                // check if an Array was provided as property value\n                if ( _valuesEnd[ property ] instanceof Array ) {\n\n                    if ( _valuesEnd[ property ].length === 0 ) {\n\n                        continue;\n\n                    }\n\n                    // create a local copy of the Array with the start value at the front\n                    _valuesEnd[ property ] = [ _object[ property ] ].concat( _valuesEnd[ property ] );\n\n                }\n\n                _valuesStart[ property ] = _object[ property ];\n\n                if( ( _valuesStart[ property ] instanceof Array ) === false ) {\n                    _valuesStart[ property ] *= 1.0; // Ensures we're using numbers, not strings\n                }\n\n                _valuesStartRepeat[ property ] = _valuesStart[ property ] || 0;\n\n            }\n\n            return this;\n\n        };\n\n        /**\n         * stop the tween\n         * @name me.Tween#stop\n         * @public\n         * @function\n         */\n        this.stop = function () {\n            // ensure the tween has not been removed previously\n            if (me.game.world.hasChild(this)) {\n                me.game.world.removeChildNow(this);\n            }\n            return this;\n        };\n\n        /**\n         * delay the tween\n         * @name me.Tween#delay\n         * @public\n         * @function\n         * @param {Number} amount delay amount expressed in milliseconds\n         */\n        this.delay = function ( amount ) {\n\n            _delayTime = amount;\n            return this;\n\n        };\n\n        /**\n         * Repeat the tween\n         * @name me.Tween#repeat\n         * @public\n         * @function\n         * @param {Number} times amount of times the tween should be repeated\n         */\n        this.repeat = function ( times ) {\n\n            _repeat = times;\n            return this;\n\n        };\n\n        /**\n         * allows the tween to bounce back to their original value when finished\n         * @name me.Tween#yoyo\n         * @public\n         * @function\n         * @param {Boolean} yoyo\n         */\n        this.yoyo = function( yoyo ) {\n\n            _yoyo = yoyo;\n            return this;\n\n        };\n\n        /**\n         * set the easing function\n         * @name me.Tween#easing\n         * @public\n         * @function\n         * @param {me.Tween.Easing} fn easing function\n         */\n        this.easing = function ( easing ) {\n            if (typeof easing !== 'function') {\n                throw new me.Tween.Error(\"invalid easing function for me.Tween.easing()\");\n            }\n            _easingFunction = easing;\n            return this;\n\n        };\n\n        /**\n         * set the interpolation function\n         * @name me.Tween#interpolation\n         * @public\n         * @function\n         * @param {me.Tween.Interpolation} fn interpolation function\n         */\n        this.interpolation = function ( interpolation ) {\n\n            _interpolationFunction = interpolation;\n            return this;\n\n        };\n\n        /**\n         * chain the tween\n         * @name me.Tween#chain\n         * @public\n         * @function\n         * @param {me.Tween} chainedTween Tween to be chained\n         */\n        this.chain = function () {\n\n            _chainedTweens = arguments;\n            return this;\n\n        };\n\n        /**\n         * onStart callback\n         * @name me.Tween#onStart\n         * @public\n         * @function\n         * @param {Function} onStartCallback callback\n         */\n        this.onStart = function ( callback ) {\n\n            _onStartCallback = callback;\n            return this;\n\n        };\n\n        /**\n         * onUpdate callback\n         * @name me.Tween#onUpdate\n         * @public\n         * @function\n         * @param {Function} onUpdateCallback callback\n         */\n        this.onUpdate = function ( callback ) {\n\n            _onUpdateCallback = callback;\n            return this;\n\n        };\n\n        /**\n         * onComplete callback\n         * @name me.Tween#onComplete\n         * @public\n         * @function\n         * @param {Function} onCompleteCallback callback\n         */\n        this.onComplete = function ( callback ) {\n\n            _onCompleteCallback = callback;\n            return this;\n\n        };\n\n        /** @ignore */\n        this.update = function ( dt ) {\n\n            // the original Tween implementation expect\n            // a timestamp and not a time delta\n            _tweenTimeTracker = (me.timer.lastUpdate > _tweenTimeTracker) ? me.timer.lastUpdate : _tweenTimeTracker + dt;\n            var time = _tweenTimeTracker;\n\n            var property;\n\n            if ( time < _startTime ) {\n\n                return true;\n\n            }\n\n            if ( _onStartCallbackFired === false ) {\n\n                if ( _onStartCallback !== null ) {\n\n                    _onStartCallback.call( _object );\n\n                }\n\n                _onStartCallbackFired = true;\n\n            }\n\n            var elapsed = ( time - _startTime ) / _duration;\n            elapsed = elapsed > 1 ? 1 : elapsed;\n\n            var value = _easingFunction( elapsed );\n\n            for ( property in _valuesEnd ) {\n\n                var start = _valuesStart[ property ] || 0;\n                var end = _valuesEnd[ property ];\n\n                if ( end instanceof Array ) {\n\n                    _object[ property ] = _interpolationFunction( end, value );\n\n                } else {\n\n                    // Parses relative end values with start as base (e.g.: +10, -3)\n                    if ( typeof(end) === \"string\" ) {\n                        end = start + parseFloat(end, 10);\n                    }\n\n                    // protect against non numeric properties.\n                    if ( typeof(end) === \"number\" ) {\n                        _object[ property ] = start + ( end - start ) * value;\n                    }\n\n                }\n\n            }\n\n            if ( _onUpdateCallback !== null ) {\n\n                _onUpdateCallback.call( _object, value );\n\n            }\n\n            if ( elapsed === 1 ) {\n\n                if ( _repeat > 0 ) {\n\n                    if( isFinite( _repeat ) ) {\n                        _repeat--;\n                    }\n\n                    // reassign starting values, restart by making startTime = now\n                    for( property in _valuesStartRepeat ) {\n\n                        if ( typeof( _valuesEnd[ property ] ) === \"string\" ) {\n                            _valuesStartRepeat[ property ] = _valuesStartRepeat[ property ] + parseFloat(_valuesEnd[ property ], 10);\n                        }\n\n                        if (_yoyo) {\n                            var tmp = _valuesStartRepeat[ property ];\n                            _valuesStartRepeat[ property ] = _valuesEnd[ property ];\n                            _valuesEnd[ property ] = tmp;\n                        }\n                        _valuesStart[ property ] = _valuesStartRepeat[ property ];\n\n                    }\n\n                    if (_yoyo) {\n                        _reversed = !_reversed;\n                    }\n\n                    _startTime = time + _delayTime;\n\n                    return true;\n\n                } else {\n                    // remove the tween from the object pool\n                    me.game.world.removeChildNow(this);\n\n                    if ( _onCompleteCallback !== null ) {\n\n                        _onCompleteCallback.call( _object );\n\n                    }\n\n                    for ( var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i ++ ) {\n\n                        _chainedTweens[ i ].start( time );\n\n                    }\n\n                    return false;\n\n                }\n\n            }\n\n            return true;\n\n        };\n\n    };\n\n    /**\n     * Easing Function :<br>\n     * <p>\n     * me.Tween.Easing.Linear.None<br>\n     * me.Tween.Easing.Quadratic.In<br>\n     * me.Tween.Easing.Quadratic.Out<br>\n     * me.Tween.Easing.Quadratic.InOut<br>\n     * me.Tween.Easing.Cubic.In<br>\n     * me.Tween.Easing.Cubic.Out<br>\n     * me.Tween.Easing.Cubic.InOut<br>\n     * me.Tween.Easing.Quartic.In<br>\n     * me.Tween.Easing.Quartic.Out<br>\n     * me.Tween.Easing.Quartic.InOut<br>\n     * me.Tween.Easing.Quintic.In<br>\n     * me.Tween.Easing.Quintic.Out<br>\n     * me.Tween.Easing.Quintic.InOut<br>\n     * me.Tween.Easing.Sinusoidal.In<br>\n     * me.Tween.Easing.Sinusoidal.Out<br>\n     * me.Tween.Easing.Sinusoidal.InOut<br>\n     * me.Tween.Easing.Exponential.In<br>\n     * me.Tween.Easing.Exponential.Out<br>\n     * me.Tween.Easing.Exponential.InOut<br>\n     * me.Tween.Easing.Circular.In<br>\n     * me.Tween.Easing.Circular.Out<br>\n     * me.Tween.Easing.Circular.InOut<br>\n     * me.Tween.Easing.Elastic.In<br>\n     * me.Tween.Easing.Elastic.Out<br>\n     * me.Tween.Easing.Elastic.InOut<br>\n     * me.Tween.Easing.Back.In<br>\n     * me.Tween.Easing.Back.Out<br>\n     * me.Tween.Easing.Back.InOut<br>\n     * me.Tween.Easing.Bounce.In<br>\n     * me.Tween.Easing.Bounce.Out<br>\n     * me.Tween.Easing.Bounce.InOut\n     * </p>\n     * @public\n     * @constant\n     * @type enum\n     * @name Easing\n     * @memberOf me.Tween\n     */\n    me.Tween.Easing = {\n\n        Linear: {\n            /** @ignore */\n            None: function ( k ) {\n\n                return k;\n\n            }\n\n        },\n\n        Quadratic: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return k * k;\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return k * ( 2 - k );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( ( k *= 2 ) < 1 ) return 0.5 * k * k;\n                return - 0.5 * ( --k * ( k - 2 ) - 1 );\n\n            }\n\n        },\n\n        Cubic: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return k * k * k;\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return --k * k * k + 1;\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k;\n                return 0.5 * ( ( k -= 2 ) * k * k + 2 );\n\n            }\n\n        },\n\n        Quartic: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return k * k * k * k;\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return 1 - ( --k * k * k * k );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( ( k *= 2 ) < 1) return 0.5 * k * k * k * k;\n                return - 0.5 * ( ( k -= 2 ) * k * k * k - 2 );\n\n            }\n\n        },\n\n        Quintic: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return k * k * k * k * k;\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return --k * k * k * k * k + 1;\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k * k * k;\n                return 0.5 * ( ( k -= 2 ) * k * k * k * k + 2 );\n\n            }\n\n        },\n\n        Sinusoidal: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return 1 - Math.cos( k * Math.PI / 2 );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return Math.sin( k * Math.PI / 2 );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                return 0.5 * ( 1 - Math.cos( Math.PI * k ) );\n\n            }\n\n        },\n\n        Exponential: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return k === 0 ? 0 : Math.pow( 1024, k - 1 );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return k === 1 ? 1 : 1 - Math.pow( 2, - 10 * k );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( k === 0 ) return 0;\n                if ( k === 1 ) return 1;\n                if ( ( k *= 2 ) < 1 ) return 0.5 * Math.pow( 1024, k - 1 );\n                return 0.5 * ( - Math.pow( 2, - 10 * ( k - 1 ) ) + 2 );\n\n            }\n\n        },\n\n        Circular: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return 1 - Math.sqrt( 1 - k * k );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                return Math.sqrt( 1 - ( --k * k ) );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( ( k *= 2 ) < 1) return - 0.5 * ( Math.sqrt( 1 - k * k) - 1);\n                return 0.5 * ( Math.sqrt( 1 - ( k -= 2) * k) + 1);\n\n            }\n\n        },\n\n        Elastic: {\n            /** @ignore */\n            In: function ( k ) {\n\n                var s, a = 0.1, p = 0.4;\n                if ( k === 0 ) return 0;\n                if ( k === 1 ) return 1;\n                if ( !a || a < 1 ) { a = 1; s = p / 4; }\n                else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n                return - ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                var s, a = 0.1, p = 0.4;\n                if ( k === 0 ) return 0;\n                if ( k === 1 ) return 1;\n                if ( !a || a < 1 ) { a = 1; s = p / 4; }\n                else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n                return ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                var s, a = 0.1, p = 0.4;\n                if ( k === 0 ) return 0;\n                if ( k === 1 ) return 1;\n                if ( !a || a < 1 ) { a = 1; s = p / 4; }\n                else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n                if ( ( k *= 2 ) < 1 ) return - 0.5 * ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n                return a * Math.pow( 2, -10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) * 0.5 + 1;\n\n            }\n\n        },\n\n        Back: {\n            /** @ignore */\n            In: function ( k ) {\n\n                var s = 1.70158;\n                return k * k * ( ( s + 1 ) * k - s );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                var s = 1.70158;\n                return --k * k * ( ( s + 1 ) * k + s ) + 1;\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                var s = 1.70158 * 1.525;\n                if ( ( k *= 2 ) < 1 ) return 0.5 * ( k * k * ( ( s + 1 ) * k - s ) );\n                return 0.5 * ( ( k -= 2 ) * k * ( ( s + 1 ) * k + s ) + 2 );\n\n            }\n\n        },\n\n        Bounce: {\n            /** @ignore */\n            In: function ( k ) {\n\n                return 1 - me.Tween.Easing.Bounce.Out( 1 - k );\n\n            },\n            /** @ignore */\n            Out: function ( k ) {\n\n                if ( k < ( 1 / 2.75 ) ) {\n\n                    return 7.5625 * k * k;\n\n                } else if ( k < ( 2 / 2.75 ) ) {\n\n                    return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\n\n                } else if ( k < ( 2.5 / 2.75 ) ) {\n\n                    return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\n\n                } else {\n\n                    return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\n\n                }\n\n            },\n            /** @ignore */\n            InOut: function ( k ) {\n\n                if ( k < 0.5 ) return me.Tween.Easing.Bounce.In( k * 2 ) * 0.5;\n                return me.Tween.Easing.Bounce.Out( k * 2 - 1 ) * 0.5 + 0.5;\n\n            }\n\n        }\n\n    };\n\n    /**\n     * Interpolation Function :<br>\n     * <p>\n     * me.Tween.Interpolation.Linear<br>\n     * me.Tween.Interpolation.Bezier<br>\n     * me.Tween.Interpolation.CatmullRom\n     * </p>\n     * @public\n     * @constant\n     * @type enum\n     * @name Interpolation\n     * @memberOf me.Tween\n     */\n    me.Tween.Interpolation = {\n        /** @ignore */\n        Linear: function ( v, k ) {\n\n            var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = me.Tween.Interpolation.Utils.Linear;\n\n            if ( k < 0 ) return fn( v[ 0 ], v[ 1 ], f );\n            if ( k > 1 ) return fn( v[ m ], v[ m - 1 ], m - f );\n\n            return fn( v[ i ], v[ i + 1 > m ? m : i + 1 ], f - i );\n\n        },\n        /** @ignore */\n        Bezier: function ( v, k ) {\n\n            var b = 0, n = v.length - 1, pw = Math.pow, bn = me.Tween.Interpolation.Utils.Bernstein, i;\n\n            for ( i = 0; i <= n; i++ ) {\n                b += pw( 1 - k, n - i ) * pw( k, i ) * v[ i ] * bn( n, i );\n            }\n\n            return b;\n\n        },\n        /** @ignore */\n        CatmullRom: function ( v, k ) {\n\n            var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = me.Tween.Interpolation.Utils.CatmullRom;\n\n            if ( v[ 0 ] === v[ m ] ) {\n\n                if ( k < 0 ) i = Math.floor( f = m * ( 1 + k ) );\n\n                return fn( v[ ( i - 1 + m ) % m ], v[ i ], v[ ( i + 1 ) % m ], v[ ( i + 2 ) % m ], f - i );\n\n            } else {\n\n                if ( k < 0 ) return v[ 0 ] - ( fn( v[ 0 ], v[ 0 ], v[ 1 ], v[ 1 ], -f ) - v[ 0 ] );\n                if ( k > 1 ) return v[ m ] - ( fn( v[ m ], v[ m ], v[ m - 1 ], v[ m - 1 ], f - m ) - v[ m ] );\n\n                return fn( v[ i ? i - 1 : 0 ], v[ i ], v[ m < i + 1 ? m : i + 1 ], v[ m < i + 2 ? m : i + 2 ], f - i );\n\n            }\n\n        },\n\n        Utils: {\n            /** @ignore */\n            Linear: function ( p0, p1, t ) {\n\n                return ( p1 - p0 ) * t + p0;\n\n            },\n            /** @ignore */\n            Bernstein: function ( n , i ) {\n\n                var fc = me.Tween.Interpolation.Utils.Factorial;\n                return fc( n ) / fc( i ) / fc( n - i );\n\n            },\n            /** @ignore */\n            Factorial: ( function () {\n\n                var a = [ 1 ];\n\n                return function ( n ) {\n\n                    var s = 1, i;\n                    if ( a[ n ] ) return a[ n ];\n                    for ( i = n; i > 1; i-- ) s *= i;\n                    return a[ n ] = s;\n\n                };\n\n            } )(),\n            /** @ignore */\n            CatmullRom: function ( p0, p1, p2, p3, t ) {\n\n                var v0 = ( p2 - p0 ) * 0.5, v1 = ( p3 - p1 ) * 0.5, t2 = t * t, t3 = t * t2;\n                return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n            }\n\n        }\n\n    };\n\n    /**\n     * Base class for Tween exception handling.\n     * @name Error\n     * @class\n     * @memberOf me.Tween\n     * @constructor\n     * @param {String} msg Error message.\n     */\n    me.Tween.Error = me.Error.extend({\n        init : function (msg) {\n            me.Error.prototype.init.apply(this, [ msg ]);\n            this.name = \"me.Tween.Error\";\n        }\n    });\n})();\n\n/**\n * @preserve MinPubSub\n * a micro publish/subscribe messaging framework\n * @see https://github.com/daniellmb/MinPubSub\n * @author Daniel Lamb <daniellmb.com>\n *\n * Released under the MIT License\n */\n(function () {\n    /**\n     * There is no constructor function for me.event\n     * @namespace me.event\n     * @memberOf me\n     */\n    me.event = (function () {\n        // hold public stuff inside the singleton\n        var api = {};\n\n        /**\n         * the channel/subscription hash\n         * @ignore\n         */\n        var cache = {};\n\n        /*\n         * PUBLIC\n         */\n\n        /**\n         * Channel Constant when the game is paused <br>\n         * Data passed : none <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#STATE_PAUSE\n         */\n        api.STATE_PAUSE = \"me.state.onPause\";\n\n        /**\n         * Channel Constant for when the game is resumed <br>\n         * Data passed : {Number} time in ms the game was paused\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#STATE_RESUME\n         */\n        api.STATE_RESUME = \"me.state.onResume\";\n\n        /**\n         * Channel Constant when the game is stopped <br>\n         * Data passed : none <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#STATE_STOP\n         */\n        api.STATE_STOP = \"me.state.onStop\";\n\n        /**\n         * Channel Constant for when the game is restarted <br>\n         * Data passed : {Number} time in ms the game was stopped\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#STATE_RESTART\n         */\n        api.STATE_RESTART = \"me.state.onRestart\";\n\n        /**\n         * Channel Constant for when the game manager is initialized <br>\n         * Data passed : none <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#GAME_INIT\n         */\n        api.GAME_INIT = \"me.game.onInit\";\n\n        /**\n         * Channel Constant for when a level is loaded <br>\n         * Data passed : {String} Level Name\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#LEVEL_LOADED\n         */\n        api.LEVEL_LOADED = \"me.game.onLevelLoaded\";\n\n        /**\n         * Channel Constant for when everything has loaded <br>\n         * Data passed : none <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#LOADER_COMPLETE\n         */\n        api.LOADER_COMPLETE = \"me.loader.onload\";\n\n        /**\n         * Channel Constant for displaying a load progress indicator <br>\n         * Data passed : {Number} [0 .. 1], {Resource} resource object<br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#LOADER_PROGRESS\n         */\n        api.LOADER_PROGRESS = \"me.loader.onProgress\";\n\n        /**\n         * Channel Constant for pressing a binded key <br>\n         * Data passed : {String} user-defined action, {Number} keyCode,\n         * {Boolean} edge state <br>\n         * Edge-state is for detecting \"locked\" key bindings. When a locked key\n         * is pressed and held, the first event will have the third argument\n         * set true. Subsequent events will continue firing with the third\n         * argument set false.\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#KEYDOWN\n         * @example\n         * me.input.bindKey(me.input.KEY.X, \"jump\", true); // Edge-triggered\n         * me.input.bindKey(me.input.KEY.Z, \"shoot\"); // Level-triggered\n         * me.event.subscribe(me.event.KEYDOWN, function (action, keyCode, edge) {\n         *   // Checking bound keys\n         *   if (action === \"jump\") {\n         *       if (edge) {\n         *           this.doJump();\n         *       }\n         *\n         *       // Make character fall slower when holding the jump key\n         *       this.vel.y = this.gravity;\n         *   }\n         * });\n         */\n        api.KEYDOWN = \"me.input.keydown\";\n\n        /**\n         * Channel Constant for releasing a binded key <br>\n         * Data passed : {String} user-defined action, {Number} keyCode <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#KEYUP\n         * @example\n         * me.event.subscribe(me.event.KEYUP, function (action, keyCode) {\n         *   // Checking unbound keys\n         *   if (keyCode == me.input.KEY.ESC) {\n         *       if (me.state.isPaused()) {\n         *           me.state.resume();\n         *       }\n         *       else {\n         *           me.state.pause();\n         *       }\n         *   }\n         * });\n         */\n        api.KEYUP = \"me.input.keyup\";\n\n        /**\n         * Channel Constant for when a gamepad is connected <br>\n         * Data passed : {Object} gamepad object\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#GAMEPAD_CONNECTED\n         */\n        api.GAMEPAD_CONNECTED = \"gamepad.connected\";\n\n        /**\n         * Channel Constant for when a gamepad is disconnected <br>\n         * Data passed : {Object} gamepad object\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#GAMEPAD_DISCONNECTED\n         */\n        api.GAMEPAD_DISCONNECTED = \"gamepad.disconnected\";\n\n        /**\n         * Channel Constant for when gamepad button/axis state is updated <br>\n         * Data passed : {Number} index <br>\n         * Data passed : {String} type : \"axes\" or \"buttons\" <br>\n         * Data passed : {Number} button <br>\n         * Data passed : {Number} current.value <br>\n         * Data passed : {Boolean} current.pressed <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#GAMEPAD_UPDATE\n         */\n        api.GAMEPAD_UPDATE = \"gamepad.update\";\n\n        /**\n         * Channel Constant for pointermove events on the viewport area <br>\n         * Data passed : {Object} the Event object <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#POINTERMOVE\n         */\n        api.POINTERMOVE = \"me.event.pointermove\";\n\n        /**\n         * Channel Constant for dragstart events on a Draggable entity <br>\n         * Data passed:\n         * {Object} the drag event <br>\n         * {Object} the Draggable entity <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#DRAGSTART\n         */\n        api.DRAGSTART = \"me.game.dragstart\";\n\n        /**\n         * Channel Constant for dragend events on a Draggable entity <br>\n         * Data passed:\n         * {Object} the drag event <br>\n         * {Object} the Draggable entity <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#DRAGEND\n         */\n        api.DRAGEND = \"me.game.dragend\";\n\n        /**\n         * Channel Constant for when the (browser) window is resized <br>\n         * Data passed : {Event} Event object <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#WINDOW_ONRESIZE\n         */\n        api.WINDOW_ONRESIZE = \"window.onresize\";\n\n        /**\n         * Channel Constant for when the viewport is resized <br>\n         * (this usually follows a WINDOW_ONRESIZE event, when using the `flex` scaling mode is used and after the viewport was updated).<br>\n         * Data passed : {Number} viewport width <br>\n         * Data passed : {Number} viewport height <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#VIEWPORT_ONRESIZE\n         */\n        api.VIEWPORT_ONRESIZE = \"viewport.onresize\";\n\n        /**\n         * Channel Constant for when the device is rotated <br>\n         * Data passed : {Event} Event object <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#WINDOW_ONORIENTATION_CHANGE\n         */\n        api.WINDOW_ONORIENTATION_CHANGE = \"window.orientationchange\";\n\n        /**\n         * Channel Constant for when the (browser) window is scrolled <br>\n         * Data passed : {Event} Event object <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#WINDOW_ONSCROLL\n         */\n        api.WINDOW_ONSCROLL = \"window.onscroll\";\n\n        /**\n         * Channel Constant for when the viewport position is updated <br>\n         * Data passed : {me.Vector2d} viewport position vector <br>\n         * @public\n         * @constant\n         * @type String\n         * @name me.event#VIEWPORT_ONCHANGE\n         */\n        api.VIEWPORT_ONCHANGE = \"viewport.onchange\";\n\n        /**\n         * Publish some data on a channel\n         * @name me.event#publish\n         * @public\n         * @function\n         * @param {String} channel The channel to publish on\n         * @param {Array} arguments The data to publish\n         *\n         * @example Publish stuff on '/some/channel'.\n         * Anything subscribed will be called with a function\n         * signature like: function (a,b,c){ ... }\n         *\n         * me.event.publish(\"/some/channel\", [\"a\",\"b\",\"c\"]);\n         *\n         */\n        api.publish = function (channel, args) {\n            var subs = cache[channel],\n                len = subs ? subs.length : 0;\n\n            //can change loop or reverse array if the order matters\n            while (len--) {\n                subs[len].apply(window, args || []); // is window correct here?\n            }\n        };\n\n        /**\n         * Register a callback on a named channel.\n         * @name me.event#subscribe\n         * @public\n         * @function\n         * @param {String} channel The channel to subscribe to\n         * @param {Function} callback The event handler, any time something is\n         * published on a subscribed channel, the callback will be called\n         * with the published array as ordered arguments\n         * @return {handle} A handle which can be used to unsubscribe this\n         * particular subscription\n         * @example\n         * me.event.subscribe(\"/some/channel\", function (a, b, c){ doSomething(); });\n         */\n\n        api.subscribe = function (channel, callback) {\n            if (!cache[channel]) {\n                cache[channel] = [];\n            }\n            cache[channel].push(callback);\n            return [ channel, callback ]; // Array\n        };\n\n        /**\n         * Disconnect a subscribed function for a channel.\n         * @name me.event#unsubscribe\n         * @public\n         * @function\n         * @param {Array|String} handle The return value from a subscribe call or the\n         * name of a channel as a String\n         * @param {Function} [callback] The callback to be unsubscribed.\n         * @example\n         * var handle = me.event.subscribe(\"/some/channel\", function (){});\n         * me.event.unsubscribe(handle);\n         *\n         * // Or alternatively ...\n         *\n         * var callback = function (){};\n         * me.event.subscribe(\"/some/channel\", callback);\n         * me.event.unsubscribe(\"/some/channel\", callback);\n         */\n        api.unsubscribe = function (handle, callback) {\n            var subs = cache[callback ? handle : handle[0]],\n                len = subs ? subs.length : 0;\n\n            callback = callback || handle[1];\n\n            while (len--) {\n                if (subs[len] === callback) {\n                    subs.splice(len, 1);\n                }\n            }\n        };\n\n        // return our object\n        return api;\n    })();\n})();\n\n/*!\n *  howler.js v2.0.0-beta7\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n/* jshint -W003 */\n/* jshint -W004 */\n/* jshint -W030 */\n/* jshint -W031 */\n/* jshint -W083 */\n/* jshint -W084 */\n/* jshint -W108 */\n\n(function() {\n\n  'use strict';\n\n  // Setup our audio context.\n  var ctx = null;\n  var usingWebAudio = true;\n  var noAudio = false;\n  var masterGain = null;\n  var canPlayEvent = 'canplaythrough';\n  setupAudioContext();\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = ctx ? ctx.state || 'running' : 'running';\n      self.autoSuspend = true;\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // No audio is available on this system if this is set to true.\n      self.noAudio = noAudio;\n\n      // This will be true if the Web Audio API is available.\n      self.usingWebAudio = usingWebAudio;\n\n      // Expose the AudioContext when using Web Audio.\n      self.ctx = ctx;\n\n      // Expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n      self.masterGain = masterGain;\n\n      // Check for supported codecs.\n      if (!noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (usingWebAudio) {\n          masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (usingWebAudio) {\n        masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && typeof ctx.close !== 'undefined') {\n        self.ctx = null;\n        ctx.close();\n        setupAudioContext();\n        self.ctx = ctx;\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext];\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = new Audio();\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n      var isOpera = /OPR\\//.test(navigator.userAgent);\n\n      self._codecs = {\n        mp3: !!(!isOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on iOS if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk/i.test(navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0));\n      if (ctx && (self._mobileEnabled || !isMobile || !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Create an empty buffer.\n        var buffer = ctx.createBuffer(1, 1, 22050);\n        var source = ctx.createBufferSource();\n        source.buffer = buffer;\n        source.connect(ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !ctx || typeof ctx.suspend === 'undefined' || !usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!ctx || typeof ctx.resume === 'undefined' || !usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.state = 'resuming';\n        ctx.resume().then(function() {\n          self.state = 'running';\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._loaded = false;\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof ctx !== 'undefined' && ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Extract the file extension from the URL or base64 data URI.\n          str = self._src[i];\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Check if this extension is available.\n        if (Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite Sprite name for sprite playback or sound id to continue previous.\n     * @return {Number}        Sound ID.\n     */\n    play: function(sprite) {\n      var self = this;\n      var args = arguments;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If we have no sprite and the sound hasn't loaded, we must wait\n      // for the sound to load to get our audio's duration.\n      if (!self._loaded && !self._sprite[sprite]) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(self._soundById(sound._id) ? sound._id : undefined);\n          }\n        });\n\n        return sound._id;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!args[1]) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000;\n      var duration = ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek;\n\n      // Create a timer to fire at the end of playback or the start of a new loop.\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      if (timeout !== Infinity) {\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume * Howler.volume();\n          node.gain.setValueAtTime(vol, ctx.currentTime);\n          sound._playStart = ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (!self._endTimers[sound._id] && timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!args[1]) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        if (self._loaded) {\n          playWebAudio();\n        } else {\n          // Wait for the audio to load and then begin playback.\n          self.once('load', playWebAudio, sound._id);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n          setTimeout(function() {\n            node.play();\n            if (!args[1]) {\n              self._emit('play', sound._id);\n            }\n          }, 0);\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        if (node.readyState === 4 || window.ejecta || !node.readyState && navigator.isCocoonJS) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(canPlayEvent, listener, false);\n          };\n          node.addEventListener(canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (!self._loaded) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              sound._node.bufferSource = null;\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n\n          // Fire the pause event, unless `true` is passed as the 2nd argument.\n          if (!arguments[1]) {\n            self._emit('pause', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @return {Howl}\n     */\n    stop: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (!self._loaded) {\n        if (typeof self._sounds[0]._sprite !== 'undefined') {\n          self._queue.push({\n            event: 'stop',\n            action: function() {\n              self.stop(id);\n            }\n          });\n        }\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              sound._node.bufferSource = null;\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n              sound._node.currentTime = sound._start || 0;\n            }\n          }\n\n          self._emit('stop', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (!self._loaded) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume * Howler.volume(), ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (!self._loaded) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol * Howler.volume(), ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (!self._loaded) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          if (self._webAudio && !sound._muted) {\n            var currentTime = ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n\n            // Fire the event when complete.\n            sound._timeout = setTimeout(function(id, sound) {\n              delete sound._timeout;\n              setTimeout(function() {\n                sound._volume = to;\n                self._emit('fade', id);\n              }, end - ctx.currentTime > 0 ? Math.ceil((end - ctx.currentTime) * 1000) : 0);\n            }.bind(self, ids[i], sound), len);\n          } else {\n            var diff = Math.abs(from - to);\n            var dir = from > to ? 'out' : 'in';\n            var steps = diff / 0.01;\n            var stepLen = len / steps;\n\n            (function() {\n              var vol = from;\n              sound._interval = setInterval(function(id, sound) {\n                // Update the volume amount.\n                vol += (dir === 'in' ? 0.01 : -0.01);\n\n                // Make sure the volume is in the right bounds.\n                vol = Math.max(0, vol);\n                vol = Math.min(1, vol);\n\n                // Round to within 2 decimal points.\n                vol = Math.round(vol * 100) / 100;\n\n                // Change the volume.\n                self.volume(vol, id, true);\n\n                // When the fade is complete, stop it and fire event.\n                if (vol === to) {\n                  clearInterval(sound._interval);\n                  delete sound._interval;\n                  self._emit('fade', id);\n                }\n              }.bind(self, ids[i], sound), stepLen);\n            })();\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound._interval) {\n        clearInterval(sound._interval);\n        delete sound._interval;\n        self._emit('fade', id);\n      } else if (sound._timeout) {\n        clearTimeout(sound._timeout);\n        delete sound._timeout;\n        sound._node.gain.cancelScheduledValues(ctx.currentTime);\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (!self._loaded) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            self._clearTimer(id[i]);\n            self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (!self._loaded) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            return (sound._seek + (self.playing(id) ? ctx.currentTime - sound._playStart : 0));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not.\n     * @param  {Number} id The sound id to check. If none is passed, first sound is used.\n     * @return {Boolean}    True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n      var sound = self._soundById(id) || self._sounds[0];\n\n      return sound ? !sound._paused : false;\n    },\n\n    /**\n     * Get the duration of this sound.\n     * @param  {Number} id The sound id to check. If none is passed, first sound is used.\n     * @return {Number} Audio duration.\n     */\n    duration: function(id) {\n      var self = this;\n      var sound = self._soundById(id) || self._sounds[0];\n\n      return self._duration / sound._rate;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n          self._emit('end', sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to an empty string to stop any downloading.\n          sounds[i]._node.src = '';\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache.\n      if (cache) {\n        delete cache[self._src];\n      }\n\n      // Clear out `self`.\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (fn) {\n        // Loop through event store and remove the passed function.\n        for (var i=0; i<events.length; i++) {\n          if (fn === events[i].fn && id === events[i].id) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (var i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._playStart = ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        sound._node.bufferSource = null;\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = self._rate;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume * Howler.volume();\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof ctx.createGain === 'undefined') ? ctx.createGainNode() : ctx.createGain();\n        self._node.gain.setValueAtTime(volume, ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume;\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      if (self._node.error && self._node.error.code === 4) {\n        Howler.noAudio = true;\n      }\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorListener, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (!parent._loaded) {\n        parent._loaded = true;\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      if (parent._autoplay) {\n        parent.play();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  // Only define these methods when using Web Audio.\n  if (usingWebAudio) {\n\n    var cache = {};\n\n    /**\n     * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n     * @param  {Howl} self\n     */\n    var loadBuffer = function(self) {\n      var url = self._src;\n\n      // Check if the buffer has already been cached and use it instead.\n      if (cache[url]) {\n        // Set the duration from the cache.\n        self._duration = cache[url].duration;\n\n        // Load the sound into this Howl.\n        loadSound(self);\n\n        return;\n      }\n\n      if (/^data:[^;]+;base64,/.test(url)) {\n        // Setup polyfill for window.atob to support IE9.\n        // Modified from: https://github.com/davidchambers/Base64.js\n        window.atob = window.atob || function(input) {\n          var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n          var str = String(input).replace(/=+$/, '');\n          for (\n            var bc = 0, bs, buffer, idx = 0, output = '';\n            buffer = str.charAt(idx++);\n            ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n          ) {\n            buffer = chars.indexOf(buffer);\n          }\n\n          return output;\n        };\n\n        // Decode the base64 data URI without XHR, since some browsers don't support it.\n        var data = atob(url.split(',')[1]);\n        var dataView = new Uint8Array(data.length);\n        for (var i=0; i<data.length; ++i) {\n          dataView[i] = data.charCodeAt(i);\n        }\n\n        decodeAudioData(dataView.buffer, self);\n      } else {\n        // Load the buffer from the URL.\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function() {\n          decodeAudioData(xhr.response, self);\n        };\n        xhr.onerror = function() {\n          // If there is an error, switch to HTML5 Audio.\n          if (self._webAudio) {\n            self._html5 = true;\n            self._webAudio = false;\n            self._sounds = [];\n            delete cache[url];\n            self.load();\n          }\n        };\n        safeXhrSend(xhr);\n      }\n    };\n\n    /**\n     * Send the XHR request wrapped in a try/catch.\n     * @param  {Object} xhr XHR to send.\n     */\n    var safeXhrSend = function(xhr) {\n      try {\n        xhr.send();\n      } catch (e) {\n        xhr.onerror();\n      }\n    };\n\n    /**\n     * Decode audio data from an array buffer.\n     * @param  {ArrayBuffer} arraybuffer The audio data.\n     * @param  {Howl}        self\n     */\n    var decodeAudioData = function(arraybuffer, self) {\n      // Decode the buffer into an audio source.\n      ctx.decodeAudioData(arraybuffer, function(buffer) {\n        if (buffer && self._sounds.length > 0) {\n          cache[self._src] = buffer;\n          loadSound(self, buffer);\n        }\n      }, function() {\n        self._emit('loaderror', null, 'Decoding audio data failed.');\n      });\n    };\n\n    /**\n     * Sound is now loaded, so finish setting everything up and fire the loaded event.\n     * @param  {Howl} self\n     * @param  {Object} buffer The decoded buffer sound source.\n     */\n    var loadSound = function(self, buffer) {\n      // Set the duration.\n      if (buffer && !self._duration) {\n        self._duration = buffer.duration;\n      }\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(self._sprite).length === 0) {\n        self._sprite = {__default: [0, self._duration * 1000]};\n      }\n\n      // Fire the loaded event.\n      if (!self._loaded) {\n        self._loaded = true;\n        self._emit('load');\n        self._loadQueue();\n      }\n\n      // Begin playback if specified.\n      if (self._autoplay) {\n        self.play();\n      }\n    };\n\n  }\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  function setupAudioContext() {\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        ctx = new webkitAudioContext();\n      } else {\n        usingWebAudio = false;\n      }\n    } catch(e) {\n      usingWebAudio = false;\n    }\n\n    if (!usingWebAudio) {\n      if (typeof Audio !== 'undefined') {\n        try {\n          var test = new Audio();\n\n          // Check if the canplaythrough event is available.\n          if (typeof test.oncanplaythrough === 'undefined' && !window.ejecta) {\n            canPlayEvent = 'canplay';\n          }\n        } catch(e) {\n          noAudio = true;\n        }\n      } else {\n        noAudio = true;\n      }\n    }\n\n    // Test to make sure audio isn't disabled in Internet Explorer\n    try {\n      var test = new Audio();\n      if (test.muted) {\n        noAudio = true;\n      }\n    } catch (e) {}\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(navigator.platform));\n    var appVersion = navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(window.navigator.userAgent.toLowerCase());\n      if (window.navigator.standalone && !safari || !window.navigator.standalone && !safari) {\n        usingWebAudio = false;\n      }\n    }\n\n    // Create a master gain node.\n    if (usingWebAudio) {\n      masterGain = (typeof ctx.createGain === 'undefined') ? ctx.createGainNode() : ctx.createGain();\n      masterGain.gain.value = 1;\n      masterGain.connect(ctx.destination);\n    }\n  }\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n(function () {\n    /**\n     * There is no constructor function for me.plugins<br>\n     * This namespace is a container for all registered plugins.\n     * @see me.plugin.register\n     * @namespace me.plugins\n     * @memberOf me\n     */\n    me.plugins = {};\n\n    /**\n     * There is no constructor function for me.plugin\n     * @namespace me.plugin\n     * @memberOf me\n     */\n    me.plugin = (function () {\n\n        // hold public stuff inside the singleton\n        var singleton = {};\n\n        /*--------------\n            PUBLIC\n          --------------*/\n\n        /**\n        * a base Object for plugin <br>\n        * plugin must be installed using the register function\n        * @see me.plugin\n        * @class\n        * @extends Object\n        * @name plugin.Base\n        * @memberOf me\n        * @constructor\n        */\n        singleton.Base = me.Object.extend(\n        /** @scope me.plugin.Base.prototype */\n        {\n            /** @ignore */\n            init : function () {\n                /**\n                 * define the minimum required version of melonJS<br>\n                 * this can be overridden by the plugin\n                 * @public\n                 * @type String\n                 * @default \"3.0.1\"\n                 * @name me.plugin.Base#version\n                 */\n                this.version = \"3.0.1\";\n            }\n        });\n\n        /**\n         * patch a melonJS function\n         * @name patch\n         * @memberOf me.plugin\n         * @public\n         * @function\n         * @param {Object} proto target object\n         * @param {String} name target function\n         * @param {Function} fn replacement function\n         * @example\n         * // redefine the me.game.update function with a new one\n         * me.plugin.patch(me.game, \"update\", function () {\n         *   // display something in the console\n         *   console.log(\"duh\");\n         *   // call the original me.game.update function\n         *   this._patched();\n         * });\n         */\n        singleton.patch = function (proto, name, fn) {\n            // use the object prototype if possible\n            if (typeof proto.prototype !== \"undefined\") {\n                proto = proto.prototype;\n            }\n            // reuse the logic behind me.Object.extend\n            if (typeof(proto[name]) === \"function\") {\n                // save the original function\n                var _parent = proto[name];\n                // override the function with the new one\n                Object.defineProperty(proto, name, {\n                    \"configurable\" : true,\n                    \"value\" : (function (name, fn) {\n                        return function () {\n                            this._patched = _parent;\n                            var ret = fn.apply(this, arguments);\n                            this._patched = null;\n                            return ret;\n                        };\n                    })(name, fn)\n                });\n            }\n            else {\n                console.error(name + \" is not an existing function\");\n            }\n        };\n\n        /**\n         * Register a plugin.\n         * @name register\n         * @memberOf me.plugin\n         * @see me.plugin.Base\n         * @public\n         * @function\n         * @param {me.plugin.Base} plugin Plugin to instiantiate and register\n         * @param {String} name\n         * @param {} [arguments...] all extra parameters will be passed to the plugin constructor\n         * @example\n         * // register a new plugin\n         * me.plugin.register(TestPlugin, \"testPlugin\");\n         * // the plugin then also become available\n         * // under then me.plugins namespace\n         * me.plugins.testPlugin.myfunction ();\n         */\n        singleton.register = function (plugin, name) {\n            // ensure me.plugin[name] is not already \"used\"\n            if (me.plugin[name]) {\n                console.error(\"plugin \" + name + \" already registered\");\n            }\n\n            // get extra arguments\n            var _args = [];\n            if (arguments.length > 2) {\n                // store extra arguments if any\n                _args = Array.prototype.slice.call(arguments, 1);\n            }\n\n            // try to instantiate the plugin\n            _args[0] = plugin;\n            var instance = new (plugin.bind.apply(plugin, _args))();\n\n            // inheritance check\n            if (!instance || !(instance instanceof me.plugin.Base)) {\n                throw new me.Error(\"Plugin should extend the me.plugin.Base Class !\");\n            }\n\n            // compatibility testing\n            if (me.sys.checkVersion(instance.version) > 0) {\n                throw new me.Error(\"Plugin version mismatch, expected: \" + instance.version + \", got: \" + me.version);\n            }\n\n            // create a reference to the new plugin\n            me.plugins[name] = instance;\n        };\n\n        // return our singleton\n        return singleton;\n    })();\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * Used to make a game entity draggable\n * @class\n * @extends me.Entity\n * @memberOf me\n * @constructor\n * @param {Number} x the x coordinates of the entity object\n * @param {Number} y the y coordinates of the entity object\n * @param {Object} settings Entity properties (see {@link me.Entity})\n */\nme.DraggableEntity = (function (Entity, Input, Event, Vector) {\n    \"use strict\";\n\n    return Entity.extend(\n    /** @scope me.DraggableEntity.prototype */\n    {\n        /**\n         * Constructor\n         * @name init\n         * @memberOf me.DraggableEntity\n         * @function\n         * @param {Number} x the x postion of the entity\n         * @param {Number} y the y postion of the entity\n         * @param {Object} settings the additional entity settings\n         */\n        init: function (x, y, settings) {\n            Entity.prototype.init.apply(this, [x, y, settings]);\n            this.dragging = false;\n            this.dragId = null;\n            this.grabOffset = new Vector(0, 0);\n            this.onPointerEvent = Input.registerPointerEvent;\n            this.removePointerEvent = Input.releasePointerEvent;\n            this.initEvents();\n        },\n\n        /**\n         * Initializes the events the modules needs to listen to\n         * It translates the pointer events to me.events\n         * in order to make them pass through the system and to make\n         * this module testable. Then we subscribe this module to the\n         * transformed events.\n         * @name initEvents\n         * @memberOf me.DraggableEntity\n         * @function\n         */\n        initEvents: function () {\n            var self = this;\n            this.mouseDown = function (e) {\n                this.translatePointerEvent(e, Event.DRAGSTART);\n            };\n            this.mouseUp = function (e) {\n                this.translatePointerEvent(e, Event.DRAGEND);\n            };\n            this.onPointerEvent(\"pointerdown\", this, this.mouseDown.bind(this));\n            this.onPointerEvent(\"pointerup\", this, this.mouseUp.bind(this));\n            Event.subscribe(Event.POINTERMOVE, this.dragMove.bind(this));\n            Event.subscribe(Event.DRAGSTART, function (e, draggable) {\n                if (draggable === self) {\n                    self.dragStart(e);\n                }\n            });\n            Event.subscribe(Event.DRAGEND, function (e, draggable) {\n                if (draggable === self) {\n                    self.dragEnd(e);\n                }\n            });\n        },\n\n        /**\n         * Translates a pointer event to a me.event\n         * @name translatePointerEvent\n         * @memberOf me.DraggableEntity\n         * @function\n         * @param {Object} e the pointer event you want to translate\n         * @param {String} translation the me.event you want to translate\n         * the event to\n         */\n        translatePointerEvent: function (e, translation) {\n            Event.publish(translation, [e, this]);\n        },\n\n        /**\n         * Gets called when the user starts dragging the entity\n         * @name dragStart\n         * @memberOf me.DraggableEntity\n         * @function\n         * @param {Object} x the pointer event\n         */\n        dragStart: function (e) {\n            if (this.dragging === false) {\n                this.dragging = true;\n                this.dragId = e.pointerId;\n                this.grabOffset.set(e.gameX, e.gameY);\n                this.grabOffset.sub(this.pos);\n                return false;\n            }\n        },\n\n        /**\n         * Gets called when the user drags this entity around\n         * @name dragMove\n         * @memberOf me.DraggableEntity\n         * @function\n         * @param {Object} x the pointer event\n         */\n        dragMove: function (e) {\n            if (this.dragging === true) {\n                if (this.dragId === e.pointerId) {\n                    this.pos.set(e.gameX, e.gameY, this.pos.z); //TODO : z ?\n                    this.pos.sub(this.grabOffset);\n                }\n            }\n        },\n\n        /**\n         * Gets called when the user stops dragging the entity\n         * @name dragEnd\n         * @memberOf me.DraggableEntity\n         * @function\n         * @param {Object} x the pointer event\n         */\n        dragEnd: function () {\n            if (this.dragging === true) {\n                this.pointerId = undefined;\n                this.dragging = false;\n                return false;\n            }\n        },\n\n        /**\n         * Destructor\n         * @name destroy\n         * @memberOf me.DraggableEntity\n         * @function\n         */\n        destroy: function () {\n            Event.unsubscribe(Event.POINTERMOVE, this.dragMove);\n            Event.unsubscribe(Event.DRAGSTART, this.dragStart);\n            Event.unsubscribe(Event.DRAGEND, this.dragEnd);\n            this.removePointerEvent(\"pointerdown\", this);\n            this.removePointerEvent(\"pointerup\", this);\n        }\n    });\n}(me.Entity, me.input, me.event, me.Vector2d));\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n */\n\n/**\n * Used to make a game entity a droptarget\n * @class\n * @extends me.Entity\n * @memberOf me\n * @constructor\n * @param {Number} x the x coordinates of the entity object\n * @param {Number} y the y coordinates of the entity object\n * @param {Object} settings Entity properties (see {@link me.Entity})\n */\nme.DroptargetEntity = (function (Entity, Event) {\n    \"use strict\";\n\n    return Entity.extend(\n    /** @scope me.DroptargetEntity.prototype */\n    {\n        /**\n         * Constructor\n         * @name init\n         * @memberOf me.DroptargetEntity\n         * @function\n         * @param {Number} x the x postion of the entity\n         * @param {Number} y the y postion of the entity\n         * @param {Object} settings the additional entity settings\n         */\n        init: function (x, y, settings) {\n            /**\n             * constant for the overlaps method\n             * @public\n             * @constant\n             * @type String\n             * @name CHECKMETHOD_OVERLAP\n             * @memberOf me.DroptargetEntity\n             */\n            this.CHECKMETHOD_OVERLAP = \"overlaps\";\n            /**\n             * constant for the contains method\n             * @public\n             * @constant\n             * @type String\n             * @name CHECKMETHOD_CONTAINS\n             * @memberOf me.DroptargetEntity\n             */\n            this.CHECKMETHOD_CONTAINS = \"contains\";\n            /**\n             * the checkmethod we want to use\n             * @public\n             * @constant\n             * @type String\n             * @name checkMethod\n             * @memberOf me.DroptargetEntity\n             */\n            this.checkMethod = null;\n            Entity.prototype.init.apply(this, [x, y, settings]);\n            Event.subscribe(Event.DRAGEND, this.checkOnMe.bind(this));\n            this.checkMethod = this[this.CHECKMETHOD_OVERLAP];\n        },\n\n        /**\n         * Sets the collision method which is going to be used to check a valid drop\n         * @name setCheckMethod\n         * @memberOf me.DroptargetEntity\n         * @function\n         * @param {Constant} checkMethod the checkmethod (defaults to CHECKMETHOD_OVERLAP)\n         */\n        setCheckMethod: function (checkMethod) {\n            //  We can improve this check,\n            //  because now you can use every method in theory\n            if (typeof(this[checkMethod]) !== \"undefined\") {\n                this.checkMethod = this[checkMethod];\n            }\n        },\n\n        /**\n         * Checks if a dropped entity is dropped on the current entity\n         * @name checkOnMe\n         * @memberOf me.DroptargetEntity\n         * @function\n         * @param {Object} draggableEntity the draggable entity that is dropped\n         */\n        checkOnMe: function (e, draggableEntity) {\n            if (draggableEntity && this.checkMethod(draggableEntity.getBounds())) {\n                // call the drop method on the current entity\n                this.drop(draggableEntity);\n            }\n        },\n\n        /**\n         * Gets called when a draggable entity is dropped on the current entity\n         * @name drop\n         * @memberOf me.DroptargetEntity\n         * @function\n         * @param {Object} draggableEntity the draggable entity that is dropped\n         */\n        drop: function () {},\n\n        /**\n         * Destructor\n         * @name destroy\n         * @memberOf me.DroptargetEntity\n         * @function\n         */\n        destroy: function () {\n            Event.unsubscribe(Event.DRAGEND, this.checkOnMe);\n        }\n    });\n}(me.Entity, me.event));\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n/*\n * A Collectable entity\n */\n\n/**\n * @class\n * @extends me.Entity\n * @memberOf me\n * @constructor\n * @param {Number} x the x coordinates of the entity object\n * @param {Number} y the y coordinates of the entity object\n * @param {Object} settings See {@link me.Entity}\n */\nme.CollectableEntity = me.Entity.extend(\n/** @scope me.CollectableEntity.prototype */\n{\n    /** @ignore */\n    init : function (x, y, settings) {\n        // call the super constructor\n        me.Entity.prototype.init.apply(this, [x, y, settings]);\n        this.body.collisionType = me.collision.types.COLLECTABLE_OBJECT;\n    }\n});\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n\n/*\n * A level entity\n */\n\n/**\n * @class\n * @extends me.Entity\n * @memberOf me\n * @constructor\n * @param {Number} x the x coordinates of the object\n * @param {Number} y the y coordinates of the object\n * @param {Object} settings See {@link me.Entity}\n * @param {String} [settings.duration] Fade duration (in ms)\n * @param {String|me.Color} [settings.color] Fade color\n * @param {String} [settings.to] TMX level to load\n * @param {String|me.Container} [settings.container] Target container. See {@link me.levelDirector.loadLevel}\n * @param {Function} [settings.onLoaded] Level loaded callback. See {@link me.levelDirector.loadLevel}\n * @param {Boolean} [settings.flatten] Flatten all objects into the target container. See {@link me.levelDirector.loadLevel}\n * @param {Boolean} [settings.setViewportBounds] Resize the viewport to match the level. See {@link me.levelDirector.loadLevel}\n * @example\n * me.game.world.addChild(new me.LevelEntity(\n *     x, y, {\n *         \"duration\" : 250,\n *         \"color\" : \"#000\",\n *         \"to\" : \"mymap2\"\n *     }\n * ));\n */\nme.LevelEntity = me.Entity.extend(\n/** @scope me.LevelEntity.prototype */\n{\n    /** @ignore */\n    init : function (x, y, settings) {\n        me.Entity.prototype.init.apply(this, [x, y, settings]);\n\n        this.nextlevel = settings.to;\n\n        this.fade = settings.fade;\n        this.duration = settings.duration;\n        this.fading = false;\n\n        this.name = \"levelEntity\";\n\n        // a temp variable\n        this.gotolevel = settings.to;\n\n        // Collect the defined level settings\n        this.loadLevelSettings = {};\n        [ \"container\", \"onLoaded\", \"flatten\", \"setViewportBounds\" ].forEach(function (v) {\n            if (typeof(settings[v]) !== \"undefined\") {\n                this.loadLevelSettings[v] = settings[v];\n            }\n        }.bind(this));\n\n        // Lookup container name\n        if (typeof(this.loadLevelSettings.container) === \"string\") {\n            this.loadLevelSettings.container = me.game.world.getChildByName(this.loadLevelSettings.container)[0];\n        }\n\n        this.body.collisionType = me.collision.types.ACTION_OBJECT;\n    },\n\n    /**\n     * @ignore\n     */\n    onFadeComplete : function () {\n        me.levelDirector.loadLevel(this.gotolevel, this.loadLevelSettings);\n        me.game.viewport.fadeOut(this.fade, this.duration);\n    },\n\n    /**\n     * go to the specified level\n     * @name goTo\n     * @memberOf me.LevelEntity\n     * @function\n     * @param {String} [level=this.nextlevel] name of the level to load\n     * @protected\n     */\n    goTo : function (level) {\n        this.gotolevel = level || this.nextlevel;\n        // load a level\n        //console.log(\"going to : \", to);\n        if (this.fade && this.duration) {\n            if (!this.fading) {\n                this.fading = true;\n                me.game.viewport.fadeIn(this.fade, this.duration,\n                        this.onFadeComplete.bind(this));\n            }\n        } else {\n            me.levelDirector.loadLevel(this.gotolevel, this.loadLevelSettings);\n        }\n    },\n\n    /** @ignore */\n    onCollision : function () {\n        if (this.name === \"levelEntity\") {\n            this.goTo();\n        }\n        return false;\n    }\n});\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    // generate a default image for the particles\n    var pixel = (function () {\n        var canvas = me.video.createCanvas(1, 1);\n        var context = canvas.getContext(\"2d\");\n        context.fillStyle = \"#fff\";\n        context.fillRect(0, 0, 1, 1);\n        return canvas;\n    })();\n\n    /**\n     * me.ParticleEmitterSettings contains the default settings for me.ParticleEmitter.<br>\n     *\n     * @protected\n     * @class\n     * @memberOf me\n     * @see me.ParticleEmitter\n     */\n    me.ParticleEmitterSettings = {\n        /**\n         * Width of the particle spawn area.<br>\n         * @public\n         * @type Number\n         * @name width\n         * @memberOf me.ParticleEmitterSettings\n         * @default 0\n         */\n        width : 0,\n\n        /**\n         * Height of the particle spawn area.<br>\n         * @public\n         * @type Number\n         * @name height\n         * @memberOf me.ParticleEmitterSettings\n         * @default 0\n         */\n        height : 0,\n\n        /**\n         * Image used for particles.<br>\n         * @public\n         * @type CanvasImageSource\n         * @name image\n         * @memberOf me.ParticleEmitterSettings\n         * @default 1x1 white pixel\n         * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasimagesource\n         */\n        image : pixel,\n\n        /**\n         * Total number of particles in the emitter.<br>\n         * @public\n         * @type Number\n         * @name totalParticles\n         * @default 50\n         * @memberOf me.ParticleEmitterSettings\n         */\n        totalParticles : 50,\n\n        /**\n         * Start angle for particle launch in Radians.<br>\n         * @public\n         * @type Number\n         * @name angle\n         * @default Math.PI / 2\n         * @memberOf me.ParticleEmitterSettings\n         */\n        angle : Math.PI / 2,\n\n        /**\n         * Variation in the start angle for particle launch in Radians.<br>\n         * @public\n         * @type Number\n         * @name angleVariation\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        angleVariation : 0,\n\n        /**\n         * Minimum time each particle lives once it is emitted in ms.<br>\n         * @public\n         * @type Number\n         * @name minLife\n         * @default 1000\n         * @memberOf me.ParticleEmitterSettings\n         */\n        minLife : 1000,\n\n        /**\n         * Maximum time each particle lives once it is emitted in ms.<br>\n         * @public\n         * @type Number\n         * @name maxLife\n         * @default 3000\n         * @memberOf me.ParticleEmitterSettings\n         */\n        maxLife : 3000,\n\n        /**\n         * Start speed of particles.<br>\n         * @public\n         * @type Number\n         * @name speed\n         * @default 2\n         * @memberOf me.ParticleEmitterSettings\n         */\n        speed : 2,\n\n        /**\n         * Variation in the start speed of particles.<br>\n         * @public\n         * @type Number\n         * @name speedVariation\n         * @default 1\n         * @memberOf me.ParticleEmitterSettings\n         */\n        speedVariation : 1,\n\n        /**\n         * Minimum start rotation for particles sprites in Radians.<br>\n         * @public\n         * @type Number\n         * @name minRotation\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        minRotation : 0,\n\n        /**\n         * Maximum start rotation for particles sprites in Radians.<br>\n         * @public\n         * @type Number\n         * @name maxRotation\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        maxRotation : 0,\n\n        /**\n         * Minimum start scale ratio for particles (1 = no scaling).<br>\n         * @public\n         * @type Number\n         * @name minStartScale\n         * @default 1\n         * @memberOf me.ParticleEmitterSettings\n         */\n        minStartScale : 1,\n\n        /**\n         * Maximum start scale ratio for particles (1 = no scaling).<br>\n         * @public\n         * @type Number\n         * @name maxStartScale\n         * @default 1\n         * @memberOf me.ParticleEmitterSettings\n         */\n        maxStartScale : 1,\n\n        /**\n         * Minimum end scale ratio for particles.<br>\n         * @public\n         * @type Number\n         * @name minEndScale\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        minEndScale : 0,\n\n        /**\n         * Maximum end scale ratio for particles.<br>\n         * @public\n         * @type Number\n         * @name maxEndScale\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        maxEndScale : 0,\n\n        /**\n         * Vertical force (Gravity) for each particle.<br>\n         * @public\n         * @type Number\n         * @name gravity\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         * @see me.sys.gravity\n         */\n        gravity : 0,\n\n        /**\n         * Horizontal force (like a Wind) for each particle.<br>\n         * @public\n         * @type Number\n         * @name wind\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        wind : 0,\n\n        /**\n         * Update the rotation of particle in accordance the particle trajectory.<br>\n         * The particle sprite should aim at zero angle (draw from left to right).<br>\n         * Override the particle minRotation and maxRotation.<br>\n         * @public\n         * @type Boolean\n         * @name followTrajectory\n         * @default false\n         * @memberOf me.ParticleEmitterSettings\n         */\n        followTrajectory : false,\n\n        /**\n         * Enable the Texture Additive by canvas composite operation (lighter).<br>\n         * WARNING: Composite Operation may decreases performance!.<br>\n         * @public\n         * @type Boolean\n         * @name textureAdditive\n         * @default false\n         * @memberOf me.ParticleEmitterSettings\n         */\n        textureAdditive : false,\n\n        /**\n         * Update particles only in the viewport, remove it when out of viewport.<br>\n         * @public\n         * @type Boolean\n         * @name onlyInViewport\n         * @default true\n         * @memberOf me.ParticleEmitterSettings\n         */\n        onlyInViewport : true,\n\n        /**\n         * Render particles in screen space. <br>\n         * @public\n         * @type Boolean\n         * @name floating\n         * @default false\n         * @memberOf me.ParticleEmitterSettings\n         */\n        floating : false,\n\n        /**\n         * Maximum number of particles launched each time in this emitter (used only if emitter is Stream).<br>\n         * @public\n         * @type Number\n         * @name maxParticles\n         * @default 10\n         * @memberOf me.ParticleEmitterSettings\n         */\n        maxParticles : 10,\n\n        /**\n         * How often a particle is emitted in ms (used only if emitter is Stream).<br>\n         * Necessary that value is greater than zero.<br>\n         * @public\n         * @type Number\n         * @name frequency\n         * @default 100\n         * @memberOf me.ParticleEmitterSettings\n         */\n        frequency : 100,\n\n        /**\n         * Duration that the emitter releases particles in ms (used only if emitter is Stream).<br>\n         * After this period, the emitter stop the launch of particles.<br>\n         * @public\n         * @type Number\n         * @name duration\n         * @default Infinity\n         * @memberOf me.ParticleEmitterSettings\n         */\n        duration : Infinity,\n\n        /**\n         * Skip n frames after updating the particle system once. <br>\n         * This can be used to reduce the performance impact of emitters with many particles.<br>\n         * @public\n         * @type Number\n         * @name framesToSkip\n         * @default 0\n         * @memberOf me.ParticleEmitterSettings\n         */\n        framesToSkip : 0\n    };\n\n    /**\n     * Particle Emitter Object.\n     * @class\n     * @extends Rect\n     * @memberOf me\n     * @constructor\n     * @param {Number} x x-position of the particle emitter\n     * @param {Number} y y-position of the particle emitter\n     * @param {object} settings An object containing the settings for the particle emitter. See {@link me.ParticleEmitterSettings}\n     * @example\n     *\n     * // Create a basic emitter at position 100, 100\n     * var emitter = new me.ParticleEmitter(100, 100);\n     *\n     * // Adjust the emitter properties\n     * emitter.totalParticles = 200;\n     * emitter.minLife = 1000;\n     * emitter.maxLife = 3000;\n     * emitter.z = 10;\n     *\n     * // Add the emitter to the game world\n     * me.game.world.addChild(emitter);\n     * me.game.world.addChild(emitter.container);\n     *\n     * // Launch all particles one time and stop, like a explosion\n     * emitter.burstParticles();\n     *\n     * // Launch constantly the particles, like a fountain\n     * emitter.streamParticles();\n     *\n     * // At the end, remove emitter from the game world\n     * // call this in onDestroyEvent function\n     * me.game.world.removeChild(emitter);\n     *\n     */\n    me.ParticleEmitter = me.Rect.extend(\n    /** @scope me.ParticleEmitter.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init: function (x, y, settings) {\n            // Emitter is Stream, launch particles constantly\n            /** @ignore */\n            this._stream = false;\n\n            // Frequency timer (in ms) for emitter launch new particles\n            // used only in stream emitter\n            /** @ignore */\n            this._frequencyTimer = 0;\n\n            // Time of live (in ms) for emitter launch new particles\n            // used only in stream emitter\n            /** @ignore */\n            this._durationTimer = 0;\n\n            // Emitter is emitting particles\n            /** @ignore */\n            this._enabled = false;\n            // Emitter will always update\n            this.isRenderable = false;\n            // call the super constructor\n            me.Rect.prototype.init.apply(this,\n                [x, y,\n                Infinity,\n                Infinity]\n            );\n\n            // don't sort the particles by z-index\n            this.autoSort = false;\n\n            this.container = new me.ParticleContainer(this);\n\n            /**\n             * @ignore\n             */\n            Object.defineProperty(this.pos, \"z\", {\n                get : (function () { return this.container.pos.z; }).bind(this),\n                set : (function (value) { this.container.pos.z = value; }).bind(this),\n                enumerable : true,\n                configurable : true\n            });\n\n            /**\n             * Floating property for particles, value is forwarded to the particle container <br>\n             * @type Boolean\n             * @name floating\n             * @memberOf me.ParticleEmitter\n             */\n            Object.defineProperty(this, \"floating\", {\n                get : function () { return this.container.floating; },\n                set : function (value) { this.container.floating = value; },\n                enumerable : true,\n                configurable : true\n            });\n\n            // Reset the emitter to defaults\n            this.reset(settings);\n        },\n        \n        onActivateEvent: function() {\n            this.ancestor.addChild(this.container);\n            this.container.pos.z = this.pos.z;\n            if (!this.ancestor.autoSort) {\n                this.ancestor.sort();\n            }\n        },\n        \n        onDeactivateEvent: function() {\n            this.container.ancestor.removeChild(this.container);\n        },\n\n        destroy: function () {\n            this.reset();\n        },\n\n        /**\n         * returns a random point inside the bounds for this emitter\n         * @name getRandomPoint\n         * @memberOf me.ParticleEmitter\n         * @function\n         * @return {me.Vector2d} new vector\n         */\n        getRandomPoint: function () {\n            var vector = this.pos.clone();\n            vector.x += (0).randomFloat(this.width);\n            vector.y += (0).randomFloat(this.height);\n            return vector;\n        },\n\n        /**\n         * Reset the emitter with default values.<br>\n         * @function\n         * @param {Object} settings [optional] object with emitter settings. See {@link me.ParticleEmitterSettings}\n         * @name reset\n         * @memberOf me.ParticleEmitter\n         */\n        reset: function (settings) {\n            // check if settings exists and create a dummy object if necessary\n            settings = settings || {};\n            var defaults = me.ParticleEmitterSettings;\n\n            var width = (typeof settings.width === \"number\") ? settings.width : defaults.width;\n            var height = (typeof settings.height === \"number\") ? settings.height : defaults.height;\n            this.resize(width, height);\n\n            Object.assign(this, defaults, settings);\n\n            // reset particle container values\n            this.container.destroy();\n        },\n\n        // Add count particles in the game world\n        /** @ignore */\n        addParticles: function (count) {\n            for (var i = 0; i < ~~count; i++) {\n                // Add particle to the container\n                var particle = me.pool.pull(\"me.Particle\", this);\n                this.container.addChild(particle);\n            }\n        },\n\n        /**\n         * Emitter is of type stream and is launching particles <br>\n         * @function\n         * @returns {Boolean} Emitter is Stream and is launching particles\n         * @name isRunning\n         * @memberOf me.ParticleEmitter\n         */\n        isRunning: function () {\n            return this._enabled && this._stream;\n        },\n\n        /**\n         * Launch particles from emitter constantly <br>\n         * Particles example: Fountains\n         * @param {Number} duration [optional] time that the emitter releases particles in ms\n         * @function\n         * @name streamParticles\n         * @memberOf me.ParticleEmitter\n         */\n        streamParticles: function (duration) {\n            this._enabled = true;\n            this._stream = true;\n            this.frequency = Math.max(this.frequency, 1);\n            this._durationTimer = (typeof duration === \"number\") ? duration : this.duration;\n        },\n\n        /**\n         * Stop the emitter from generating new particles (used only if emitter is Stream) <br>\n         * @function\n         * @name stopStream\n         * @memberOf me.ParticleEmitter\n         */\n        stopStream: function () {\n            this._enabled = false;\n        },\n\n        /**\n         * Launch all particles from emitter and stop <br>\n         * Particles example: Explosions <br>\n         * @param {Number} total [optional] number of particles to launch\n         * @function\n         * @name burstParticles\n         * @memberOf me.ParticleEmitter\n         */\n        burstParticles: function (total) {\n            this._enabled = true;\n            this._stream = false;\n            this.addParticles((typeof total === \"number\") ? total : this.totalParticles);\n            this._enabled = false;\n        },\n\n        /**\n         * @ignore\n         */\n        update: function (dt) {\n            // Launch new particles, if emitter is Stream\n            if ((this._enabled) && (this._stream)) {\n                // Check if the emitter has duration set\n                if (this._durationTimer !== Infinity) {\n                    this._durationTimer -= dt;\n\n                    if (this._durationTimer <= 0) {\n                        this.stopStream();\n                        return false;\n                    }\n                }\n\n                // Increase the emitter launcher timer\n                this._frequencyTimer += dt;\n\n                // Check for new particles launch\n                var particlesCount = this.container.children.length;\n                if ((particlesCount < this.totalParticles) && (this._frequencyTimer >= this.frequency)) {\n                    if ((particlesCount + this.maxParticles) <= this.totalParticles) {\n                        this.addParticles(this.maxParticles);\n                    }\n                    else {\n                        this.addParticles(this.totalParticles - particlesCount);\n                    }\n\n                    this._frequencyTimer = 0;\n                }\n            }\n            return true;\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * Particle Container Object.\n     * @class\n     * @extends me.Container\n     * @memberOf me\n     * @constructor\n     * @param {me.ParticleEmitter} emitter the emitter which owns this container\n     */\n    me.ParticleContainer = me.Container.extend(\n    /** @scope ParticleContainer */\n    {\n        /**\n         * @ignore\n         */\n        init: function (emitter) {\n            // cache a reference to the viewport to use as our bounding box\n            this._viewport = me.game.viewport;\n\n            // call the super constructor\n            me.Container.prototype.init.apply(this);\n\n            // don't sort the particles by z-index\n            this.autoSort = false;\n\n            // count the updates\n            this._updateCount = 0;\n\n            // internally store how much time was skipped when frames are skipped\n            this._dt = 0;\n\n            // cache the emitter for later use\n            this._emitter = emitter;\n        },\n\n        /**\n         * @ignore\n         */\n        getBounds : function () {\n            return this._viewport;\n        },\n\n        /**\n         * @ignore\n         */\n        update: function (dt) {\n            // skip frames if necessary\n            if (++this._updateCount > this._emitter.framesToSkip) {\n                this._updateCount = 0;\n            }\n            if (this._updateCount > 0) {\n                this._dt += dt;\n                return false;\n            }\n\n            // apply skipped delta time\n            dt += this._dt;\n            this._dt = 0;\n\n            // Update particles and remove them if they are dead\n            var viewport = me.game.viewport;\n            for (var i = this.children.length - 1; i >= 0; --i) {\n                var particle = this.children[i];\n                particle.isRenderable = true;\n                // particle.inViewport = viewport.isVisible(particle);\n                particle.inViewport = this.floating || (\n                    particle.pos.x < viewport.pos.x + viewport.width &&\n                    viewport.pos.x < particle.pos.x + particle.width &&\n                    particle.pos.y < viewport.pos.y + viewport.height &&\n                    viewport.pos.y < particle.pos.y + particle.height\n                );\n                if (!particle.update(dt)) {\n                    this.removeChildNow(particle);\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @ignore\n         */\n        draw : function (renderer, rect) {\n            if (this.children.length > 0) {\n                var context = renderer.getContext(),\n                    gco;\n                // Check for additive draw\n                if (this._emitter.textureAdditive) {\n                    gco = context.globalCompositeOperation;\n                    context.globalCompositeOperation = \"lighter\";\n                }\n\n                me.Container.prototype.draw.apply(this, [renderer, rect]);\n\n                // Restore globalCompositeOperation\n                if (this._emitter.textureAdditive) {\n                    context.globalCompositeOperation = gco;\n                }\n            }\n        }\n    });\n})();\n\n/*\n * MelonJS Game Engine\n * Copyright (C) 2011 - 2016, Olivier Biot, Jason Oster, Aaron McLeod\n * http://www.melonjs.org\n *\n */\n(function () {\n    /**\n     * Single Particle Object.\n     * @class\n     * @extends me.Renderable\n     * @memberOf me\n     * @constructor\n     * @param {me.ParticleEmitter} particle emitter\n     */\n    me.Particle = me.Renderable.extend(\n    /** @scope me.Particle.prototype */\n    {\n        /**\n         * @ignore\n         */\n        init : function (emitter) {\n            // Call the super constructor\n            var point = emitter.getRandomPoint();\n            me.Renderable.prototype.init.apply(this, [point.x, point.y, emitter.image.width, emitter.image.height]);\n\n            // Particle will always update\n            this.alwaysUpdate = true;\n\n            // Particle will not act as a rednerable\n            // FIXME: This is probably not needed. It's a hack that tries to\n            // workaround performance issues within container.\n            this.isRenderable = false;\n\n            // Cache the image reference\n            this.image = emitter.image;\n\n            // Set the start particle Angle and Speed as defined in emitter\n            var angle = emitter.angle + ((emitter.angleVariation > 0) ? ((0).randomFloat(2) - 1) * emitter.angleVariation : 0);\n            var speed = emitter.speed + ((emitter.speedVariation > 0) ? ((0).randomFloat(2) - 1) * emitter.speedVariation : 0);\n\n            // Set the start particle Velocity\n            this.vel = new me.Vector2d(speed * Math.cos(angle), -speed * Math.sin(angle));\n\n            // Set the start particle Time of Life as defined in emitter\n            this.life = emitter.minLife.randomFloat(emitter.maxLife);\n            this.startLife = this.life;\n\n            // Set the start and end particle Scale as defined in emitter\n            // clamp the values as minimum and maximum scales range\n            this.startScale = emitter.minStartScale.randomFloat(\n                emitter.maxStartScale\n            ).clamp(emitter.minStartScale, emitter.maxStartScale);\n            this.endScale = emitter.minEndScale.randomFloat(\n                emitter.maxEndScale\n            ).clamp(emitter.minEndScale, emitter.maxEndScale);\n\n            // Set the particle Gravity and Wind (horizontal gravity) as defined in emitter\n            this.gravity = emitter.gravity;\n            this.wind = emitter.wind;\n\n            // Set if the particle update the rotation in accordance the trajectory\n            this.followTrajectory = emitter.followTrajectory;\n\n            // Set if the particle update only in Viewport\n            this.onlyInViewport = emitter.onlyInViewport;\n\n            // Set the particle Z Order\n            this.pos.z = emitter.z;\n\n            // cache inverse of the expected delta time\n            this._deltaInv = me.sys.fps / 1000;\n\n            this.transform = new me.Matrix2d();\n\n            // Set the start particle rotation as defined in emitter\n            // if the particle not follow trajectory\n            if (!emitter.followTrajectory) {\n                this.angle = emitter.minRotation.randomFloat(emitter.maxRotation);\n            }\n        },\n\n        /**\n         * Update the Particle <br>\n         * This is automatically called by the game manager {@link me.game}\n         * @name update\n         * @memberOf me.Particle\n         * @function\n         * @ignore\n         * @param {Number} dt time since the last update in milliseconds\n         */\n        update : function (dt) {\n            // move things forward independent of the current frame rate\n            var skew = dt * this._deltaInv;\n\n            // Decrease particle life\n            this.life = this.life > dt ? this.life - dt : 0;\n\n            // Calculate the particle Age Ratio\n            var ageRatio = this.life / this.startLife;\n\n            // Resize the particle as particle Age Ratio\n            var scale = this.startScale;\n            if (this.startScale > this.endScale) {\n                scale *= ageRatio;\n                scale = (scale < this.endScale) ? this.endScale : scale;\n            }\n            else if (this.startScale < this.endScale) {\n                scale /= ageRatio;\n                scale = (scale > this.endScale) ? this.endScale : scale;\n            }\n\n            // Set the particle opacity as Age Ratio\n            this.alpha = ageRatio;\n\n            // Adjust the particle velocity\n            this.vel.x += this.wind * skew;\n            this.vel.y += this.gravity * skew;\n\n            // If necessary update the rotation of particle in accordance the particle trajectory\n            var angle = this.followTrajectory ? Math.atan2(this.vel.y, this.vel.x) : this.angle;\n\n            this.pos.x += this.vel.x * skew;\n            this.pos.y += this.vel.y * skew;\n\n            // Update particle transform\n            this.transform.set(\n                scale, 0, 0,\n                0, scale, 0,\n                ~~this.pos.x, ~~this.pos.y, 1\n            ).rotate(angle);\n\n            // Return true if the particle is not dead yet\n            return (this.inViewport || !this.onlyInViewport) && (this.life > 0);\n        },\n\n        draw : function (renderer) {\n            renderer.save();\n\n            // particle alpha value\n            renderer.setGlobalAlpha(renderer.globalAlpha() * this.alpha);\n\n            // translate to the defined anchor point and scale it\n            renderer.transform(this.transform);\n\n            var w = this.width, h = this.height;\n            renderer.drawImage(\n                this.image,\n                0, 0,\n                w, h,\n                -w / 2, -h / 2,\n                w, h\n            );\n\n            renderer.restore();\n        }\n    });\n\n\n    /*---------------------------------------------------------*/\n    // END END END\n    /*---------------------------------------------------------*/\n})(window);\n"]}